
AVRASM ver. 2.1.30  C:\Users\정민규\Desktop\마이크로프로세서2\TWI\twi_distance\Debug\List\twi_distance.asm Wed Nov 17 13:00:18 2021

C:\Users\정민규\Desktop\마이크로프로세서2\TWI\twi_distance\Debug\List\twi_distance.asm(1416): warning: Register r5 already defined by the .DEF directive
C:\Users\정민규\Desktop\마이크로프로세서2\TWI\twi_distance\Debug\List\twi_distance.asm(1417): warning: Register r4 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.45 
                 ;(C) Copyright 1998-2021 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128
                 ;Program type           : Application
                 ;Clock frequency        : 14.745600 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : long, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _ti_Cnt_1ms=R5
                 	.DEF _LCD_DelCnt_1ms=R4
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0058 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 01c6 	JMP  _timer0_comp
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _0x0:
000046 2020
000047 2020
000048 2020
000049 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00004a 2020
00004b 2020
00004c 2020
00004d 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00004e 2020
00004f 2020
000050 2500
000051 3330      	.DB  0x20,0x20,0x20,0x20,0x0,0x25,0x30,0x33
000052 6364
000053 006d      	.DB  0x64,0x63,0x6D,0x0
                 
                 __GLOBAL_INI_TBL:
000054 0015      	.DW  0x15
000055 0500      	.DW  _0xA
000056 008c      	.DW  _0x0*2
                 
                 _0xFFFFFFFF:
000057 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000058 94f8      	CLI
000059 27ee      	CLR  R30
00005a bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00005b e0f1      	LDI  R31,1
00005c bff5      	OUT  MCUCR,R31
00005d bfe5      	OUT  MCUCR,R30
00005e 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
000060 e08d      	LDI  R24,(14-2)+1
000061 e0a2      	LDI  R26,2
000062 27bb      	CLR  R27
                 __CLEAR_REG:
000063 93ed      	ST   X+,R30
000064 958a      	DEC  R24
000065 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000066 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000067 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000068 e0a0      	LDI  R26,LOW(__SRAM_START)
000069 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00006a 93ed      	ST   X+,R30
00006b 9701      	SBIW R24,1
00006c f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00006d eae8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00006e e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00006f 9185      	LPM  R24,Z+
000070 9195      	LPM  R25,Z+
000071 9700      	SBIW R24,0
000072 f061      	BREQ __GLOBAL_INI_END
000073 91a5      	LPM  R26,Z+
000074 91b5      	LPM  R27,Z+
000075 9005      	LPM  R0,Z+
000076 9015      	LPM  R1,Z+
000077 01bf      	MOVW R22,R30
000078 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000079 9005      	LPM  R0,Z+
00007a 920d      	ST   X+,R0
00007b 9701      	SBIW R24,1
00007c f7e1      	BRNE __GLOBAL_INI_LOOP
00007d 01fb      	MOVW R30,R22
00007e cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
00007f bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000080 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000081 bfed      	OUT  SPL,R30
000082 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000083 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000084 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000085 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000086 940c 01e6 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 
                 	.CSEG
                 _LCD_PORT_Init:
                 ; .FSTART _LCD_PORT_Init
000088 efef      	LDI  R30,LOW(255)
000089 bbea      	OUT  0x1A,R30
00008a e1ef      	LDI  R30,LOW(31)
00008b 93e0 0064 	STS  100,R30
00008d 9508      	RET
                 ; .FEND
                 _LCD_Data:
                 ; .FSTART _LCD_Data
00008e d36e      	RCALL SUBOPT_0x0
                 ;	ch -> R17
00008f 60e4      	ORI  R30,4
000090 d371      	RCALL SUBOPT_0x1
000091 7fed      	ANDI R30,0xFD
000092 d36f      	RCALL SUBOPT_0x1
000093 d373      	RCALL SUBOPT_0x2
000094 c0f3      	RJMP _0x2060004
                 ; .FEND
                 _LCD_Comm:
                 ; .FSTART _LCD_Comm
000095 d367      	RCALL SUBOPT_0x0
                 ;	ch -> R17
000096 7feb      	ANDI R30,0xFB
000097 d36a      	RCALL SUBOPT_0x1
000098 7fed      	ANDI R30,0xFD
000099 d368      	RCALL SUBOPT_0x1
00009a d36c      	RCALL SUBOPT_0x2
00009b c0ec      	RJMP _0x2060004
                 ; .FEND
                 _LCD_delay:
                 ; .FSTART _LCD_delay
00009c 931a      	ST   -Y,R17
00009d 2f1a      	MOV  R17,R26
                 ;	ms -> R17
00009e 27bb      	CLR  R27
00009f d427      	RCALL _delay_ms
0000a0 c0e7      	RJMP _0x2060004
                 ; .FEND
                 _LCD_Pos:
                 ; .FSTART _LCD_Pos
0000a1 931a      	ST   -Y,R17
0000a2 930a      	ST   -Y,R16
0000a3 2f1a      	MOV  R17,R26
0000a4 810a      	LDD  R16,Y+2
                 ;	col -> R16
                 ;	row -> R17
0000a5 e4a0      	LDI  R26,LOW(64)
0000a6 020a      	MULS R16,R26
0000a7 01f0      	MOVW R30,R0
0000a8 0fe1      	ADD  R30,R17
0000a9 68e0      	ORI  R30,0x80
0000aa 2fae      	MOV  R26,R30
0000ab dfe9      	RCALL _LCD_Comm
0000ac 8119      	LDD  R17,Y+1
0000ad 8108      	LDD  R16,Y+0
0000ae 9623      	ADIW R28,3
0000af 9508      	RET
                 ; .FEND
                 _LCD_Char:
                 ; .FSTART _LCD_Char
0000b0 931a      	ST   -Y,R17
0000b1 2f1a      	MOV  R17,R26
                 ;	c -> R17
0000b2 dfdb      	RCALL _LCD_Data
0000b3 e0a1      	LDI  R26,LOW(1)
0000b4 e0b0      	LDI  R27,0
0000b5 d411      	RCALL _delay_ms
0000b6 c0d1      	RJMP _0x2060004
                 ; .FEND
                 _LCD_Str:
                 ; .FSTART _LCD_Str
0000b7 931a      	ST   -Y,R17
0000b8 930a      	ST   -Y,R16
0000b9 018d      	MOVW R16,R26
                 ;	*str -> R16,R17
                 _0x3:
0000ba 01d8      	MOVW R26,R16
0000bb 91ec      	LD   R30,X
0000bc 30e0      	CPI  R30,0
0000bd f029      	BREQ _0x5
0000be 91ac      	LD   R26,X
0000bf dff0      	RCALL _LCD_Char
                +
0000c0 5f0f     +SUBI R16 , LOW ( - 1 )
0000c1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0000c2 cff7      	RJMP _0x3
                 _0x5:
0000c3 9109      	LD   R16,Y+
0000c4 9119      	LD   R17,Y+
0000c5 9508      	RET
                 ; .FEND
                 ;	*str -> R18,R19
                 ;	loop_count -> R17
                 
                 	.DSEG
                 _0xA:
000500           	.BYTE 0x15
                 
                 	.CSEG
                 _LCD_Clear:
                 ; .FSTART _LCD_Clear
0000c6 e0a1      	LDI  R26,LOW(1)
0000c7 dfcd      	RCALL _LCD_Comm
0000c8 e0a2      	LDI  R26,LOW(2)
0000c9 dfd2      	RCALL _LCD_delay
0000ca 9508      	RET
                 ; .FEND
                 _LCD_Init:
                 ; .FSTART _LCD_Init
0000cb dfbc      	RCALL _LCD_PORT_Init
0000cc d34a      	RCALL SUBOPT_0x3
0000cd d349      	RCALL SUBOPT_0x3
0000ce d348      	RCALL SUBOPT_0x3
0000cf e0ae      	LDI  R26,LOW(14)
0000d0 dfc4      	RCALL _LCD_Comm
0000d1 e0a4      	LDI  R26,LOW(4)
0000d2 dfc9      	RCALL _LCD_delay
0000d3 e0a6      	LDI  R26,LOW(6)
0000d4 dfc0      	RCALL _LCD_Comm
0000d5 e0a4      	LDI  R26,LOW(4)
0000d6 dfc5      	RCALL _LCD_delay
0000d7 dfee      	RCALL _LCD_Clear
0000d8 9508      	RET
                 ; .FEND
                 ;	p -> R17
                 ;	p -> R17
                 _Init_TWI:
                 ; .FSTART _Init_TWI
0000d9 e3e2      	LDI  R30,LOW(50)
0000da 93e0 0070 	STS  112,R30
0000dc e0e4      	LDI  R30,LOW(4)
0000dd 93e0 0074 	STS  116,R30
0000df e0e0      	LDI  R30,LOW(0)
0000e0 93e0 0071 	STS  113,R30
0000e2 9508      	RET
                 ; .FEND
                 _TWI_TransCheck_ACK:
                 ; .FSTART _TWI_TransCheck_ACK
0000e3 d39c      	RCALL __SAVELOCR4
0000e4 2f3a      	MOV  R19,R26
                 ;	Stat -> R19
                 ;	ExtDev_ErrCnt -> R16,R17
                +
0000e5 e000     +LDI R16 , LOW ( 0 )
0000e6 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x12:
0000e7 91e0 0074 	LDS  R30,116
0000e9 78e0      	ANDI R30,LOW(0x80)
0000ea f451      	BRNE _0x14
0000eb 01d8      	MOVW R26,R16
                +
0000ec 5f0f     +SUBI R16 , LOW ( - 1 )
0000ed 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0000ee 3da1      	CPI  R26,LOW(0x7D1)
0000ef e0e7      	LDI  R30,HIGH(0x7D1)
0000f0 07be      	CPC  R27,R30
0000f1 f010      	BRLO _0x15
0000f2 e0e1      	LDI  R30,LOW(1)
0000f3 c0ef      	RJMP _0x2060003
                 _0x15:
0000f4 cff2      	RJMP _0x12
                 _0x14:
0000f5 91e0 0071 	LDS  R30,113
0000f7 7fe8      	ANDI R30,LOW(0xF8)
0000f8 173e      	CP   R19,R30
0000f9 f011      	BREQ _0x16
0000fa e0e2      	LDI  R30,LOW(2)
0000fb c0e7      	RJMP _0x2060003
                 _0x16:
0000fc e0e0      	LDI  R30,LOW(0)
0000fd c0e5      	RJMP _0x2060003
                 ; .FEND
                 _TWI_Start:
                 ; .FSTART _TWI_Start
0000fe eae4      	LDI  R30,LOW(164)
0000ff 93e0 0074 	STS  116,R30
000101 e0a8      	LDI  R26,LOW(8)
000102 c010      	RJMP _0x2060007
                 ; .FEND
                 _TWI_Write_SLAW:
                 ; .FSTART _TWI_Write_SLAW
000103 d317      	RCALL SUBOPT_0x4
                 ;	Addr -> R17
000104 e1a8      	LDI  R26,LOW(24)
000105 dfdd      	RCALL _TWI_TransCheck_ACK
000106 c081      	RJMP _0x2060004
                 ; .FEND
                 _TWI_Write_Data:
                 ; .FSTART _TWI_Write_Data
000107 d313      	RCALL SUBOPT_0x4
                 ;	Data -> R17
000108 e2a8      	LDI  R26,LOW(40)
000109 dfd9      	RCALL _TWI_TransCheck_ACK
00010a c07d      	RJMP _0x2060004
                 ; .FEND
                 _TWI_Stop:
                 ; .FSTART _TWI_Stop
00010b e9e4      	LDI  R30,LOW(148)
00010c 93e0 0074 	STS  116,R30
00010e 9508      	RET
                 ; .FEND
                 _TWI_Restart:
                 ; .FSTART _TWI_Restart
00010f eae4      	LDI  R30,LOW(164)
000110 93e0 0074 	STS  116,R30
000112 e1a0      	LDI  R26,LOW(16)
                 _0x2060007:
000113 dfcf      	RCALL _TWI_TransCheck_ACK
000114 9508      	RET
                 ; .FEND
                 ;	Data -> R19
                 ;	Addr -> R16
                 ;	ret_err -> R17
                 _TWI_Write_SLAR:
                 ; .FSTART _TWI_Write_SLAR
000115 931a      	ST   -Y,R17
000116 2f1a      	MOV  R17,R26
                 ;	Addr -> R17
000117 2fe1      	MOV  R30,R17
000118 60e1      	ORI  R30,1
000119 93e0 0073 	STS  115,R30
00011b e8e4      	LDI  R30,LOW(132)
00011c 93e0 0074 	STS  116,R30
00011e e4a0      	LDI  R26,LOW(64)
00011f dfc3      	RCALL _TWI_TransCheck_ACK
000120 c067      	RJMP _0x2060004
                 ; .FEND
                 ;	*Data -> R18,R19
                 ;	ret_err -> R17
                 _TWI_Read_Data_NACK:
                 ; .FSTART _TWI_Read_Data_NACK
000121 d35e      	RCALL __SAVELOCR4
000122 019d      	MOVW R18,R26
                 ;	*Data -> R18,R19
                 ;	ret_err -> R17
000123 e010      	LDI  R17,0
000124 e8e4      	LDI  R30,LOW(132)
000125 93e0 0074 	STS  116,R30
000127 e5a8      	LDI  R26,LOW(88)
000128 dfba      	RCALL _TWI_TransCheck_ACK
000129 2f1e      	MOV  R17,R30
00012a 91e0 0073 	LDS  R30,115
00012c 01d9      	MOVW R26,R18
00012d 93ec      	ST   X,R30
00012e e0e0      	LDI  R30,LOW(0)
00012f c0b3      	RJMP _0x2060003
                 ; .FEND
                 ;	Addr -> R21
                 ;	*Data -> R18,R19
                 ;	rec_data -> R17
                 ;	ret_err -> R16
                 ;	Slave_Addr -> R17
                 ;	*Data -> R18,R19
                 ;	ret_err -> R17
                 ;	*Data -> R18,R19
                 ;	ret_err -> R17
                 ;	rec_data -> R16
                 ;	devAddr -> R20
                 ;	regAddr -> R21
                 ;	*Data -> R18,R19
                 ;	rec_data -> R17
                 ;	ret_err -> R16
                 _SRF02_I2C_Write:
                 ; .FSTART _SRF02_I2C_Write
000130 d34f      	RCALL __SAVELOCR4
000131 2f0a      	MOV  R16,R26
000132 813c      	LDD  R19,Y+4
000133 812d      	LDD  R18,Y+5
                 ;	address -> R18
                 ;	reg -> R19
                 ;	data -> R16
                 ;	ret_err -> R17
000134 e010      	LDI  R17,0
000135 dfc8      	RCALL _TWI_Start
000136 2f1e      	MOV  R17,R30
000137 2fa2      	MOV  R26,R18
000138 dfca      	RCALL _TWI_Write_SLAW
000139 2f1e      	MOV  R17,R30
00013a 3010      	CPI  R17,0
00013b f009      	BREQ _0x29
00013c c00e      	RJMP _0x2060006
                 _0x29:
00013d 2fa3      	MOV  R26,R19
00013e dfc8      	RCALL _TWI_Write_Data
00013f 2f1e      	MOV  R17,R30
000140 3010      	CPI  R17,0
000141 f009      	BREQ _0x2A
000142 c008      	RJMP _0x2060006
                 _0x2A:
000143 2fa0      	MOV  R26,R16
000144 dfc2      	RCALL _TWI_Write_Data
000145 2f1e      	MOV  R17,R30
000146 3010      	CPI  R17,0
000147 f009      	BREQ _0x2B
000148 c002      	RJMP _0x2060006
                 _0x2B:
000149 dfc1      	RCALL _TWI_Stop
00014a e0e0      	LDI  R30,LOW(0)
                 _0x2060006:
00014b d33b      	RCALL __LOADLOCR4
00014c 9626      	ADIW R28,6
00014d 9508      	RET
                 ; .FEND
                 _SRF02_I2C_Read:
                 ; .FSTART _SRF02_I2C_Read
00014e d32f      	RCALL __SAVELOCR6
00014f 019d      	MOVW R18,R26
000150 815e      	LDD  R21,Y+6
000151 814f      	LDD  R20,Y+7
                 ;	address -> R20
                 ;	reg -> R21
                 ;	*Data -> R18,R19
                 ;	read_data -> R17
                 ;	ret_err -> R16
000152 e010      	LDI  R17,0
000153 e000      	LDI  R16,0
000154 dfa9      	RCALL _TWI_Start
000155 2f0e      	MOV  R16,R30
000156 2fa4      	MOV  R26,R20
000157 dfab      	RCALL _TWI_Write_SLAW
000158 2f0e      	MOV  R16,R30
000159 3000      	CPI  R16,0
00015a f009      	BREQ _0x2C
00015b c022      	RJMP _0x2060005
                 _0x2C:
00015c 2fa5      	MOV  R26,R21
00015d dfa9      	RCALL _TWI_Write_Data
00015e 2f0e      	MOV  R16,R30
00015f 3000      	CPI  R16,0
000160 f009      	BREQ _0x2D
000161 c01c      	RJMP _0x2060005
                 _0x2D:
000162 dfac      	RCALL _TWI_Restart
000163 2f0e      	MOV  R16,R30
000164 9ac3      	SBI  0x18,3
000165 3000      	CPI  R16,0
000166 f009      	BREQ _0x2E
000167 c016      	RJMP _0x2060005
                 _0x2E:
000168 2fa4      	MOV  R26,R20
000169 dfab      	RCALL _TWI_Write_SLAR
00016a 2f0e      	MOV  R16,R30
00016b 9ac4      	SBI  0x18,4
00016c 3000      	CPI  R16,0
00016d f009      	BREQ _0x2F
00016e c00f      	RJMP _0x2060005
                 _0x2F:
00016f b7ad      	IN   R26,SPL
000170 b7be      	IN   R27,SPH
000171 931f      	PUSH R17
000172 dfae      	RCALL _TWI_Read_Data_NACK
000173 911f      	POP  R17
000174 2f0e      	MOV  R16,R30
000175 9ac5      	SBI  0x18,5
000176 3000      	CPI  R16,0
000177 f009      	BREQ _0x30
000178 c005      	RJMP _0x2060005
                 _0x30:
000179 df91      	RCALL _TWI_Stop
00017a 2fe1      	MOV  R30,R17
00017b 01d9      	MOVW R26,R18
00017c 93ec      	ST   X,R30
00017d e0e0      	LDI  R30,LOW(0)
                 _0x2060005:
00017e d306      	RCALL __LOADLOCR6
00017f 9628      	ADIW R28,8
000180 9508      	RET
                 ; .FEND
                 _startRanging:
                 ; .FSTART _startRanging
000181 931a      	ST   -Y,R17
000182 2f1a      	MOV  R17,R26
                 ;	addr -> R17
000183 931a      	ST   -Y,R17
000184 e0e0      	LDI  R30,LOW(0)
000185 93ea      	ST   -Y,R30
000186 e5a1      	LDI  R26,LOW(81)
000187 dfa8      	RCALL _SRF02_I2C_Write
                 _0x2060004:
000188 9119      	LD   R17,Y+
000189 9508      	RET
                 ; .FEND
                 _getRange:
                 ; .FSTART _getRange
00018a d2f3      	RCALL __SAVELOCR6
00018b 019d      	MOVW R18,R26
00018c 815e      	LDD  R21,Y+6
                 ;	addr -> R21
                 ;	*pDistance -> R18,R19
                 ;	temp -> R17
                 ;	res -> R16
00018d e000      	LDI  R16,0
00018e 935a      	ST   -Y,R21
00018f e0e2      	LDI  R30,LOW(2)
000190 93ea      	ST   -Y,R30
000191 b7ad      	IN   R26,SPL
000192 b7be      	IN   R27,SPH
000193 931f      	PUSH R17
000194 dfb9      	RCALL _SRF02_I2C_Read
000195 911f      	POP  R17
000196 2f0e      	MOV  R16,R30
000197 3000      	CPI  R16,0
000198 f011      	BREQ _0x31
000199 e0f0      	LDI  R31,0
00019a c0bb      	RJMP _0x2060002
                 _0x31:
00019b 2ff1      	MOV  R31,R17
00019c e0e0      	LDI  R30,LOW(0)
00019d 01d9      	MOVW R26,R18
00019e 93ed      	ST   X+,R30
00019f 93fc      	ST   X,R31
0001a0 935a      	ST   -Y,R21
0001a1 e0e3      	LDI  R30,LOW(3)
0001a2 93ea      	ST   -Y,R30
0001a3 b7ad      	IN   R26,SPL
0001a4 b7be      	IN   R27,SPH
0001a5 931f      	PUSH R17
0001a6 dfa7      	RCALL _SRF02_I2C_Read
0001a7 911f      	POP  R17
0001a8 2f0e      	MOV  R16,R30
0001a9 3000      	CPI  R16,0
0001aa f011      	BREQ _0x32
0001ab e0f0      	LDI  R31,0
0001ac c0a9      	RJMP _0x2060002
                 _0x32:
0001ad 01f9      	MOVW R30,R18
0001ae 010f      	MOVW R0,R30
0001af 01df      	MOVW R26,R30
0001b0 91ed      	LD   R30,X+
0001b1 91fd      	LD   R31,X+
0001b2 01df      	MOVW R26,R30
0001b3 2fe1      	MOV  R30,R17
0001b4 e0f0      	LDI  R31,0
0001b5 2bea      	OR   R30,R26
0001b6 2bfb      	OR   R31,R27
0001b7 01d0      	MOVW R26,R0
0001b8 93ed      	ST   X+,R30
0001b9 93fc      	ST   X,R31
0001ba 2fe0      	MOV  R30,R16
0001bb e0f0      	LDI  R31,0
0001bc c099      	RJMP _0x2060002
                 ; .FEND
                 ;	ori -> R19
                 ;	des -> R16
                 ;	res -> R17
                 ;void Timer0_Init()
                 ; 0000 000D {
                 _Timer0_Init:
                 ; .FSTART _Timer0_Init
                 ; 0000 000E TCCR0 = (1<<WGM01)|(1<<CS00)|(1<<CS01)|(1<<CS02);
0001bd e0ef      	LDI  R30,LOW(15)
0001be bfe3      	OUT  0x33,R30
                 ; 0000 000F TCNT0 = 0x00;
0001bf e0e0      	LDI  R30,LOW(0)
0001c0 bfe2      	OUT  0x32,R30
                 ; 0000 0010 OCR0 = 100;
0001c1 e6e4      	LDI  R30,LOW(100)
0001c2 bfe1      	OUT  0x31,R30
                 ; 0000 0011 TIMSK = (1<<OCIE0);
0001c3 e0e2      	LDI  R30,LOW(2)
0001c4 bfe7      	OUT  0x37,R30
                 ; 0000 0012 }
0001c5 9508      	RET
                 ; .FEND
                 ;interrupt[16] void timer0_comp(void)
                 ; 0000 0015 {
                 _timer0_comp:
                 ; .FSTART _timer0_comp
0001c6 93ea      	ST   -Y,R30
0001c7 b7ef      	IN   R30,SREG
                 ; 0000 0016 ti_Cnt_1ms++;
0001c8 9453      	INC  R5
                 ; 0000 0017 LCD_DelCnt_1ms++;
0001c9 9443      	INC  R4
                 ; 0000 0018 }
0001ca bfef      	OUT  SREG,R30
0001cb 91e9      	LD   R30,Y+
0001cc 9518      	RETI
                 ; .FEND
                 ;int SRF_Run(char Sonar_Addr){
                 ; 0000 001A int SRF_Run(char Sonar_Addr){
                 _SRF_Run:
                 ; .FSTART _SRF_Run
                 ; 0000 001B unsigned char res;
                 ; 0000 001C unsigned int Sonar_range;
                 ; 0000 001D 
                 ; 0000 001E res = getRange(Sonar_Addr, &Sonar_range);
0001cd d2b2      	RCALL __SAVELOCR4
0001ce 2f0a      	MOV  R16,R26
                 ;	Sonar_Addr -> R16
                 ;	res -> R17
                 ;	Sonar_range -> R18,R19
0001cf 930a      	ST   -Y,R16
0001d0 b7ad      	IN   R26,SPL
0001d1 b7be      	IN   R27,SPH
0001d2 9711      	SBIW R26,1
0001d3 933f      	PUSH R19
0001d4 932f      	PUSH R18
0001d5 dfb4      	RCALL _getRange
0001d6 912f      	POP  R18
0001d7 913f      	POP  R19
0001d8 2f1e      	MOV  R17,R30
                 ; 0000 001F if(res)
0001d9 3010      	CPI  R17,0
0001da f019      	BREQ _0x5A
                 ; 0000 0020 {
                 ; 0000 0021 return 0;
0001db e0e0      	LDI  R30,LOW(0)
0001dc e0f0      	LDI  R31,HIGH(0)
0001dd c005      	RJMP _0x2060003
                 ; 0000 0022 }
                 ; 0000 0023 else if(LCD_DelCnt_1ms > 100)
                 _0x5A:
0001de e6e4      	LDI  R30,LOW(100)
0001df 15e4      	CP   R30,R4
0001e0 f410      	BRSH _0x5C
                 ; 0000 0024 {
                 ; 0000 0025 
                 ; 0000 0026 LCD_DelCnt_1ms = 0;
0001e1 2444      	CLR  R4
                 ; 0000 0027 return Sonar_range;
0001e2 01f9      	MOVW R30,R18
                 ; 0000 0028 }
                 ; 0000 0029 
                 ; 0000 002A }
                 _0x5C:
                 _0x2060003:
0001e3 d2a3      	RCALL __LOADLOCR4
0001e4 9624      	ADIW R28,4
0001e5 9508      	RET
                 ; .FEND
                 ;void main(void)
                 ; 0000 002D {
                 _main:
                 ; .FSTART _main
                 ; 0000 002E unsigned char res;
                 ; 0000 002F char Sonar_Addr = 0xE0;
                 ; 0000 0030 unsigned int Sonar_range_1,Sonar_range_2,Sonar_range_3;
                 ; 0000 0031 char Message[40];
                 ; 0000 0032 int readCnt = 0;
                 ; 0000 0033 DDRD |= 0x03;
0001e6 97ac      	SBIW R28,44
0001e7 e0e0      	LDI  R30,LOW(0)
0001e8 83e8      	ST   Y,R30
0001e9 83e9      	STD  Y+1,R30
                 ;	res -> R17
                 ;	Sonar_Addr -> R16
                 ;	Sonar_range_1 -> R18,R19
                 ;	Sonar_range_2 -> R20,R21
                 ;	Sonar_range_3 -> Y+42
                 ;	Message -> Y+2
                 ;	readCnt -> Y+0
0001ea ee00      	LDI  R16,224
0001eb b3e1      	IN   R30,0x11
0001ec 60e3      	ORI  R30,LOW(0x3)
0001ed bbe1      	OUT  0x11,R30
                 ; 0000 0034 
                 ; 0000 0035 LCD_Init();
0001ee dedc      	RCALL _LCD_Init
                 ; 0000 0036 Timer0_Init();
0001ef dfcd      	RCALL _Timer0_Init
                 ; 0000 0037 Init_TWI();
0001f0 dee8      	RCALL _Init_TWI
                 ; 0000 0038 delay_ms(1000);
0001f1 eea8      	LDI  R26,LOW(1000)
0001f2 e0b3      	LDI  R27,HIGH(1000)
0001f3 d2d3      	RCALL _delay_ms
                 ; 0000 0039 SREG |= 0x80;
0001f4 9478      	BSET 7
                 ; 0000 003A 
                 ; 0000 003B startRanging(Sonar_Addr);
0001f5 2fa0      	MOV  R26,R16
0001f6 df8a      	RCALL _startRanging
                 ; 0000 003C ti_Cnt_1ms = 0;
0001f7 2455      	CLR  R5
                 ; 0000 003D Sonar_range_1 = 0;
                +
0001f8 e020     +LDI R18 , LOW ( 0 )
0001f9 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 ; 0000 003E Sonar_range_2 = 0;
                +
0001fa e040     +LDI R20 , LOW ( 0 )
0001fb e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 ; 0000 003F Sonar_range_3 = 0;
0001fc e0e0      	LDI  R30,LOW(0)
0001fd a7ea      	STD  Y+42,R30
0001fe a7eb      	STD  Y+42+1,R30
                 ; 0000 0040 
                 ; 0000 0041 LCD_DelCnt_1ms = 0;
0001ff 2444      	CLR  R4
                 ; 0000 0042 
                 ; 0000 0043 while(1)
                 _0x5D:
                 ; 0000 0044 {
                 ; 0000 0045 
                 ; 0000 0046 if(ti_Cnt_1ms > 100)
000200 e6e4      	LDI  R30,LOW(100)
000201 15e5      	CP   R30,R5
000202 f530      	BRSH _0x60
                 ; 0000 0047 {
                 ; 0000 0048 
                 ; 0000 0049 
                 ; 0000 004A 
                 ; 0000 004B if (Sonar_Addr == 0xE0){
000203 3e00      	CPI  R16,224
000204 f421      	BRNE _0x61
                 ; 0000 004C Sonar_Addr = 0xEC;
000205 ee0c      	LDI  R16,LOW(236)
                 ; 0000 004D startRanging(Sonar_Addr);
000206 d21c      	RCALL SUBOPT_0x5
                 ; 0000 004E Sonar_range_1 = SRF_Run(Sonar_Addr);
000207 019f      	MOVW R18,R30
                 ; 0000 004F }
                 ; 0000 0050 else if (Sonar_Addr == 0xEC) {
000208 c00a      	RJMP _0x62
                 _0x61:
000209 3e0c      	CPI  R16,236
00020a f421      	BRNE _0x63
                 ; 0000 0051 Sonar_Addr = 0xE2;
00020b ee02      	LDI  R16,LOW(226)
                 ; 0000 0052 startRanging(Sonar_Addr);
00020c d216      	RCALL SUBOPT_0x5
                 ; 0000 0053 Sonar_range_2 = SRF_Run(Sonar_Addr);
00020d 01af      	MOVW R20,R30
                 ; 0000 0054 }
                 ; 0000 0055 else{
00020e c004      	RJMP _0x64
                 _0x63:
                 ; 0000 0056 Sonar_Addr = 0xE0;
00020f ee00      	LDI  R16,LOW(224)
                 ; 0000 0057 startRanging(Sonar_Addr);
000210 d212      	RCALL SUBOPT_0x5
                 ; 0000 0058 Sonar_range_3 = SRF_Run(Sonar_Addr);
000211 a7ea      	STD  Y+42,R30
000212 a7fb      	STD  Y+42+1,R31
                 ; 0000 0059 }
                 _0x64:
                 _0x62:
                 ; 0000 005A 
                 ; 0000 005B 
                 ; 0000 005C 
                 ; 0000 005D LCD_Clear();
000213 deb2      	RCALL _LCD_Clear
                 ; 0000 005E sprintf(Message, "%03dcm", Sonar_range_1);
000214 d212      	RCALL SUBOPT_0x6
000215 01f9      	MOVW R30,R18
000216 d219      	RCALL SUBOPT_0x7
                 ; 0000 005F LCD_Pos(0,0);
000217 e0e0      	LDI  R30,LOW(0)
000218 d21e      	RCALL SUBOPT_0x8
                 ; 0000 0060 LCD_Str(Message);
                 ; 0000 0061 
                 ; 0000 0062 sprintf(Message, "%03dcm", Sonar_range_2);
000219 01fa      	MOVW R30,R20
00021a d215      	RCALL SUBOPT_0x7
                 ; 0000 0063 LCD_Pos(1,0);
00021b e0e1      	LDI  R30,LOW(1)
00021c d21a      	RCALL SUBOPT_0x8
                 ; 0000 0064 LCD_Str(Message);
                 ; 0000 0065 
                 ; 0000 0066 sprintf(Message, "%03dcm", Sonar_range_3);
00021d a5ee      	LDD  R30,Y+46
00021e a5ff      	LDD  R31,Y+46+1
00021f d210      	RCALL SUBOPT_0x7
                 ; 0000 0067 LCD_Pos(1,5);
000220 e0e1      	LDI  R30,LOW(1)
000221 93ea      	ST   -Y,R30
000222 e0a5      	LDI  R26,LOW(5)
000223 de7d      	RCALL _LCD_Pos
                 ; 0000 0068 LCD_Str(Message);
000224 01de      	MOVW R26,R28
000225 9612      	ADIW R26,2
000226 de90      	RCALL _LCD_Str
                 ; 0000 0069 
                 ; 0000 006A LCD_DelCnt_1ms = 0;
000227 2444      	CLR  R4
                 ; 0000 006B ti_Cnt_1ms = 0;
000228 2455      	CLR  R5
                 ; 0000 006C }
                 ; 0000 006D 
                 ; 0000 006E 
                 ; 0000 006F 
                 ; 0000 0070 
                 ; 0000 0071 
                 ; 0000 0072 
                 ; 0000 0073 }
                 _0x60:
000229 cfd6      	RJMP _0x5D
                 ; 0000 0074 }
                 _0x65:
00022a cfff      	RJMP _0x65
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
00022b d252      	RCALL __SAVELOCR6
00022c 019d      	MOVW R18,R26
00022d 815e      	LDD  R21,Y+6
00022e 9612      	ADIW R26,2
                +
00022f 91ed     +LD R30 , X +
000230 91fc     +LD R31 , X
000231 9711     +SBIW R26 , 1
                 	__GETW1P
000232 9730      	SBIW R30,0
000233 f0e9      	BREQ _0x2000010
000234 01d9      	MOVW R26,R18
000235 d208      	RCALL SUBOPT_0x9
000236 018f      	MOVW R16,R30
000237 9730      	SBIW R30,0
000238 f059      	BREQ _0x2000012
                +
000239 3002     +CPI R16 , LOW ( 2 )
00023a e0e0     +LDI R30 , HIGH ( 2 )
00023b 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00023c f060      	BRLO _0x2000013
00023d 01f8      	MOVW R30,R16
00023e 9731      	SBIW R30,1
00023f 018f      	MOVW R16,R30
                +
000240 01d9     +MOVW R26 , R18
000241 9614     +ADIW R26 , 4
000242 93ed     +ST X + , R30
000243 93fc     +ST X , R31
                 	__PUTW1RNS 18,4
                 _0x2000012:
000244 01d9      	MOVW R26,R18
000245 9612      	ADIW R26,2
000246 d1fc      	RCALL SUBOPT_0xA
000247 9731      	SBIW R30,1
000248 8350      	ST   Z,R21
                 _0x2000013:
000249 01d9      	MOVW R26,R18
                +
00024a 91ed     +LD R30 , X +
00024b 91fc     +LD R31 , X
00024c 9711     +SBIW R26 , 1
                 	__GETW1P
00024d 23ff      	TST  R31
00024e f00a      	BRMI _0x2000014
00024f d1f3      	RCALL SUBOPT_0xA
                 _0x2000014:
000250 c005      	RJMP _0x2000015
                 _0x2000010:
000251 01d9      	MOVW R26,R18
000252 efef      	LDI  R30,LOW(65535)
000253 efff      	LDI  R31,HIGH(65535)
000254 93ed      	ST   X+,R30
000255 93fc      	ST   X,R31
                 _0x2000015:
                 _0x2060002:
000256 d22e      	RCALL __LOADLOCR6
000257 9627      	ADIW R28,7
000258 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
000259 93ba      	ST   -Y,R27
00025a 93aa      	ST   -Y,R26
00025b 972b      	SBIW R28,11
00025c d221      	RCALL __SAVELOCR6
00025d e010      	LDI  R17,0
00025e 89a9      	LDD  R26,Y+17
00025f 89ba      	LDD  R27,Y+17+1
000260 e0e0      	LDI  R30,LOW(0)
000261 e0f0      	LDI  R31,HIGH(0)
000262 93ed      	ST   X+,R30
000263 93fc      	ST   X,R31
                 _0x2000016:
000264 89ef      	LDD  R30,Y+23
000265 8df8      	LDD  R31,Y+23+1
000266 9631      	ADIW R30,1
000267 8bef      	STD  Y+23,R30
000268 8ff8      	STD  Y+23+1,R31
000269 9731      	SBIW R30,1
00026a 91e4      	LPM  R30,Z
00026b 2f2e      	MOV  R18,R30
00026c 30e0      	CPI  R30,0
00026d f409      	BRNE PC+2
00026e c137      	RJMP _0x2000018
00026f 2fe1      	MOV  R30,R17
000270 30e0      	CPI  R30,0
000271 f431      	BRNE _0x200001C
000272 3225      	CPI  R18,37
000273 f411      	BRNE _0x200001D
000274 e011      	LDI  R17,LOW(1)
000275 c001      	RJMP _0x200001E
                 _0x200001D:
000276 d1d2      	RCALL SUBOPT_0xB
                 _0x200001E:
000277 c12d      	RJMP _0x200001B
                 _0x200001C:
000278 30e1      	CPI  R30,LOW(0x1)
000279 f4a1      	BRNE _0x200001F
00027a 3225      	CPI  R18,37
00027b f411      	BRNE _0x2000020
00027c d1cc      	RCALL SUBOPT_0xB
00027d c126      	RJMP _0x20000D2
                 _0x2000020:
00027e e012      	LDI  R17,LOW(2)
00027f e040      	LDI  R20,LOW(0)
000280 e000      	LDI  R16,LOW(0)
000281 322d      	CPI  R18,45
000282 f411      	BRNE _0x2000021
000283 e001      	LDI  R16,LOW(1)
000284 c120      	RJMP _0x200001B
                 _0x2000021:
000285 322b      	CPI  R18,43
000286 f411      	BRNE _0x2000022
000287 e24b      	LDI  R20,LOW(43)
000288 c11c      	RJMP _0x200001B
                 _0x2000022:
000289 3220      	CPI  R18,32
00028a f411      	BRNE _0x2000023
00028b e240      	LDI  R20,LOW(32)
00028c c118      	RJMP _0x200001B
                 _0x2000023:
00028d c002      	RJMP _0x2000024
                 _0x200001F:
00028e 30e2      	CPI  R30,LOW(0x2)
00028f f439      	BRNE _0x2000025
                 _0x2000024:
000290 e050      	LDI  R21,LOW(0)
000291 e013      	LDI  R17,LOW(3)
000292 3320      	CPI  R18,48
000293 f411      	BRNE _0x2000026
000294 6800      	ORI  R16,LOW(128)
000295 c10f      	RJMP _0x200001B
                 _0x2000026:
000296 c002      	RJMP _0x2000027
                 _0x2000025:
000297 30e3      	CPI  R30,LOW(0x3)
000298 f491      	BRNE _0x2000028
                 _0x2000027:
000299 3320      	CPI  R18,48
00029a f010      	BRLO _0x200002A
00029b 332a      	CPI  R18,58
00029c f008      	BRLO _0x200002B
                 _0x200002A:
00029d c007      	RJMP _0x2000029
                 _0x200002B:
00029e e0aa      	LDI  R26,LOW(10)
00029f 9f5a      	MUL  R21,R26
0002a0 2d50      	MOV  R21,R0
0002a1 2fe2      	MOV  R30,R18
0002a2 53e0      	SUBI R30,LOW(48)
0002a3 0f5e      	ADD  R21,R30
0002a4 c100      	RJMP _0x200001B
                 _0x2000029:
0002a5 362c      	CPI  R18,108
0002a6 f419      	BRNE _0x200002C
0002a7 6002      	ORI  R16,LOW(2)
0002a8 e015      	LDI  R17,LOW(5)
0002a9 c0fb      	RJMP _0x200001B
                 _0x200002C:
0002aa c003      	RJMP _0x200002D
                 _0x2000028:
0002ab 30e5      	CPI  R30,LOW(0x5)
0002ac f009      	BREQ PC+2
0002ad c0f7      	RJMP _0x200001B
                 _0x200002D:
0002ae 2fe2      	MOV  R30,R18
0002af 36e3      	CPI  R30,LOW(0x63)
0002b0 f439      	BRNE _0x2000032
0002b1 d19e      	RCALL SUBOPT_0xC
0002b2 89ed      	LDD  R30,Y+21
0002b3 89fe      	LDD  R31,Y+21+1
0002b4 81a4      	LDD  R26,Z+4
0002b5 93aa      	ST   -Y,R26
0002b6 d19f      	RCALL SUBOPT_0xD
0002b7 c0ec      	RJMP _0x2000033
                 _0x2000032:
0002b8 37e3      	CPI  R30,LOW(0x73)
0002b9 f429      	BRNE _0x2000035
0002ba d195      	RCALL SUBOPT_0xC
0002bb d1a0      	RCALL SUBOPT_0xE
0002bc d127      	RCALL _strlen
0002bd 2f1e      	MOV  R17,R30
0002be c007      	RJMP _0x2000036
                 _0x2000035:
0002bf 37e0      	CPI  R30,LOW(0x70)
0002c0 f451      	BRNE _0x2000038
0002c1 d18e      	RCALL SUBOPT_0xC
0002c2 d199      	RCALL SUBOPT_0xE
0002c3 d12c      	RCALL _strlenf
0002c4 2f1e      	MOV  R17,R30
0002c5 6008      	ORI  R16,LOW(8)
                 _0x2000036:
0002c6 770f      	ANDI R16,LOW(127)
0002c7 e0e0      	LDI  R30,LOW(0)
0002c8 8be8      	STD  Y+16,R30
0002c9 e030      	LDI  R19,LOW(0)
0002ca c060      	RJMP _0x2000039
                 _0x2000038:
0002cb 36e4      	CPI  R30,LOW(0x64)
0002cc f011      	BREQ _0x200003C
0002cd 36e9      	CPI  R30,LOW(0x69)
0002ce f411      	BRNE _0x200003D
                 _0x200003C:
0002cf 6004      	ORI  R16,LOW(4)
0002d0 c002      	RJMP _0x200003E
                 _0x200003D:
0002d1 37e5      	CPI  R30,LOW(0x75)
0002d2 f491      	BRNE _0x200003F
                 _0x200003E:
0002d3 e0ea      	LDI  R30,LOW(10)
0002d4 8be8      	STD  Y+16,R30
0002d5 ff01      	SBRS R16,1
0002d6 c007      	RJMP _0x2000040
                +
0002d7 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
0002d8 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
0002d9 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
0002da e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
0002db d18a      	RCALL SUBOPT_0xF
0002dc e01a      	LDI  R17,LOW(10)
0002dd c01f      	RJMP _0x2000041
                 _0x2000040:
                +
0002de e1e0     +LDI R30 , LOW ( 0x2710 )
0002df e2f7     +LDI R31 , HIGH ( 0x2710 )
0002e0 e060     +LDI R22 , BYTE3 ( 0x2710 )
0002e1 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
0002e2 d183      	RCALL SUBOPT_0xF
0002e3 e015      	LDI  R17,LOW(5)
0002e4 c018      	RJMP _0x2000041
                 _0x200003F:
0002e5 35e8      	CPI  R30,LOW(0x58)
0002e6 f411      	BRNE _0x2000043
0002e7 6008      	ORI  R16,LOW(8)
0002e8 c003      	RJMP _0x2000044
                 _0x2000043:
0002e9 37e8      	CPI  R30,LOW(0x78)
0002ea f009      	BREQ PC+2
0002eb c0b8      	RJMP _0x2000077
                 _0x2000044:
0002ec e1e0      	LDI  R30,LOW(16)
0002ed 8be8      	STD  Y+16,R30
0002ee ff01      	SBRS R16,1
0002ef c007      	RJMP _0x2000046
                +
0002f0 e0e0     +LDI R30 , LOW ( 0x10000000 )
0002f1 e0f0     +LDI R31 , HIGH ( 0x10000000 )
0002f2 e060     +LDI R22 , BYTE3 ( 0x10000000 )
0002f3 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
0002f4 d171      	RCALL SUBOPT_0xF
0002f5 e018      	LDI  R17,LOW(8)
0002f6 c006      	RJMP _0x2000041
                 _0x2000046:
                +
0002f7 e0e0     +LDI R30 , LOW ( 0x1000 )
0002f8 e1f0     +LDI R31 , HIGH ( 0x1000 )
0002f9 e060     +LDI R22 , BYTE3 ( 0x1000 )
0002fa e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
0002fb d16a      	RCALL SUBOPT_0xF
0002fc e014      	LDI  R17,LOW(4)
                 _0x2000041:
0002fd ff01      	SBRS R16,1
0002fe c006      	RJMP _0x2000047
0002ff d150      	RCALL SUBOPT_0xC
000300 89ad      	LDD  R26,Y+21
000301 89be      	LDD  R27,Y+21+1
000302 9614      	ADIW R26,4
000303 d1b8      	RCALL __GETD1P
000304 c011      	RJMP _0x20000D3
                 _0x2000047:
000305 ff02      	SBRS R16,2
000306 c009      	RJMP _0x2000049
000307 d148      	RCALL SUBOPT_0xC
000308 89ad      	LDD  R26,Y+21
000309 89be      	LDD  R27,Y+21+1
00030a d133      	RCALL SUBOPT_0x9
                +
00030b 2f6f     +MOV R22 , R31
00030c 0f66     +ADD R22 , R22
00030d 0b66     +SBC R22 , R22
00030e 2f76     +MOV R23 , R22
                 	__CWD1
00030f c006      	RJMP _0x20000D3
                 _0x2000049:
000310 d13f      	RCALL SUBOPT_0xC
000311 89ad      	LDD  R26,Y+21
000312 89be      	LDD  R27,Y+21+1
000313 d12a      	RCALL SUBOPT_0x9
000314 2766      	CLR  R22
000315 2777      	CLR  R23
                 _0x20000D3:
                +
000316 87ec     +STD Y + 12 , R30
000317 87fd     +STD Y + 12 + 1 , R31
000318 876e     +STD Y + 12 + 2 , R22
000319 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00031a ff02      	SBRS R16,2
00031b c00f      	RJMP _0x200004B
00031c 85af      	LDD  R26,Y+15
00031d 23aa      	TST  R26
00031e f43a      	BRPL _0x200004C
                +
00031f 85ec     +LDD R30 , Y + 12
000320 85fd     +LDD R31 , Y + 12 + 1
000321 856e     +LDD R22 , Y + 12 + 2
000322 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000323 d168      	RCALL __ANEGD1
000324 d146      	RCALL SUBOPT_0x10
000325 e24d      	LDI  R20,LOW(45)
                 _0x200004C:
000326 3040      	CPI  R20,0
000327 f011      	BREQ _0x200004D
000328 5f1f      	SUBI R17,-LOW(1)
000329 c001      	RJMP _0x200004E
                 _0x200004D:
00032a 7f0b      	ANDI R16,LOW(251)
                 _0x200004E:
                 _0x200004B:
                 _0x2000039:
00032b fd00      	SBRC R16,0
00032c c010      	RJMP _0x200004F
                 _0x2000050:
00032d 1715      	CP   R17,R21
00032e f470      	BRSH _0x2000052
00032f ff07      	SBRS R16,7
000330 c008      	RJMP _0x2000053
000331 ff02      	SBRS R16,2
000332 c004      	RJMP _0x2000054
000333 7f0b      	ANDI R16,LOW(251)
000334 2f24      	MOV  R18,R20
000335 5011      	SUBI R17,LOW(1)
000336 c001      	RJMP _0x2000055
                 _0x2000054:
000337 e320      	LDI  R18,LOW(48)
                 _0x2000055:
000338 c001      	RJMP _0x2000056
                 _0x2000053:
000339 e220      	LDI  R18,LOW(32)
                 _0x2000056:
00033a d10e      	RCALL SUBOPT_0xB
00033b 5051      	SUBI R21,LOW(1)
00033c cff0      	RJMP _0x2000050
                 _0x2000052:
                 _0x200004F:
00033d 2f31      	MOV  R19,R17
00033e 89e8      	LDD  R30,Y+16
00033f 30e0      	CPI  R30,0
000340 f4b1      	BRNE _0x2000057
                 _0x2000058:
000341 3030      	CPI  R19,0
000342 f099      	BREQ _0x200005A
000343 ff03      	SBRS R16,3
000344 c006      	RJMP _0x200005B
000345 81ee      	LDD  R30,Y+6
000346 81ff      	LDD  R31,Y+6+1
000347 9125      	LPM  R18,Z+
000348 83ee      	STD  Y+6,R30
000349 83ff      	STD  Y+6+1,R31
00034a c005      	RJMP _0x200005C
                 _0x200005B:
00034b 81ae      	LDD  R26,Y+6
00034c 81bf      	LDD  R27,Y+6+1
00034d 912d      	LD   R18,X+
00034e 83ae      	STD  Y+6,R26
00034f 83bf      	STD  Y+6+1,R27
                 _0x200005C:
000350 d0f8      	RCALL SUBOPT_0xB
000351 3050      	CPI  R21,0
000352 f009      	BREQ _0x200005D
000353 5051      	SUBI R21,LOW(1)
                 _0x200005D:
000354 5031      	SUBI R19,LOW(1)
000355 cfeb      	RJMP _0x2000058
                 _0x200005A:
000356 c044      	RJMP _0x200005E
                 _0x2000057:
                 _0x2000060:
000357 d118      	RCALL SUBOPT_0x11
000358 d13b      	RCALL __DIVD21U
000359 2f2e      	MOV  R18,R30
00035a 302a      	CPI  R18,10
00035b f030      	BRLO _0x2000062
00035c ff03      	SBRS R16,3
00035d c002      	RJMP _0x2000063
00035e 5c29      	SUBI R18,-LOW(55)
00035f c001      	RJMP _0x2000064
                 _0x2000063:
000360 5a29      	SUBI R18,-LOW(87)
                 _0x2000064:
000361 c001      	RJMP _0x2000065
                 _0x2000062:
000362 5d20      	SUBI R18,-LOW(48)
                 _0x2000065:
000363 fd04      	SBRC R16,4
000364 c01e      	RJMP _0x2000067
000365 3321      	CPI  R18,49
000366 f448      	BRSH _0x2000069
000367 d111      	RCALL SUBOPT_0x12
                +
000368 30a1     +CPI R26 , LOW ( 0x1 )
000369 e0e0     +LDI R30 , HIGH ( 0x1 )
00036a 07be     +CPC R27 , R30
00036b e0e0     +LDI R30 , BYTE3 ( 0x1 )
00036c 078e     +CPC R24 , R30
00036d e0e0     +LDI R30 , BYTE4 ( 0x1 )
00036e 079e     +CPC R25 , R30
                 	__CPD2N 0x1
00036f f409      	BRNE _0x2000068
                 _0x2000069:
000370 c009      	RJMP _0x200006B
                 _0x2000068:
000371 1753      	CP   R21,R19
000372 f010      	BRLO _0x200006D
000373 ff00      	SBRS R16,0
000374 c001      	RJMP _0x200006E
                 _0x200006D:
000375 c011      	RJMP _0x200006C
                 _0x200006E:
000376 e220      	LDI  R18,LOW(32)
000377 ff07      	SBRS R16,7
000378 c00a      	RJMP _0x200006F
000379 e320      	LDI  R18,LOW(48)
                 _0x200006B:
00037a 6100      	ORI  R16,LOW(16)
00037b ff02      	SBRS R16,2
00037c c006      	RJMP _0x2000070
00037d 7f0b      	ANDI R16,LOW(251)
00037e 934a      	ST   -Y,R20
00037f d0d6      	RCALL SUBOPT_0xD
000380 3050      	CPI  R21,0
000381 f009      	BREQ _0x2000071
000382 5051      	SUBI R21,LOW(1)
                 _0x2000071:
                 _0x2000070:
                 _0x200006F:
                 _0x2000067:
000383 d0c5      	RCALL SUBOPT_0xB
000384 3050      	CPI  R21,0
000385 f009      	BREQ _0x2000072
000386 5051      	SUBI R21,LOW(1)
                 _0x2000072:
                 _0x200006C:
000387 5031      	SUBI R19,LOW(1)
000388 d0e7      	RCALL SUBOPT_0x11
000389 d12e      	RCALL __MODD21U
00038a d0e0      	RCALL SUBOPT_0x10
00038b 89e8      	LDD  R30,Y+16
00038c d0ec      	RCALL SUBOPT_0x12
00038d 27ff      	CLR  R31
00038e 2766      	CLR  R22
00038f 2777      	CLR  R23
000390 d103      	RCALL __DIVD21U
000391 d0d4      	RCALL SUBOPT_0xF
                +
000392 85e8     +LDD R30 , Y + 8
000393 85f9     +LDD R31 , Y + 8 + 1
000394 856a     +LDD R22 , Y + 8 + 2
000395 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
                +
000396 9730     +SBIW R30 , 0
000397 4060     +SBCI R22 , 0
000398 4070     +SBCI R23 , 0
                 	__CPD10
000399 f009      	BREQ _0x2000061
00039a cfbc      	RJMP _0x2000060
                 _0x2000061:
                 _0x200005E:
00039b ff00      	SBRS R16,0
00039c c007      	RJMP _0x2000073
                 _0x2000074:
00039d 3050      	CPI  R21,0
00039e f029      	BREQ _0x2000076
00039f 5051      	SUBI R21,LOW(1)
0003a0 e2e0      	LDI  R30,LOW(32)
0003a1 93ea      	ST   -Y,R30
0003a2 d0b3      	RCALL SUBOPT_0xD
0003a3 cff9      	RJMP _0x2000074
                 _0x2000076:
                 _0x2000073:
                 _0x2000077:
                 _0x2000033:
                 _0x20000D2:
0003a4 e010      	LDI  R17,LOW(0)
                 _0x200001B:
0003a5 cebe      	RJMP _0x2000016
                 _0x2000018:
0003a6 89a9      	LDD  R26,Y+17
0003a7 89ba      	LDD  R27,Y+17+1
0003a8 91ed      	LD   R30,X+
0003a9 91fd      	LD   R31,X+
0003aa d0da      	RCALL __LOADLOCR6
0003ab 9669      	ADIW R28,25
0003ac 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0003ad 92ff      	PUSH R15
0003ae 2ef8      	MOV  R15,R24
0003af 9726      	SBIW R28,6
0003b0 d0cd      	RCALL __SAVELOCR6
0003b1 01fe      	MOVW R30,R28
                +
0003b2 2400     +CLR R0
0003b3 0def     +ADD R30 , R15
0003b4 1df0     +ADC R31 , R0
                 	__ADDW1R15
                +
0003b5 8546     +LDD R20 , Z + 14
0003b6 8557     +LDD R21 , Z + 14 + 1
                 	__GETWRZ 20,21,14
0003b7 2e04      	MOV  R0,R20
0003b8 2a05      	OR   R0,R21
0003b9 f419      	BRNE _0x2000078
0003ba efef      	LDI  R30,LOW(65535)
0003bb efff      	LDI  R31,HIGH(65535)
0003bc c023      	RJMP _0x2060001
                 _0x2000078:
0003bd 01de      	MOVW R26,R28
0003be 9618      	ADIW R26,8
                +
0003bf 2400     +CLR R0
0003c0 0daf     +ADD R26 , R15
0003c1 1db0     +ADC R27 , R0
                 	__ADDW2R15
0003c2 018d      	MOVW R16,R26
                +
0003c3 8748     +STD Y + 8 , R20
0003c4 8759     +STD Y + 8 + 1 , R21
                 	__PUTWSR 20,21,8
0003c5 e0e0      	LDI  R30,LOW(0)
0003c6 87ea      	STD  Y+10,R30
0003c7 87eb      	STD  Y+10+1,R30
0003c8 01de      	MOVW R26,R28
0003c9 961c      	ADIW R26,12
                +
0003ca 2400     +CLR R0
0003cb 0daf     +ADD R26 , R15
0003cc 1db0     +ADC R27 , R0
                 	__ADDW2R15
0003cd 91ed      	LD   R30,X+
0003ce 91fd      	LD   R31,X+
0003cf 93fa      	ST   -Y,R31
0003d0 93ea      	ST   -Y,R30
0003d1 931a      	ST   -Y,R17
0003d2 930a      	ST   -Y,R16
0003d3 e2eb      	LDI  R30,LOW(_put_buff_G100)
0003d4 e0f2      	LDI  R31,HIGH(_put_buff_G100)
0003d5 93fa      	ST   -Y,R31
0003d6 93ea      	ST   -Y,R30
0003d7 01de      	MOVW R26,R28
0003d8 961c      	ADIW R26,12
0003d9 de7f      	RCALL __print_G100
0003da 019f      	MOVW R18,R30
0003db 85a8      	LDD  R26,Y+8
0003dc 85b9      	LDD  R27,Y+8+1
0003dd e0e0      	LDI  R30,LOW(0)
0003de 93ec      	ST   X,R30
0003df 01f9      	MOVW R30,R18
                 _0x2060001:
0003e0 d0a4      	RCALL __LOADLOCR6
0003e1 962c      	ADIW R28,12
0003e2 90ff      	POP  R15
0003e3 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0003e4 93ba      	ST   -Y,R27
0003e5 93aa      	ST   -Y,R26
0003e6 91a9          ld   r26,y+
0003e7 91b9          ld   r27,y+
0003e8 27ee          clr  r30
0003e9 27ff          clr  r31
                 strlen0:
0003ea 916d          ld   r22,x+
0003eb 2366          tst  r22
0003ec f011          breq strlen1
0003ed 9631          adiw r30,1
0003ee cffb          rjmp strlen0
                 strlen1:
0003ef 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0003f0 93ba      	ST   -Y,R27
0003f1 93aa      	ST   -Y,R26
0003f2 27aa          clr  r26
0003f3 27bb          clr  r27
0003f4 91e9          ld   r30,y+
0003f5 91f9          ld   r31,y+
                 strlenf0:
0003f6 9005      	lpm  r0,z+
0003f7 2000          tst  r0
0003f8 f011          breq strlenf1
0003f9 9611          adiw r26,1
0003fa cffb          rjmp strlenf0
                 strlenf1:
0003fb 01fd          movw r30,r26
0003fc 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
0003fd 931a      	ST   -Y,R17
0003fe 2f1a      	MOV  R17,R26
0003ff 91e0 0065 	LDS  R30,101
000401 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1:
000402 93e0 0065 	STS  101,R30
000404 91e0 0065 	LDS  R30,101
000406 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2:
000407 60e1      	ORI  R30,1
000408 93e0 0065 	STS  101,R30
                +
00040a ef86     +LDI R24 , LOW ( 246 )
                +__DELAY_USB_LOOP :
00040b 958a     +DEC R24
00040c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 246
00040d bb1b      	OUT  0x1B,R17
                +
00040e ef86     +LDI R24 , LOW ( 246 )
                +__DELAY_USB_LOOP :
00040f 958a     +DEC R24
000410 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 246
000411 91e0 0065 	LDS  R30,101
000413 7fee      	ANDI R30,0xFE
000414 93e0 0065 	STS  101,R30
000416 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3:
000417 e3a8      	LDI  R26,LOW(56)
000418 dc7c      	RCALL _LCD_Comm
000419 e0a4      	LDI  R26,LOW(4)
00041a cc81      	RJMP _LCD_delay
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4:
00041b 931a      	ST   -Y,R17
00041c 2f1a      	MOV  R17,R26
00041d 9310 0073 	STS  115,R17
00041f e8e4      	LDI  R30,LOW(132)
000420 93e0 0074 	STS  116,R30
000422 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x5:
000423 2fa0      	MOV  R26,R16
000424 dd5c      	RCALL _startRanging
000425 2fa0      	MOV  R26,R16
000426 cda6      	RJMP _SRF_Run
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x6:
000427 01fe      	MOVW R30,R28
000428 9632      	ADIW R30,2
000429 93fa      	ST   -Y,R31
00042a 93ea      	ST   -Y,R30
                +
00042b eae1     +LDI R30 , LOW ( 2 * _0x0 + ( 21 ) )
00042c e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 21 ) )
                 	__POINTW1FN _0x0,21
00042d 93fa      	ST   -Y,R31
00042e 93ea      	ST   -Y,R30
00042f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x7:
000430 2766      	CLR  R22
000431 2777      	CLR  R23
000432 d08f      	RCALL __PUTPARD1
000433 e084      	LDI  R24,4
000434 df78      	RCALL _sprintf
000435 9628      	ADIW R28,8
000436 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x8:
000437 93ea      	ST   -Y,R30
000438 e0a0      	LDI  R26,LOW(0)
000439 dc67      	RCALL _LCD_Pos
00043a 01de      	MOVW R26,R28
00043b 9612      	ADIW R26,2
00043c dc7a      	RCALL _LCD_Str
00043d cfe9      	RJMP SUBOPT_0x6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x9:
00043e 9614      	ADIW R26,4
                +
00043f 91ed     +LD R30 , X +
000440 91fc     +LD R31 , X
000441 9711     +SBIW R26 , 1
                 	__GETW1P
000442 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xA:
000443 91ed      	LD   R30,X+
000444 91fd      	LD   R31,X+
000445 9631      	ADIW R30,1
000446 93fe      	ST   -X,R31
000447 93ee      	ST   -X,R30
000448 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0xB:
000449 932a      	ST   -Y,R18
00044a 89aa      	LDD  R26,Y+18
00044b 89bb      	LDD  R27,Y+18+1
00044c 89ec      	LDD  R30,Y+20
00044d 89fd      	LDD  R31,Y+20+1
00044e 9509      	ICALL
00044f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0xC:
000450 89ed      	LDD  R30,Y+21
000451 89fe      	LDD  R31,Y+21+1
000452 9734      	SBIW R30,4
000453 8bed      	STD  Y+21,R30
000454 8bfe      	STD  Y+21+1,R31
000455 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xD:
000456 89aa      	LDD  R26,Y+18
000457 89bb      	LDD  R27,Y+18+1
000458 89ec      	LDD  R30,Y+20
000459 89fd      	LDD  R31,Y+20+1
00045a 9509      	ICALL
00045b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xE:
00045c 89ad      	LDD  R26,Y+21
00045d 89be      	LDD  R27,Y+21+1
00045e 9614      	ADIW R26,4
00045f 91ed      	LD   R30,X+
000460 91fd      	LD   R31,X+
000461 83ee      	STD  Y+6,R30
000462 83ff      	STD  Y+6+1,R31
000463 81ae      	LDD  R26,Y+6
000464 81bf      	LDD  R27,Y+6+1
000465 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xF:
                +
000466 87e8     +STD Y + 8 , R30
000467 87f9     +STD Y + 8 + 1 , R31
000468 876a     +STD Y + 8 + 2 , R22
000469 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
00046a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
                +
00046b 87ec     +STD Y + 12 , R30
00046c 87fd     +STD Y + 12 + 1 , R31
00046d 876e     +STD Y + 12 + 2 , R22
00046e 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00046f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x11:
                +
000470 85e8     +LDD R30 , Y + 8
000471 85f9     +LDD R31 , Y + 8 + 1
000472 856a     +LDD R22 , Y + 8 + 2
000473 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
                +
000474 85ac     +LDD R26 , Y + 12
000475 85bd     +LDD R27 , Y + 12 + 1
000476 858e     +LDD R24 , Y + 12 + 2
000477 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000478 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
                +
000479 85a8     +LDD R26 , Y + 8
00047a 85b9     +LDD R27 , Y + 8 + 1
00047b 858a     +LDD R24 , Y + 8 + 2
00047c 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
00047d 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
00047e 935a      	ST   -Y,R21
                 __SAVELOCR5:
00047f 934a      	ST   -Y,R20
                 __SAVELOCR4:
000480 933a      	ST   -Y,R19
                 __SAVELOCR3:
000481 932a      	ST   -Y,R18
                 __SAVELOCR2:
000482 931a      	ST   -Y,R17
000483 930a      	ST   -Y,R16
000484 9508      	RET
                 
                 __LOADLOCR6:
000485 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000486 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000487 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000488 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000489 8119      	LDD  R17,Y+1
00048a 8108      	LD   R16,Y
00048b 9508      	RET
                 
                 __ANEGD1:
00048c 95f0      	COM  R31
00048d 9560      	COM  R22
00048e 9570      	COM  R23
00048f 95e1      	NEG  R30
000490 4fff      	SBCI R31,-1
000491 4f6f      	SBCI R22,-1
000492 4f7f      	SBCI R23,-1
000493 9508      	RET
                 
                 __DIVD21U:
000494 933f      	PUSH R19
000495 934f      	PUSH R20
000496 935f      	PUSH R21
000497 2400      	CLR  R0
000498 2411      	CLR  R1
000499 01a0      	MOVW R20,R0
00049a e230      	LDI  R19,32
                 __DIVD21U1:
00049b 0faa      	LSL  R26
00049c 1fbb      	ROL  R27
00049d 1f88      	ROL  R24
00049e 1f99      	ROL  R25
00049f 1c00      	ROL  R0
0004a0 1c11      	ROL  R1
0004a1 1f44      	ROL  R20
0004a2 1f55      	ROL  R21
0004a3 1a0e      	SUB  R0,R30
0004a4 0a1f      	SBC  R1,R31
0004a5 0b46      	SBC  R20,R22
0004a6 0b57      	SBC  R21,R23
0004a7 f428      	BRCC __DIVD21U2
0004a8 0e0e      	ADD  R0,R30
0004a9 1e1f      	ADC  R1,R31
0004aa 1f46      	ADC  R20,R22
0004ab 1f57      	ADC  R21,R23
0004ac c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0004ad 60a1      	SBR  R26,1
                 __DIVD21U3:
0004ae 953a      	DEC  R19
0004af f759      	BRNE __DIVD21U1
0004b0 01fd      	MOVW R30,R26
0004b1 01bc      	MOVW R22,R24
0004b2 01d0      	MOVW R26,R0
0004b3 01ca      	MOVW R24,R20
0004b4 915f      	POP  R21
0004b5 914f      	POP  R20
0004b6 913f      	POP  R19
0004b7 9508      	RET
                 
                 __MODD21U:
0004b8 dfdb      	RCALL __DIVD21U
0004b9 01fd      	MOVW R30,R26
0004ba 01bc      	MOVW R22,R24
0004bb 9508      	RET
                 
                 __GETD1P:
0004bc 91ed      	LD   R30,X+
0004bd 91fd      	LD   R31,X+
0004be 916d      	LD   R22,X+
0004bf 917c      	LD   R23,X
0004c0 9713      	SBIW R26,3
0004c1 9508      	RET
                 
                 __PUTPARD1:
0004c2 937a      	ST   -Y,R23
0004c3 936a      	ST   -Y,R22
0004c4 93fa      	ST   -Y,R31
0004c5 93ea      	ST   -Y,R30
0004c6 9508      	RET
                 
                 _delay_ms:
0004c7 9610      	adiw r26,0
0004c8 f039      	breq __delay_ms1
                 __delay_ms0:
0004c9 95a8      	wdr
                +
0004ca e686     +LDI R24 , LOW ( 0xE66 )
0004cb e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
0004cc 9701     +SBIW R24 , 1
0004cd f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
0004ce 9711      	sbiw r26,1
0004cf f7c9      	brne __delay_ms0
                 __delay_ms1:
0004d0 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  24 r1 :   5 r2 :   0 r3 :   0 r4 :   5 r5 :   4 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   6 
r16:  78 r17:  69 r18:  51 r19:  19 r20:  25 r21:  33 r22:  32 r23:  21 
r24:  23 r25:   7 r26: 128 r27:  35 r28:  19 r29:   1 r30: 260 r31:  67 
x  :  42 y  : 167 z  :  14 
Registers used: 24 out of 35 (68.6%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   6 add   :   7 
adiw  :  25 and   :   0 andi  :  10 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  29 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   6 
brlt  :   0 brmi  :   1 brne  :  32 brpl  :   1 brsh  :   4 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   1 bst   :   0 call  :   0 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  24 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   3 
cp    :   5 cpc   :   5 cpi   :  49 cpse  :   0 dec   :   4 des   :   0 
elpm  :   0 eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 
ijmp  :   0 in    :  10 inc   :   2 jmp   :  36 ld    :  33 ldd   :  76 
ldi   : 154 lds   :   6 lpm   :  11 lsl   :   1 lsr   :   0 mov   :  53 
movw  :  50 mul   :   1 muls  :   1 mulsu :   0 neg   :   1 nop   :   0 
or    :   3 ori   :  11 out   :  14 pop   :   9 push  :   9 rcall : 126 
ret   :  42 reti  :   1 rjmp  :  94 rol   :   7 ror   :   0 sbc   :   4 
sbci  :   7 sbi   :   3 sbic  :   0 sbis  :   0 sbiw  :  20 sbr   :   1 
sbrc  :   2 sbrs  :  13 sec   :   0 seh   :   0 sei   :   0 sen   :   0 
ser   :   0 ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    :  70 std   :  34 sts   :  16 sub   :   1 subi  :  15 
swap  :   0 tst   :   4 wdr   :   1 
Instructions used: 58 out of 117 (49.6%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0009a2   2430     36   2466  131072   1.9%
[.dseg] 0x000100 0x000515      0     21     21    4096   0.5%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 2 warnings
