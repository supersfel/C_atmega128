
AVRASM ver. 2.1.30  C:\Users\Á¤¹Î±Ô\Desktop\mingyu (2)\Debug\List\0614.asm Wed Nov 24 11:43:34 2021

C:\Users\Á¤¹Î±Ô\Desktop\mingyu (2)\Debug\List\0614.asm(1416): warning: Register r5 already defined by the .DEF directive
C:\Users\Á¤¹Î±Ô\Desktop\mingyu (2)\Debug\List\0614.asm(1417): warning: Register r4 already defined by the .DEF directive
C:\Users\Á¤¹Î±Ô\Desktop\mingyu (2)\Debug\List\0614.asm(1418): warning: Register r7 already defined by the .DEF directive
C:\Users\Á¤¹Î±Ô\Desktop\mingyu (2)\Debug\List\0614.asm(1419): warning: Register r8 already defined by the .DEF directive
C:\Users\Á¤¹Î±Ô\Desktop\mingyu (2)\Debug\List\0614.asm(1420): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.45 
                 ;(C) Copyright 1998-2021 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128
                 ;Program type           : Application
                 ;Clock frequency        : 14.745600 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _buffer_count=R5
                 	.DEF _zero_flag=R4
                 	.DEF _interrupt_flag=R7
                 	.DEF _master_password=R8
                 	.DEF _master_password_msb=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0118 	JMP  __RESET
000002 940c 02f9 	JMP  _ext_int0_isr
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 022c 	JMP  _compare
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0197 	JMP  _usart1_receive
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
000046 0000      	.DW  0x0000
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000047 0000
000048 0000      	.DB  0x0,0x0,0x0,0x0
000049 0515      	.DB  LOW(_0x13),HIGH(_0x13)
                 
                 _0x12:
00004a 0000
00004b 0009
00004c 0008
00004d 0007      	.DB  0x0,0x0,0x9,0x0,0x8,0x0,0x7,0x0
00004e 0006
00004f 0005
000050 0004
000051 0003      	.DB  0x6,0x0,0x5,0x0,0x4,0x0,0x3,0x0
000052 0002
C:\Users\Á¤¹Î±Ô\Desktop\mingyu (2)\Debug\List\0614.asm(1477): warning: .cseg .db misalignment - padding zero byte
000053 0001      	.DB  0x2,0x0,0x1
                 _0x14:
000054 f9c0
000055 b0a4
000056 9299
000057 d882      	.DB  0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xD8
000058 9080
000059 8388
00005a a1c4
00005b 8e84      	.DB  0x80,0x90,0x88,0x83,0xC4,0xA1,0x84,0x8E
                 _0x15:
00005c 001f
00005d 002f
00005e 004f
C:\Users\Á¤¹Î±Ô\Desktop\mingyu (2)\Debug\List\0614.asm(1482): warning: .cseg .db misalignment - padding zero byte
00005f 008f      	.DB  0x1F,0x0,0x2F,0x0,0x4F,0x0,0x8F
                 _0x57:
000060 2a2a
000061 2a2a
000062 2a2a
000063 2a2a      	.DB  0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A
000064 2a2a
000065 2a2a
000066 2a2a
000067 0020      	.DB  0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x20,0x0
000068 4150
000069 5353
00006a 4f57
00006b 4452      	.DB  0x50,0x41,0x53,0x53,0x57,0x4F,0x52,0x44
00006c 2020
00006d 2020
00006e 2020
00006f 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000070 0000
000071 0000
000072 0000
000073 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0x0:
000074 2020
000075 2020
000076 2020
000077 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000078 2020
000079 2020
00007a 2020
00007b 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00007c 2020
00007d 2020
00007e 3200
00007f 3130      	.DB  0x20,0x20,0x20,0x20,0x0,0x32,0x30,0x31
000080 3137
000081 3234
000082 3330
000083 0037      	.DB  0x37,0x31,0x34,0x32,0x30,0x33,0x37,0x0
000084 414d
000085 5453
000086 5245
000087 4d20      	.DB  0x4D,0x41,0x53,0x54,0x45,0x52,0x20,0x4D
000088 444f
000089 2045
00008a 2020
00008b 0020      	.DB  0x4F,0x44,0x45,0x20,0x20,0x20,0x20,0x0
00008c 2a2a
00008d 2a2a
00008e 2a2a
00008f 2a2a      	.DB  0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A
000090 2a2a
000091 2a2a
000092 2a2a
000093 5000      	.DB  0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x0,0x50
000094 5341
000095 5753
000096 524f
000097 2044      	.DB  0x41,0x53,0x53,0x57,0x4F,0x52,0x44,0x20
000098 4553
000099 0054
00009a 2d2d
00009b 2d2d      	.DB  0x53,0x45,0x54,0x0,0x2D,0x2D,0x2D,0x2D
00009c 2d2d
00009d 2d2d
00009e 2d2d
00009f 2d2d      	.DB  0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
0000a0 2d2d
0000a1 2000
0000a2 532d
0000a3 4355      	.DB  0x2D,0x2D,0x0,0x20,0x2D,0x53,0x55,0x43
0000a4 4543
0000a5 5353
0000a6 202d
0000a7 2020      	.DB  0x43,0x45,0x53,0x53,0x2D,0x20,0x20,0x20
0000a8 0020
0000a9 4f44
0000aa 524f
0000ab 4f20      	.DB  0x20,0x0,0x44,0x4F,0x4F,0x52,0x20,0x4F
0000ac 4550
0000ad 204e
0000ae 2020
0000af 0020      	.DB  0x50,0x45,0x4E,0x20,0x20,0x20,0x20,0x0
0000b0 6520
0000b1 7272
0000b2 726f
0000b3 2e2e      	.DB  0x20,0x65,0x72,0x72,0x6F,0x72,0x2E,0x2E
0000b4 2e2e
0000b5 2e2e
0000b6 202e
0000b7 2020      	.DB  0x2E,0x2E,0x2E,0x2E,0x2E,0x20,0x20,0x20
0000b8 5700
0000b9 7261
0000ba 696e
0000bb 676e      	.DB  0x0,0x57,0x61,0x72,0x6E,0x69,0x6E,0x67
0000bc 2e2e
0000bd 2e2e
0000be 002e
0000bf 6920      	.DB  0x2E,0x2E,0x2E,0x2E,0x2E,0x0,0x20,0x69
0000c0 2e66
0000c1 6874
0000c2 6665
0000c3 2074      	.DB  0x66,0x2E,0x74,0x68,0x65,0x66,0x74,0x20
0000c4 2020
0000c5 2020
0000c6 2020
0000c7 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0000c8 4500
0000c9 746e
0000ca 7265
0000cb 5020      	.DB  0x0,0x45,0x6E,0x74,0x65,0x72,0x20,0x50
0000cc 7361
0000cd 7773
0000ce 726f
0000cf 2064      	.DB  0x61,0x73,0x73,0x77,0x6F,0x72,0x64,0x20
0000d0 0a20
0000d1 2d00
0000d2 3e2d
0000d3 2020      	.DB  0x20,0xA,0x0,0x2D,0x2D,0x3E,0x20,0x20
0000d4 000a      	.DB  0xA,0x0
                 
                 __GLOBAL_INI_TBL:
0000d5 0001      	.DW  0x01
0000d6 0002      	.DW  0x02
0000d7 008c      	.DW  __REG_BIT_VARS*2
                 
0000d8 0006      	.DW  0x06
0000d9 0004      	.DW  0x04
0000da 008e      	.DW  __REG_VARS*2
                 
0000db 0015      	.DW  0x15
0000dc 0500      	.DW  _0xA
0000dd 00e8      	.DW  _0x0*2
                 
0000de 0013      	.DW  0x13
0000df 062b      	.DW  _password
0000e0 0094      	.DW  _0x12*2
                 
0000e1 000b      	.DW  0x0B
0000e2 0515      	.DW  _0x13
0000e3 00fd      	.DW  _0x0*2+21
                 
0000e4 0010      	.DW  0x10
0000e5 0647      	.DW  _Port_char
0000e6 00a8      	.DW  _0x14*2
                 
0000e7 0007      	.DW  0x07
0000e8 0657      	.DW  _Port_fnd
0000e9 00b8      	.DW  _0x15*2
                 
0000ea 0010      	.DW  0x10
0000eb 0520      	.DW  _0x19
0000ec 0108      	.DW  _0x0*2+32
                 
0000ed 000f      	.DW  0x0F
0000ee 0530      	.DW  _0x19+16
0000ef 0118      	.DW  _0x0*2+48
                 
0000f0 000d      	.DW  0x0D
0000f1 053f      	.DW  _0x49
0000f2 0127      	.DW  _0x0*2+63
                 
0000f3 000f      	.DW  0x0F
0000f4 054c      	.DW  _0x49+13
0000f5 0134      	.DW  _0x0*2+76
                 
0000f6 000d      	.DW  0x0D
0000f7 055b      	.DW  _0x49+28
0000f8 0127      	.DW  _0x0*2+63
                 
0000f9 000f      	.DW  0x0F
0000fa 0568      	.DW  _0x49+41
0000fb 0143      	.DW  _0x0*2+91
                 
0000fc 000e      	.DW  0x0E
0000fd 0577      	.DW  _0x66
0000fe 0152      	.DW  _0x0*2+106
                 
0000ff 000f      	.DW  0x0F
000100 0585      	.DW  _0x66+14
000101 00ee      	.DW  _0x0*2+6
                 
000102 0011      	.DW  0x11
000103 0594      	.DW  _0x66+29
000104 0160      	.DW  _0x0*2+120
                 
000105 0010      	.DW  0x10
000106 05a5      	.DW  _0x66+46
000107 0108      	.DW  _0x0*2+32
                 
000108 000d      	.DW  0x0D
000109 05b5      	.DW  _0x66+62
00010a 0171      	.DW  _0x0*2+137
                 
00010b 0013      	.DW  0x13
00010c 05c2      	.DW  _0x66+75
00010d 017e      	.DW  _0x0*2+150
                 
00010e 0010      	.DW  0x10
00010f 05d5      	.DW  _0x66+94
000110 0108      	.DW  _0x0*2+32
                 
000111 0012      	.DW  0x12
000112 05e5      	.DW  _0x66+110
000113 0191      	.DW  _0x0*2+169
                 
000114 0007      	.DW  0x07
000115 05f7      	.DW  _0x66+128
000116 01a3      	.DW  _0x0*2+187
                 
                 _0xFFFFFFFF:
000117 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000118 94f8      	CLI
000119 27ee      	CLR  R30
00011a bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00011b e0f1      	LDI  R31,1
00011c bff5      	OUT  MCUCR,R31
00011d bfe5      	OUT  MCUCR,R30
00011e 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
000120 e08d      	LDI  R24,(14-2)+1
000121 e0a2      	LDI  R26,2
000122 27bb      	CLR  R27
                 __CLEAR_REG:
000123 93ed      	ST   X+,R30
000124 958a      	DEC  R24
000125 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000126 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000127 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000128 e0a0      	LDI  R26,LOW(__SRAM_START)
000129 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00012a 93ed      	ST   X+,R30
00012b 9701      	SBIW R24,1
00012c f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00012d eaea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00012e e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00012f 9185      	LPM  R24,Z+
000130 9195      	LPM  R25,Z+
000131 9700      	SBIW R24,0
000132 f061      	BREQ __GLOBAL_INI_END
000133 91a5      	LPM  R26,Z+
000134 91b5      	LPM  R27,Z+
000135 9005      	LPM  R0,Z+
000136 9015      	LPM  R1,Z+
000137 01bf      	MOVW R22,R30
000138 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000139 9005      	LPM  R0,Z+
00013a 920d      	ST   X+,R0
00013b 9701      	SBIW R24,1
00013c f7e1      	BRNE __GLOBAL_INI_LOOP
00013d 01fb      	MOVW R30,R22
00013e cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
00013f bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000140 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000141 bfed      	OUT  SPL,R30
000142 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000143 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000144 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000145 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000146 940c 036b 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 
                 	.CSEG
                 _LCD_PORT_Init:
                 ; .FSTART _LCD_PORT_Init
000148 efef      	LDI  R30,LOW(255)
000149 bbea      	OUT  0x1A,R30
00014a e1ef      	LDI  R30,LOW(31)
00014b 93e0 0064 	STS  100,R30
00014d 9508      	RET
                 ; .FEND
                 _LCD_Data:
                 ; .FSTART _LCD_Data
00014e d405      	RCALL SUBOPT_0x0
                 ;	ch -> R17
00014f 60e4      	ORI  R30,4
000150 d408      	RCALL SUBOPT_0x1
000151 7fed      	ANDI R30,0xFD
000152 d406      	RCALL SUBOPT_0x1
000153 d40a      	RCALL SUBOPT_0x2
000154 c205      	RJMP _0x2000002
                 ; .FEND
                 _LCD_Comm:
                 ; .FSTART _LCD_Comm
000155 d3fe      	RCALL SUBOPT_0x0
                 ;	ch -> R17
000156 7feb      	ANDI R30,0xFB
000157 d401      	RCALL SUBOPT_0x1
000158 7fed      	ANDI R30,0xFD
000159 d3ff      	RCALL SUBOPT_0x1
00015a d403      	RCALL SUBOPT_0x2
00015b c1fe      	RJMP _0x2000002
                 ; .FEND
                 _LCD_delay:
                 ; .FSTART _LCD_delay
00015c 931a      	ST   -Y,R17
00015d 2f1a      	MOV  R17,R26
                 ;	ms -> R17
00015e 27bb      	CLR  R27
00015f d518      	RCALL _delay_ms
000160 c1f9      	RJMP _0x2000002
                 ; .FEND
                 _LCD_Pos:
                 ; .FSTART _LCD_Pos
000161 931a      	ST   -Y,R17
000162 930a      	ST   -Y,R16
000163 2f1a      	MOV  R17,R26
000164 810a      	LDD  R16,Y+2
                 ;	col -> R16
                 ;	row -> R17
000165 e4a0      	LDI  R26,LOW(64)
000166 020a      	MULS R16,R26
000167 01f0      	MOVW R30,R0
000168 0fe1      	ADD  R30,R17
000169 68e0      	ORI  R30,0x80
00016a 2fae      	MOV  R26,R30
00016b dfe9      	RCALL _LCD_Comm
00016c 8119      	LDD  R17,Y+1
00016d 8108      	LDD  R16,Y+0
00016e 9623      	ADIW R28,3
00016f 9508      	RET
                 ; .FEND
                 _LCD_Char:
                 ; .FSTART _LCD_Char
000170 931a      	ST   -Y,R17
000171 2f1a      	MOV  R17,R26
                 ;	c -> R17
000172 dfdb      	RCALL _LCD_Data
000173 e0a1      	LDI  R26,LOW(1)
000174 e0b0      	LDI  R27,0
000175 d502      	RCALL _delay_ms
000176 c1e3      	RJMP _0x2000002
                 ; .FEND
                 _LCD_Str:
                 ; .FSTART _LCD_Str
000177 931a      	ST   -Y,R17
000178 930a      	ST   -Y,R16
000179 018d      	MOVW R16,R26
                 ;	*str -> R16,R17
                 _0x3:
00017a 01d8      	MOVW R26,R16
00017b 91ec      	LD   R30,X
00017c 30e0      	CPI  R30,0
00017d f029      	BREQ _0x5
00017e 91ac      	LD   R26,X
00017f dff0      	RCALL _LCD_Char
                +
000180 5f0f     +SUBI R16 , LOW ( - 1 )
000181 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000182 cff7      	RJMP _0x3
                 _0x5:
000183 c1e4      	RJMP _0x2000001
                 ; .FEND
                 ;	*str -> R18,R19
                 ;	loop_count -> R17
                 
                 	.DSEG
                 _0xA:
000500           	.BYTE 0x15
                 
                 	.CSEG
                 _LCD_Clear:
                 ; .FSTART _LCD_Clear
000184 e0a1      	LDI  R26,LOW(1)
000185 dfcf      	RCALL _LCD_Comm
000186 e0a2      	LDI  R26,LOW(2)
000187 dfd4      	RCALL _LCD_delay
000188 9508      	RET
                 ; .FEND
                 _LCD_Init:
                 ; .FSTART _LCD_Init
000189 dfbe      	RCALL _LCD_PORT_Init
00018a d3e3      	RCALL SUBOPT_0x3
00018b d3e2      	RCALL SUBOPT_0x3
00018c d3e1      	RCALL SUBOPT_0x3
00018d e0ae      	LDI  R26,LOW(14)
00018e dfc6      	RCALL _LCD_Comm
00018f e0a4      	LDI  R26,LOW(4)
000190 dfcb      	RCALL _LCD_delay
000191 e0a6      	LDI  R26,LOW(6)
000192 dfc2      	RCALL _LCD_Comm
000193 e0a4      	LDI  R26,LOW(4)
000194 dfc7      	RCALL _LCD_delay
000195 dfee      	RCALL _LCD_Clear
000196 9508      	RET
                 ; .FEND
                 ;	p -> R17
                 ;	p -> R17
                 
                 	.DSEG
                 _0x13:
000515           	.BYTE 0xB
                 ;interrupt [31] void usart1_receive(void)
                 ; 0000 001D {
                 
                 	.CSEG
                 _usart1_receive:
                 ; .FSTART _usart1_receive
000197 d3da      	RCALL SUBOPT_0x4
                 ; 0000 001E if(master_flag)    //¸¶½ºÅÍ¸ðµå¿¡¼­¸¸ µ¿ÀÛÇÏ°Ô ¼³Á¤
000198 fe20      	SBRS R2,0
000199 c020      	RJMP _0x16
                 ; 0000 001F {
                 ; 0000 0020 str[buffer_count] = UDR1;
00019a 2da5      	MOV  R26,R5
00019b e0b0      	LDI  R27,0
00019c 50a2      	SUBI R26,LOW(-_str)
00019d 4fba      	SBCI R27,HIGH(-_str)
00019e 91e0 009c 	LDS  R30,156
0001a0 93ec      	ST   X,R30
                 ; 0000 0021 if(buffer_count >= MAXLEN)
0001a1 e1e1      	LDI  R30,LOW(17)
0001a2 165e      	CP   R5,R30
0001a3 f010      	BRLO _0x17
                 ; 0000 0022 buffer_count = 0;
0001a4 2455      	CLR  R5
                 ; 0000 0023 else
0001a5 c001      	RJMP _0x18
                 _0x17:
                 ; 0000 0024 buffer_count++;
0001a6 9453      	INC  R5
                 ; 0000 0025 
                 ; 0000 0026 
                 ; 0000 0027 LCD_Clear();
                 _0x18:
0001a7 dfdc      	RCALL _LCD_Clear
                 ; 0000 0028 LCD_Pos(0,0);
0001a8 d3d7      	RCALL SUBOPT_0x5
                 ; 0000 0029 LCD_Str("MASTER MODE    ");
                +
0001a9 e2a0     +LDI R26 , LOW ( _0x19 + ( 0 ) )
0001aa e0b5     +LDI R27 , HIGH ( _0x19 + ( 0 ) )
                 	__POINTW2MN _0x19,0
0001ab dfcb      	RCALL _LCD_Str
                 ; 0000 002A delay_us(1);
                +
0001ac e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
0001ad 958a     +DEC R24
0001ae f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
                 ; 0000 002B LCD_Pos(1,0);
0001af d3d4      	RCALL SUBOPT_0x6
                 ; 0000 002C LCD_Str("**************");
                +
0001b0 e3a0     +LDI R26 , LOW ( _0x19 + ( 16 ) )
0001b1 e0b5     +LDI R27 , HIGH ( _0x19 + ( 16 ) )
                 	__POINTW2MN _0x19,16
0001b2 dfc4      	RCALL _LCD_Str
                 ; 0000 002D LCD_Pos(1,0);
0001b3 d3d0      	RCALL SUBOPT_0x6
                 ; 0000 002E delay_us(1);
                +
0001b4 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
0001b5 958a     +DEC R24
0001b6 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
                 ; 0000 002F LCD_Str(str);
0001b7 efae      	LDI  R26,LOW(_str)
0001b8 e0b5      	LDI  R27,HIGH(_str)
0001b9 dfbd      	RCALL _LCD_Str
                 ; 0000 0030 
                 ; 0000 0031 }
                 ; 0000 0032 }
                 _0x16:
0001ba c189      	RJMP _0xB7
                 ; .FEND
                 
                 	.DSEG
                 _0x19:
000520           	.BYTE 0x1F
                 ;void Init_USART1_IntCon(void)
                 ; 0000 0035 {
                 
                 	.CSEG
                 _Init_USART1_IntCon:
                 ; .FSTART _Init_USART1_IntCon
                 ; 0000 0036 // RXCIE1=1(¼ö½Å ÀÎÅÍ·´Æ® Çã°¡), RXEN0=1(¼ö½Å Çã°¡), TXEN0 = 1(¼Û½Å Çã°¡)
                 ; 0000 0037 UCSR1B = (1<<RXCIE1)| (1<<RXEN1) | (1 <<TXEN1);
0001bb e9e8      	LDI  R30,LOW(152)
0001bc 93e0 009a 	STS  154,R30
                 ; 0000 0038 UBRR1L = 0x07; // 115200bps º¸¿À ·¹ÀÌÆ® ¼³Á¤
0001be e0e7      	LDI  R30,LOW(7)
0001bf 93e0 0099 	STS  153,R30
                 ; 0000 0039 SREG |= 0x80; // ÀüÃ¼ ÀÎÅÍ·´Æ® Çã°¡
0001c1 9478      	BSET 7
                 ; 0000 003A }
0001c2 9508      	RET
                 ; .FEND
                 ;void PORT_Init(void)
                 ; 0000 003E {
                 _PORT_Init:
                 ; .FSTART _PORT_Init
                 ; 0000 003F DDRE=0xF0;     //FND Ãâ·ÂÀ» À§ÇÑ ¼³Á¤
0001c3 efe0      	LDI  R30,LOW(240)
0001c4 b9e2      	OUT  0x2,R30
                 ; 0000 0040 DDRF=0xFF;     //FND Ãâ·ÂÀ» À§ÇÑ ¼³Á¤
0001c5 efef      	LDI  R30,LOW(255)
0001c6 93e0 0061 	STS  97,R30
                 ; 0000 0041 DDRC=0x0F;     //Å°ÆÐµå¸¦ À§ÇÑ ¼³Á¤
0001c8 e0ef      	LDI  R30,LOW(15)
0001c9 bbe4      	OUT  0x14,R30
                 ; 0000 0042 DDRG=0x10;     //ºÎÀú Ãâ·ÂÀ» À§ÇÑ ¼³Á¤
0001ca e1e0      	LDI  R30,LOW(16)
0001cb 93e0 0064 	STS  100,R30
                 ; 0000 0043 DDRB=0x20;     //¼­ºê¸ðÅÍ Ãâ·ÂÀ» À§ÇÑ ¼³Á¤
0001cd e2e0      	LDI  R30,LOW(32)
0001ce bbe7      	OUT  0x17,R30
                 ; 0000 0044 
                 ; 0000 0045 EIMSK = 0x01;    // ¿ÜºÎÀÎÅÍ·´Æ®¸¦ 0~4±îÁö ¼±ÅÃ
0001cf e0e1      	LDI  R30,LOW(1)
0001d0 bfe9      	OUT  0x39,R30
                 ; 0000 0046 EICRA = 0xaf;    //INT0,1Àº »ó½Â¿¡Áö INT2,3 ÇÏ°­¿¡Áö·Î ¼±ÅÃ
0001d1 eaef      	LDI  R30,LOW(175)
0001d2 93e0 006a 	STS  106,R30
                 ; 0000 0047 SREG |= 0x80;    //ÀüÃ¼ÀÎÅÍ·´Æ® Çã°¡
0001d4 9478      	BSET 7
                 ; 0000 0048 DDRD |= 0x00;    //D¸¦ ÀÔ·ÂÀ¸·Î ¹ÞÀ½(½ºÀ§Ä¡)
0001d5 b3e1      	IN   R30,0x11
0001d6 bbe1      	OUT  0x11,R30
                 ; 0000 0049 
                 ; 0000 004A 
                 ; 0000 004B 
                 ; 0000 004C PORTC=0xFF;
0001d7 efef      	LDI  R30,LOW(255)
0001d8 bbe5      	OUT  0x15,R30
                 ; 0000 004D }
0001d9 9508      	RET
                 ; .FEND
                 ;char Num_to_Str(int num)
                 ; 0000 0052 {
                 _Num_to_Str:
                 ; .FSTART _Num_to_Str
                 ; 0000 0053 char str;
                 ; 0000 0054 switch(num)
0001da d431      	RCALL __SAVELOCR4
0001db 019d      	MOVW R18,R26
                 ;	num -> R18,R19
                 ;	str -> R17
0001dc 01f9      	MOVW R30,R18
                 ; 0000 0055 {
                 ; 0000 0056 case 0 :
0001dd 9730      	SBIW R30,0
0001de f411      	BRNE _0x1D
                 ; 0000 0057 str = '0';
0001df e310      	LDI  R17,LOW(48)
                 ; 0000 0058 break;
0001e0 c035      	RJMP _0x1C
                 ; 0000 0059 case 1 :
                 _0x1D:
0001e1 30e1      	CPI  R30,LOW(0x1)
0001e2 e0a0      	LDI  R26,HIGH(0x1)
0001e3 07fa      	CPC  R31,R26
0001e4 f411      	BRNE _0x1E
                 ; 0000 005A str = '1';
0001e5 e311      	LDI  R17,LOW(49)
                 ; 0000 005B break;
0001e6 c02f      	RJMP _0x1C
                 ; 0000 005C case 2 :
                 _0x1E:
0001e7 30e2      	CPI  R30,LOW(0x2)
0001e8 e0a0      	LDI  R26,HIGH(0x2)
0001e9 07fa      	CPC  R31,R26
0001ea f411      	BRNE _0x1F
                 ; 0000 005D str = '2';
0001eb e312      	LDI  R17,LOW(50)
                 ; 0000 005E break;
0001ec c029      	RJMP _0x1C
                 ; 0000 005F case 3 :
                 _0x1F:
0001ed 30e3      	CPI  R30,LOW(0x3)
0001ee e0a0      	LDI  R26,HIGH(0x3)
0001ef 07fa      	CPC  R31,R26
0001f0 f411      	BRNE _0x20
                 ; 0000 0060 str = '3';
0001f1 e313      	LDI  R17,LOW(51)
                 ; 0000 0061 break;
0001f2 c023      	RJMP _0x1C
                 ; 0000 0062 case 4 :
                 _0x20:
0001f3 30e4      	CPI  R30,LOW(0x4)
0001f4 e0a0      	LDI  R26,HIGH(0x4)
0001f5 07fa      	CPC  R31,R26
0001f6 f411      	BRNE _0x21
                 ; 0000 0063 str = '4';
0001f7 e314      	LDI  R17,LOW(52)
                 ; 0000 0064 break;
0001f8 c01d      	RJMP _0x1C
                 ; 0000 0065 case 5 :
                 _0x21:
0001f9 30e5      	CPI  R30,LOW(0x5)
0001fa e0a0      	LDI  R26,HIGH(0x5)
0001fb 07fa      	CPC  R31,R26
0001fc f411      	BRNE _0x22
                 ; 0000 0066 str = '5';
0001fd e315      	LDI  R17,LOW(53)
                 ; 0000 0067 break;
0001fe c017      	RJMP _0x1C
                 ; 0000 0068 case 6 :
                 _0x22:
0001ff 30e6      	CPI  R30,LOW(0x6)
000200 e0a0      	LDI  R26,HIGH(0x6)
000201 07fa      	CPC  R31,R26
000202 f411      	BRNE _0x23
                 ; 0000 0069 str = '6';
000203 e316      	LDI  R17,LOW(54)
                 ; 0000 006A break;
000204 c011      	RJMP _0x1C
                 ; 0000 006B case 7 :
                 _0x23:
000205 30e7      	CPI  R30,LOW(0x7)
000206 e0a0      	LDI  R26,HIGH(0x7)
000207 07fa      	CPC  R31,R26
000208 f411      	BRNE _0x24
                 ; 0000 006C str = '7';
000209 e317      	LDI  R17,LOW(55)
                 ; 0000 006D break;
00020a c00b      	RJMP _0x1C
                 ; 0000 006E case 8 :
                 _0x24:
00020b 30e8      	CPI  R30,LOW(0x8)
00020c e0a0      	LDI  R26,HIGH(0x8)
00020d 07fa      	CPC  R31,R26
00020e f411      	BRNE _0x25
                 ; 0000 006F str = '8';
00020f e318      	LDI  R17,LOW(56)
                 ; 0000 0070 break;
000210 c005      	RJMP _0x1C
                 ; 0000 0071 case 9 :
                 _0x25:
000211 30e9      	CPI  R30,LOW(0x9)
000212 e0a0      	LDI  R26,HIGH(0x9)
000213 07fa      	CPC  R31,R26
000214 f409      	BRNE _0x1C
                 ; 0000 0072 str = '9';
000215 e319      	LDI  R17,LOW(57)
                 ; 0000 0073 break;
                 ; 0000 0074 dafault:
                 ; 0000 0075 break;
                 ; 0000 0076 }
                 _0x1C:
                 ; 0000 0077 return str;
000216 2fe1      	MOV  R30,R17
000217 c0de      	RJMP _0x2000003
                 ; 0000 0078 
                 ; 0000 0079 }
                 ; .FEND
                 ;void Init_Timer1(void)
                 ; 0000 007C {
                 _Init_Timer1:
                 ; .FSTART _Init_Timer1
                 ; 0000 007D 
                 ; 0000 007E TCCR1A = (1<<COM1A1) | (1<<WGM11);
000218 e8e2      	LDI  R30,LOW(130)
000219 bdef      	OUT  0x2F,R30
                 ; 0000 007F TCCR1B = (1<<WGM13) | (1<<WGM12) | (1<<CS11);
00021a e1ea      	LDI  R30,LOW(26)
00021b bdee      	OUT  0x2E,R30
                 ; 0000 0080 TCNT1 = 0x00;
00021c e0e0      	LDI  R30,LOW(0)
00021d e0f0      	LDI  R31,HIGH(0)
00021e bdfd      	OUT  0x2C+1,R31
00021f bdec      	OUT  0x2C,R30
                 ; 0000 0081 ICR1 = 36864-1; // TOP °ª : 36864-> 20ms(0.542us X 36864), 0~36863
000220 efef      	LDI  R30,LOW(36863)
000221 e8ff      	LDI  R31,HIGH(36863)
000222 bdf7      	OUT  0x26+1,R31
000223 bde6      	OUT  0x26,R30
                 ; 0000 0082 OCR1A =2765 ; // ÃÊ±â ½ÃÀÛ À§Ä¡ 0µµ
000224 eced      	LDI  R30,LOW(2765)
000225 e0fa      	LDI  R31,HIGH(2765)
000226 bdfb      	OUT  0x2A+1,R31
000227 bdea      	OUT  0x2A,R30
                 ; 0000 0083 TIMSK |= (1<<OCIE1A); // Output Compare Match Interrupt Çã°¡
000228 b7e7      	IN   R30,0x37
000229 61e0      	ORI  R30,0x10
00022a bfe7      	OUT  0x37,R30
                 ; 0000 0084 }
00022b 9508      	RET
                 ; .FEND
                 ;interrupt [13] void compare(void)
                 ; 0000 0087 {
                 _compare:
                 ; .FSTART _compare
                 ; 0000 0088 #asm("nop");          //ºñ±³ÀÏÄ¡ ÀÎÅÍ·´Æ® ±¸¹®
00022c 0000      	NOP
                 ; 0000 0089 }
00022d 9518      	RETI
                 ; .FEND
                 ;void myDelay_us(unsigned int delay)
                 ; 0000 008C 
                 ; 0000 008D {
                 _myDelay_us:
                 ; .FSTART _myDelay_us
                 ; 0000 008E unsigned int loop;
                 ; 0000 008F for(loop=0; loop<delay; loop++)
00022e d359      	RCALL SUBOPT_0x7
                 ;	delay -> R18,R19
                 ;	loop -> R16,R17
                 _0x29:
                +
00022f 1702     +CP R16 , R18
000230 0713     +CPC R17 , R19
                 	__CPWRR 16,17,18,19
000231 f430      	BRSH _0x2A
                 ; 0000 0090 delay_us(1);
                +
000232 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000233 958a     +DEC R24
000234 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
                +
000235 5f0f     +SUBI R16 , LOW ( - 1 )
000236 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000237 cff7      	RJMP _0x29
                 _0x2A:
                 ; 0000 0091 }
000238 c0bd      	RJMP _0x2000003
                 ; .FEND
                 ;void Buzzer_play(unsigned int delay)
                 ; 0000 0095 {
                 _Buzzer_play:
                 ; .FSTART _Buzzer_play
                 ; 0000 0096 unsigned int loop;
                 ; 0000 0097 unsigned char Play_Tim=0;
                 ; 0000 0098 Play_Tim = 10000/delay;
000239 d3d0      	RCALL __SAVELOCR6
00023a 01ad      	MOVW R20,R26
                 ;	delay -> R20,R21
                 ;	loop -> R16,R17
                 ;	Play_Tim -> R19
00023b e030      	LDI  R19,0
00023c 01fa      	MOVW R30,R20
00023d e1a0      	LDI  R26,LOW(10000)
00023e e2b7      	LDI  R27,HIGH(10000)
00023f d3fa      	RCALL __DIVW21U
000240 2f3e      	MOV  R19,R30
                 ; 0000 0099 for(loop=0; loop<Play_Tim; loop++)
                +
000241 e000     +LDI R16 , LOW ( 0 )
000242 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C:
000243 2fe3      	MOV  R30,R19
000244 01d8      	MOVW R26,R16
000245 e0f0      	LDI  R31,0
000246 17ae      	CP   R26,R30
000247 07bf      	CPC  R27,R31
000248 f458      	BRSH _0x2D
                 ; 0000 009A {
                 ; 0000 009B PORTG |= 1<<4;      //buzzer off, PORTGÀÇ 4¹ø ÇÉ on(out 1)
000249 91e0 0065 	LDS  R30,101
00024b 61e0      	ORI  R30,0x10
00024c d340      	RCALL SUBOPT_0x8
                 ; 0000 009C myDelay_us(delay);
                 ; 0000 009D PORTG &= ~(1<<4);   //buzzer on, PORTGÀÇ 4¹ø ÇÉ off(out 0)
00024d 91e0 0065 	LDS  R30,101
00024f 7eef      	ANDI R30,0xEF
000250 d33c      	RCALL SUBOPT_0x8
                 ; 0000 009E myDelay_us(delay);
                 ; 0000 009F }
                +
000251 5f0f     +SUBI R16 , LOW ( - 1 )
000252 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000253 cfef      	RJMP _0x2C
                 _0x2D:
                 ; 0000 00A0 }
000254 c03e      	RJMP _0x2000004
                 ; .FEND
                 ;unsigned char KeyScan(void)
                 ; 0000 00A3 {
                 _KeyScan:
                 ; .FSTART _KeyScan
                 ; 0000 00A4 unsigned int key_scan_line = 0xFE;
                 ; 0000 00A5 unsigned char key_scan_loop =0, getPinData =0;
                 ; 0000 00A6 unsigned int key_num =0;
                 ; 0000 00A7 
                 ; 0000 00A8 for(key_scan_loop =0; key_scan_loop <4;key_scan_loop++)
000255 d3b4      	RCALL __SAVELOCR6
                 ;	key_scan_line -> R16,R17
                 ;	key_scan_loop -> R19
                 ;	getPinData -> R18
                 ;	key_num -> R20,R21
                +
000256 ef0e     +LDI R16 , LOW ( 254 )
000257 e010     +LDI R17 , HIGH ( 254 )
                 	__GETWRN 16,17,254
000258 e030      	LDI  R19,0
000259 e020      	LDI  R18,0
                +
00025a e040     +LDI R20 , LOW ( 0 )
00025b e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
00025c e030      	LDI  R19,LOW(0)
                 _0x2F:
00025d 3034      	CPI  R19,4
00025e f5a0      	BRSH _0x30
                 ; 0000 00A9 {
                 ; 0000 00AA PORTC = key_scan_line;
00025f bb05      	OUT  0x15,R16
                 ; 0000 00AB delay_us(1);
                +
000260 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000261 958a     +DEC R24
000262 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
                 ; 0000 00AC 
                 ; 0000 00AD getPinData = PINC & 0xF0;
000263 b3e3      	IN   R30,0x13
000264 7fe0      	ANDI R30,LOW(0xF0)
000265 2f2e      	MOV  R18,R30
                 ; 0000 00AE 
                 ; 0000 00AF if(getPinData != 0x00)
000266 3020      	CPI  R18,0
000267 f139      	BREQ _0x31
                 ; 0000 00B0 {
                 ; 0000 00B1 switch(getPinData)
000268 e0f0      	LDI  R31,0
                 ; 0000 00B2 {
                 ; 0000 00B3 case 0x10:
000269 31e0      	CPI  R30,LOW(0x10)
00026a e0a0      	LDI  R26,HIGH(0x10)
00026b 07fa      	CPC  R31,R26
00026c f429      	BRNE _0x35
                 ; 0000 00B4 key_num = key_scan_loop * 4 +1 ;
00026d e0e4      	LDI  R30,LOW(4)
00026e 9fe3      	MUL  R30,R19
00026f 01f0      	MOVW R30,R0
000270 9631      	ADIW R30,1
000271 c01a      	RJMP _0xB5
                 ; 0000 00B5 break;
                 ; 0000 00B6 case 0x20:
                 _0x35:
000272 32e0      	CPI  R30,LOW(0x20)
000273 e0a0      	LDI  R26,HIGH(0x20)
000274 07fa      	CPC  R31,R26
000275 f429      	BRNE _0x36
                 ; 0000 00B7 key_num = key_scan_loop * 4 +2 ;
000276 e0e4      	LDI  R30,LOW(4)
000277 9fe3      	MUL  R30,R19
000278 01f0      	MOVW R30,R0
000279 9632      	ADIW R30,2
00027a c011      	RJMP _0xB5
                 ; 0000 00B8 break;
                 ; 0000 00B9 case 0x40:
                 _0x36:
00027b 34e0      	CPI  R30,LOW(0x40)
00027c e0a0      	LDI  R26,HIGH(0x40)
00027d 07fa      	CPC  R31,R26
00027e f429      	BRNE _0x37
                 ; 0000 00BA key_num = key_scan_loop * 4 +3 ;
00027f e0e4      	LDI  R30,LOW(4)
000280 9fe3      	MUL  R30,R19
000281 01f0      	MOVW R30,R0
000282 9633      	ADIW R30,3
000283 c008      	RJMP _0xB5
                 ; 0000 00BB break;
                 ; 0000 00BC case 0x80:
                 _0x37:
000284 38e0      	CPI  R30,LOW(0x80)
000285 e0a0      	LDI  R26,HIGH(0x80)
000286 07fa      	CPC  R31,R26
000287 f429      	BRNE _0x34
                 ; 0000 00BD key_num = key_scan_loop * 4 +4 ;
000288 e0e4      	LDI  R30,LOW(4)
000289 9fe3      	MUL  R30,R19
00028a 01f0      	MOVW R30,R0
00028b 9634      	ADIW R30,4
                 _0xB5:
00028c 01af      	MOVW R20,R30
                 ; 0000 00BE break;
                 ; 0000 00BF 
                 ; 0000 00C0 }
                 _0x34:
                 ; 0000 00C1 
                 ; 0000 00C2 return key_num;
00028d 2fe4      	MOV  R30,R20
00028e c004      	RJMP _0x2000004
                 ; 0000 00C3 
                 ; 0000 00C4 
                 ; 0000 00C5 }
                 ; 0000 00C6 key_scan_line = (key_scan_line <<1);
                 _0x31:
00028f 0f00      	LSL  R16
000290 1f11      	ROL  R17
                 ; 0000 00C7 }
000291 5f3f      	SUBI R19,-1
000292 cfca      	RJMP _0x2F
                 _0x30:
                 ; 0000 00C8 
                 ; 0000 00C9 }
                 _0x2000004:
000293 d37d      	RCALL __LOADLOCR6
000294 9626      	ADIW R28,6
000295 9508      	RET
                 ; .FEND
                 ;unsigned char Changenum(unsigned char num)
                 ; 0000 00CB //»óÈ²¿¡ ¸Â°Ô º¯È¯
                 ; 0000 00CC {
                 _Changenum:
                 ; .FSTART _Changenum
                 ; 0000 00CD 
                 ; 0000 00CE unsigned char return_num=0;
                 ; 0000 00CF if(num ==0){
000296 931a      	ST   -Y,R17
000297 930a      	ST   -Y,R16
000298 2f0a      	MOV  R16,R26
                 ;	num -> R16
                 ;	return_num -> R17
000299 e010      	LDI  R17,0
00029a 3000      	CPI  R16,0
00029b f411      	BRNE _0x39
                 ; 0000 00D0 return_num =0;
00029c e010      	LDI  R17,LOW(0)
                 ; 0000 00D1 }
                 ; 0000 00D2 else if (num%4 ==0){                      // 1 2 3   13
00029d c034      	RJMP _0x3A
                 _0x39:
00029e 2fa0      	MOV  R26,R16
00029f 27bb      	CLR  R27
0002a0 e0e4      	LDI  R30,LOW(4)
0002a1 e0f0      	LDI  R31,HIGH(4)
0002a2 d3af      	RCALL __MODW21
0002a3 9730      	SBIW R30,0
0002a4 f421      	BRNE _0x3B
                 ; 0000 00D3 return_num = 12 + num/4;                 // 4 5 6   14
0002a5 d2eb      	RCALL SUBOPT_0x9
0002a6 5fe4      	SUBI R30,-LOW(12)
0002a7 2f1e      	MOV  R17,R30
                 ; 0000 00D4 // 7 8 9   15
                 ; 0000 00D5 }                                         // 10 0 12 16
                 ; 0000 00D6 else if( num/4 ==0){                      // À§Ã³·³ ÀÎ½ÄµÇ°Ô º¯È¯
0002a8 c029      	RJMP _0x3C
                 _0x3B:
0002a9 d2e7      	RCALL SUBOPT_0x9
0002aa 9730      	SBIW R30,0
0002ab f429      	BRNE _0x3D
                 ; 0000 00D7 return_num = (4*(num/4) +num%4)  ;
0002ac d2e4      	RCALL SUBOPT_0x9
0002ad d2e9      	RCALL SUBOPT_0xA
0002ae 0de0      	ADD  R30,R0
0002af 2f1e      	MOV  R17,R30
                 ; 0000 00D8 
                 ; 0000 00D9 }
                 ; 0000 00DA else if( num/4 ==1){
0002b0 c021      	RJMP _0x3E
                 _0x3D:
0002b1 d2df      	RCALL SUBOPT_0x9
0002b2 30e1      	CPI  R30,LOW(0x1)
0002b3 e0a0      	LDI  R26,HIGH(0x1)
0002b4 07fa      	CPC  R31,R26
0002b5 f431      	BRNE _0x3F
                 ; 0000 00DB return_num = (4*(num/4) +num%4) -1 ;
0002b6 d2da      	RCALL SUBOPT_0x9
0002b7 d2df      	RCALL SUBOPT_0xA
0002b8 2da0      	MOV  R26,R0
0002b9 0fae      	ADD  R26,R30
0002ba 50a1      	SUBI R26,LOW(1)
0002bb c015      	RJMP _0xB6
                 ; 0000 00DC 
                 ; 0000 00DD }
                 ; 0000 00DE else if( num/4 ==2){
                 _0x3F:
0002bc d2d4      	RCALL SUBOPT_0x9
0002bd 30e2      	CPI  R30,LOW(0x2)
0002be e0a0      	LDI  R26,HIGH(0x2)
0002bf 07fa      	CPC  R31,R26
0002c0 f431      	BRNE _0x41
                 ; 0000 00DF return_num = (4*(num/4) +num%4) -2 ;
0002c1 d2cf      	RCALL SUBOPT_0x9
0002c2 d2d4      	RCALL SUBOPT_0xA
0002c3 2da0      	MOV  R26,R0
0002c4 0fae      	ADD  R26,R30
0002c5 50a2      	SUBI R26,LOW(2)
0002c6 c00a      	RJMP _0xB6
                 ; 0000 00E0 
                 ; 0000 00E1 }
                 ; 0000 00E2 else if( num/4 ==3){
                 _0x41:
0002c7 d2c9      	RCALL SUBOPT_0x9
0002c8 30e3      	CPI  R30,LOW(0x3)
0002c9 e0a0      	LDI  R26,HIGH(0x3)
0002ca 07fa      	CPC  R31,R26
0002cb f431      	BRNE _0x43
                 ; 0000 00E3 return_num = (4*(num/4) +num%4) -3 ;
0002cc d2c4      	RCALL SUBOPT_0x9
0002cd d2c9      	RCALL SUBOPT_0xA
0002ce 2da0      	MOV  R26,R0
0002cf 0fae      	ADD  R26,R30
0002d0 50a3      	SUBI R26,LOW(3)
                 _0xB6:
0002d1 2f1a      	MOV  R17,R26
                 ; 0000 00E4 
                 ; 0000 00E5 }
                 ; 0000 00E6 
                 ; 0000 00E7 if (return_num ==11){
                 _0x43:
                 _0x3E:
                 _0x3C:
                 _0x3A:
0002d2 301b      	CPI  R17,11
0002d3 f419      	BRNE _0x44
                 ; 0000 00E8 return_num =0;
0002d4 e010      	LDI  R17,LOW(0)
                 ; 0000 00E9 
                 ; 0000 00EA zero_flag =1;   // ¾Æ¹«°Íµµ ´©¸£Áö ¾ÊÀ»¶§µµ 0ÀÌ ÀúÀåµÇ±â¿¡
0002d5 e0e1      	LDI  R30,LOW(1)
0002d6 2e4e      	MOV  R4,R30
                 ; 0000 00EB // 0À» ´©¸¦¶§ zero_flagµ¿ÀÛµÇ°Ô ¼³Á¤
                 ; 0000 00EC 
                 ; 0000 00ED 
                 ; 0000 00EE 
                 ; 0000 00EF }
                 ; 0000 00F0 return return_num;
                 _0x44:
0002d7 2fe1      	MOV  R30,R17
0002d8 c08f      	RJMP _0x2000001
                 ; 0000 00F1 }
                 ; .FEND
                 ;void OUTFND( int FND[] )
                 ; 0000 00FB {
                 _OUTFND:
                 ; .FSTART _OUTFND
                 ; 0000 00FC int i=0;
                 ; 0000 00FD for(i=0;i<4;i++ )
0002d9 d2ae      	RCALL SUBOPT_0x7
                 ;	FND -> R18,R19
                 ;	i -> R16,R17
                +
0002da e000     +LDI R16 , LOW ( 0 )
0002db e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x46:
                +
0002dc 3004     +CPI R16 , LOW ( 4 )
0002dd e0e0     +LDI R30 , HIGH ( 4 )
0002de 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
0002df f4b4      	BRGE _0x47
                 ; 0000 00FE {
                 ; 0000 00FF 
                 ; 0000 0100 
                 ; 0000 0101 PORTE = Port_fnd[i];
0002e0 01f8      	MOVW R30,R16
0002e1 e5a7      	LDI  R26,LOW(_Port_fnd)
0002e2 e0b6      	LDI  R27,HIGH(_Port_fnd)
0002e3 d2bc      	RCALL SUBOPT_0xB
0002e4 91ec      	LD   R30,X
0002e5 b9e3      	OUT  0x3,R30
                 ; 0000 0102 PORTF = Port_char[FND[i]];
0002e6 01f8      	MOVW R30,R16
0002e7 01d9      	MOVW R26,R18
0002e8 d2b7      	RCALL SUBOPT_0xB
0002e9 91ed      	LD   R30,X+
0002ea 91fd      	LD   R31,X+
0002eb 5be9      	SUBI R30,LOW(-_Port_char)
0002ec 4ff9      	SBCI R31,HIGH(-_Port_char)
0002ed 81e0      	LD   R30,Z
0002ee 93e0 0062 	STS  98,R30
                 ; 0000 0103 delay_ms(10);
0002f0 e0aa      	LDI  R26,LOW(10)
0002f1 e0b0      	LDI  R27,0
0002f2 d385      	RCALL _delay_ms
                 ; 0000 0104 
                 ; 0000 0105 
                 ; 0000 0106 
                 ; 0000 0107 }
                +
0002f3 5f0f     +SUBI R16 , LOW ( - 1 )
0002f4 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0002f5 cfe6      	RJMP _0x46
                 _0x47:
                 ; 0000 0108 }
                 _0x2000003:
0002f6 d31c      	RCALL __LOADLOCR4
0002f7 9624      	ADIW R28,4
0002f8 9508      	RET
                 ; .FEND
                 ;interrupt [2] void ext_int0_isr(void)
                 ; 0000 010D {
                 _ext_int0_isr:
                 ; .FSTART _ext_int0_isr
0002f9 d278      	RCALL SUBOPT_0x4
                 ; 0000 010E int i=0;
                 ; 0000 010F delay_ms(50);
0002fa 931a      	ST   -Y,R17
0002fb 930a      	ST   -Y,R16
                 ;	i -> R16,R17
                +
0002fc e000     +LDI R16 , LOW ( 0 )
0002fd e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
0002fe e3a2      	LDI  R26,LOW(50)
0002ff e0b0      	LDI  R27,0
000300 d377      	RCALL _delay_ms
                 ; 0000 0110 if(interrupt_flag ==0)  //flag°¡0ÀÏ½Ã ºñ¹Ð¹øÈ£ set»óÅÂ
000301 2077      	TST  R7
000302 f4e1      	BRNE _0x48
                 ; 0000 0111 {
                 ; 0000 0112 delay_ms(10);
000303 e0aa      	LDI  R26,LOW(10)
000304 e0b0      	LDI  R27,0
000305 d372      	RCALL _delay_ms
                 ; 0000 0113 LCD_Comm(0x0f); // ¸ðµç ±â´ÉÀ» ON ÇÑ´Ù.
000306 d29e      	RCALL SUBOPT_0xC
                 ; 0000 0114 LCD_delay(2);// 1.64§Â ÀÌ»óÀ» ±â´Ù¸²
                 ; 0000 0115 
                 ; 0000 0116 
                 ; 0000 0117 LCD_Pos(0,0); // ¹®ÀÚ¿­ À§Ä¡ 0Çà 1¿­ ÁöÁ¤
                 ; 0000 0118 LCD_Str("PASSWORD SET"); // ¹®ÀÚ¿­ strÀ» LCD Ã¹¹øÂ° ¶óÀÎ¿¡ Ãâ·Â
                +
000307 e3af     +LDI R26 , LOW ( _0x49 + ( 0 ) )
000308 e0b5     +LDI R27 , HIGH ( _0x49 + ( 0 ) )
                 	__POINTW2MN _0x49,0
000309 d2a0      	RCALL SUBOPT_0xD
                 ; 0000 0119 delay_us(10);
                 ; 0000 011A LCD_Pos(1,0); // ¹®ÀÚ¿­ À§Ä¡ 1Çà 1¿­ ÁöÁ¤
                 ; 0000 011B LCD_Str("--------------"); // ¹®ÀÚ¿­ strÀ» LCD µÎ¹øÂ° ¶óÀÎ¿¡ Ãâ·Â
                +
00030a e4ac     +LDI R26 , LOW ( _0x49 + ( 13 ) )
00030b e0b5     +LDI R27 , HIGH ( _0x49 + ( 13 ) )
                 	__POINTW2MN _0x49,13
00030c de6a      	RCALL _LCD_Str
                 ; 0000 011C LCD_Pos(1,0);
00030d d276      	RCALL SUBOPT_0x6
                 ; 0000 011D delay_us(10);
                +
00030e e381     +LDI R24 , LOW ( 49 )
                +__DELAY_USB_LOOP :
00030f 958a     +DEC R24
000310 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 49
                 ; 0000 011E 
                 ; 0000 011F 
                 ; 0000 0120 
                 ; 0000 0121 
                 ; 0000 0122 for(i=0;i<14;i++) {
                +
000311 e000     +LDI R16 , LOW ( 0 )
000312 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x4B:
                +
000313 300e     +CPI R16 , LOW ( 14 )
000314 e0e0     +LDI R30 , HIGH ( 14 )
000315 071e     +CPC R17 , R30
                 	__CPWRN 16,17,14
000316 f42c      	BRGE _0x4C
                 ; 0000 0123 fnd[i] = 0; }
000317 d297      	RCALL SUBOPT_0xE
000318 d29a      	RCALL SUBOPT_0xF
                +
000319 5f0f     +SUBI R16 , LOW ( - 1 )
00031a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00031b cff7      	RJMP _0x4B
                 _0x4C:
                 ; 0000 0124 
                 ; 0000 0125 interrupt_flag =1;
00031c e0e1      	LDI  R30,LOW(1)
00031d 2e7e      	MOV  R7,R30
                 ; 0000 0126 
                 ; 0000 0127 }
                 ; 0000 0128 else    //µé¾î¿Â ºñ¹Ð¹øÈ£¸¦ ÀúÀå
00031e c023      	RJMP _0x4D
                 _0x48:
                 ; 0000 0129 {
                 ; 0000 012A 
                 ; 0000 012B 
                 ; 0000 012C LCD_Pos(0,0); // ¹®ÀÚ¿­ À§Ä¡ 0Çà 1¿­ ÁöÁ¤
00031f d260      	RCALL SUBOPT_0x5
                 ; 0000 012D LCD_Str("PASSWORD SET"); // ¹®ÀÚ¿­ strÀ» LCD Ã¹¹øÂ° ¶óÀÎ¿¡ Ãâ·Â
                +
000320 e5ab     +LDI R26 , LOW ( _0x49 + ( 28 ) )
000321 e0b5     +LDI R27 , HIGH ( _0x49 + ( 28 ) )
                 	__POINTW2MN _0x49,28
000322 d287      	RCALL SUBOPT_0xD
                 ; 0000 012E delay_us(10);
                 ; 0000 012F LCD_Pos(1,0); // ¹®ÀÚ¿­ À§Ä¡ 1Çà 1¿­ ÁöÁ¤
                 ; 0000 0130 LCD_Str(" -SUCCESS-    "); // ¹®ÀÚ¿­ strÀ» LCD µÎ¹øÂ° ¶óÀÎ¿¡ Ãâ·Â
                +
000323 e6a8     +LDI R26 , LOW ( _0x49 + ( 41 ) )
000324 e0b5     +LDI R27 , HIGH ( _0x49 + ( 41 ) )
                 	__POINTW2MN _0x49,41
000325 de51      	RCALL _LCD_Str
                 ; 0000 0131 LCD_Pos(1,0);
000326 d25d      	RCALL SUBOPT_0x6
                 ; 0000 0132 delay_us(10);
                +
000327 e381     +LDI R24 , LOW ( 49 )
                +__DELAY_USB_LOOP :
000328 958a     +DEC R24
000329 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 49
                 ; 0000 0133 
                 ; 0000 0134 delay_ms(500);
00032a d28d      	RCALL SUBOPT_0x10
                 ; 0000 0135 LCD_Clear();
                 ; 0000 0136 
                 ; 0000 0137 
                 ; 0000 0138 Buzzer_play(Do);
00032b d290      	RCALL SUBOPT_0x11
                 ; 0000 0139 delay_ms(500);
                 ; 0000 013A Buzzer_play(Re);
00032c eaa4      	LDI  R26,LOW(1700)
00032d e0b6      	LDI  R27,HIGH(1700)
00032e d293      	RCALL SUBOPT_0x12
                 ; 0000 013B delay_ms(500);
                 ; 0000 013C Buzzer_play(Mi);
00032f eeab      	LDI  R26,LOW(1515)
000330 e0b5      	LDI  R27,HIGH(1515)
000331 df07      	RCALL _Buzzer_play
                 ; 0000 013D 
                 ; 0000 013E 
                 ; 0000 013F 
                 ; 0000 0140 for(i=0;i<14;i++)
                +
000332 e000     +LDI R16 , LOW ( 0 )
000333 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x4F:
                +
000334 300e     +CPI R16 , LOW ( 14 )
000335 e0e0     +LDI R30 , HIGH ( 14 )
000336 071e     +CPC R17 , R30
                 	__CPWRN 16,17,14
000337 f44c      	BRGE _0x50
                 ; 0000 0141 {
                 ; 0000 0142 password[i] = fnd[i];    //»õ ºñ¹Ð¹øÈ£¸¦ ÀúÀå
000338 01f8      	MOVW R30,R16
000339 e2ab      	LDI  R26,LOW(_password)
00033a e0b6      	LDI  R27,HIGH(_password)
00033b d28a      	RCALL SUBOPT_0x13
00033c d272      	RCALL SUBOPT_0xE
00033d d28e      	RCALL SUBOPT_0x14
                 ; 0000 0143 }
                +
00033e 5f0f     +SUBI R16 , LOW ( - 1 )
00033f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000340 cff3      	RJMP _0x4F
                 _0x50:
                 ; 0000 0144 
                 ; 0000 0145 interrupt_flag = 0;
000341 2477      	CLR  R7
                 ; 0000 0146 
                 ; 0000 0147 }
                 _0x4D:
                 ; 0000 0148 
                 ; 0000 0149 }
000342 9109      	LD   R16,Y+
000343 9119      	LD   R17,Y+
                 _0xB7:
000344 91e9      	LD   R30,Y+
000345 bfef      	OUT  SREG,R30
000346 91f9      	LD   R31,Y+
000347 91e9      	LD   R30,Y+
000348 91b9      	LD   R27,Y+
000349 91a9      	LD   R26,Y+
00034a 9199      	LD   R25,Y+
00034b 9189      	LD   R24,Y+
00034c 9179      	LD   R23,Y+
00034d 9169      	LD   R22,Y+
00034e 90f9      	LD   R15,Y+
00034f 9019      	LD   R1,Y+
000350 9009      	LD   R0,Y+
000351 9518      	RETI
                 ; .FEND
                 
                 	.DSEG
                 _0x49:
00053f           	.BYTE 0x38
                 ;void putch_USART(char data)
                 ; 0000 014B {
                 
                 	.CSEG
                 _putch_USART:
                 ; .FSTART _putch_USART
                 ; 0000 014C while(!(UCSR1A & (1<<UDRE1)));
000352 931a      	ST   -Y,R17
000353 2f1a      	MOV  R17,R26
                 ;	data -> R17
                 _0x51:
000354 91e0 009b 	LDS  R30,155
000356 72e0      	ANDI R30,LOW(0x20)
000357 f3e1      	BREQ _0x51
                 ; 0000 014D UDR1 = data;
000358 9310 009c 	STS  156,R17
                 ; 0000 014E }
                 _0x2000002:
00035a 9119      	LD   R17,Y+
00035b 9508      	RET
                 ; .FEND
                 ;void puts_USART(char *str)
                 ; 0000 0151 {
                 _puts_USART:
                 ; .FSTART _puts_USART
                 ; 0000 0152 while(*str!= 0)
00035c 931a      	ST   -Y,R17
00035d 930a      	ST   -Y,R16
00035e 018d      	MOVW R16,R26
                 ;	*str -> R16,R17
                 _0x54:
00035f 01d8      	MOVW R26,R16
000360 91ec      	LD   R30,X
000361 30e0      	CPI  R30,0
000362 f029      	BREQ _0x56
                 ; 0000 0153 {
                 ; 0000 0154 putch_USART(*str);
000363 91ac      	LD   R26,X
000364 dfed      	RCALL _putch_USART
                 ; 0000 0155 str++;
                +
000365 5f0f     +SUBI R16 , LOW ( - 1 )
000366 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 0156 }
000367 cff7      	RJMP _0x54
                 _0x56:
                 ; 0000 0157 }
                 _0x2000001:
000368 9109      	LD   R16,Y+
000369 9119      	LD   R17,Y+
00036a 9508      	RET
                 ; .FEND
                 ;void main (void)
                 ; 0000 015D {
                 _main:
                 ; .FSTART _main
                 ; 0000 015E int key_num=0;        //Å°ÆÐµå·Î ¹ÞÀº ¼ýÀÚ
                 ; 0000 015F char count =0;        //count º¯¼ö_fnd¿¡¼­ ¼ýÀÚ¹ÞÀ»¶§ »ç¿ë
                 ; 0000 0160 char p_count=0;       //password ÀÏÄ¡È®ÀÎÇÒ¶§ »ç¿ë
                 ; 0000 0161 char Rock_count =0;   //3¹øÀÌ»ó Æ²¸±¶§ rockµÇ°Ô »ç¿ë
                 ; 0000 0162 char master_count=1;  //À§Çè°¨Áö½Ã »çÀÌ·»¸ðµå·Î µ¿ÀÛÇÏ°Ô »ç¿ë
                 ; 0000 0163 int star_count=0;     //*ÀÌ 3ÃÊÀÌ»ó ´­¸®´ÂÁö °¨ÁöÇÒ¶§ »ç¿ë
                 ; 0000 0164 int mastermode_count=0; //mastermode¿¡ µé¾î°¬´ÂÁö °¨Áö¿¡ »ç¿ë
                 ; 0000 0165 int i=0;   //for¹®À» µ¹¸®±â À§ÇÑ º¯¼ö
                 ; 0000 0166 
                 ; 0000 0167 unsigned char  loop_count=0;
                 ; 0000 0168 unsigned char  str_password[] = "PASSWORD        ";
                 ; 0000 0169 unsigned char  str_star[] = "************** ";
                 ; 0000 016A 
                 ; 0000 016B 
                 ; 0000 016C Init_USART1_IntCon();
00036b 97a8      	SBIW R28,40
00036c e288      	LDI  R24,40
                +
00036d e060     +LDI R22 , LOW ( 0 )
00036e e070     +LDI R23 , HIGH ( 0 )
                 	__GETWRN 22,23,0
00036f ece0      	LDI  R30,LOW(_0x57*2)
000370 e0f0      	LDI  R31,HIGH(_0x57*2)
000371 d2a6      	RCALL __INITLOCB
                 ;	key_num -> R16,R17
                 ;	count -> R19
                 ;	p_count -> R18
                 ;	Rock_count -> R21
                 ;	master_count -> R20
                 ;	star_count -> Y+38
                 ;	mastermode_count -> Y+36
                 ;	i -> Y+34
                 ;	loop_count -> Y+33
                 ;	str_password -> Y+16
                 ;	str_star -> Y+0
                +
000372 e000     +LDI R16 , LOW ( 0 )
000373 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
000374 e030      	LDI  R19,0
000375 e020      	LDI  R18,0
000376 e050      	LDI  R21,0
000377 e041      	LDI  R20,1
000378 de42      	RCALL _Init_USART1_IntCon
                 ; 0000 016D Init_Timer1();  // Å¸ÀÌ¸Ó ÃÊ±â¼³Á¤
000379 de9e      	RCALL _Init_Timer1
                 ; 0000 016E PORT_Init();    // Æ÷Æ®µé ÀÔÃâ·Â ÃÊ±â ¼³Á¤
00037a de48      	RCALL _PORT_Init
                 ; 0000 016F LCD_PORT_Init; // LCD Ãâ·Â Æ÷Æ® ¼³Á¤
00037b e4e8      	LDI  R30,LOW(_LCD_PORT_Init)
00037c e0f1      	LDI  R31,HIGH(_LCD_PORT_Init)
                 ; 0000 0170 LCD_Init(); // LCD ÃÊ±âÈ­
00037d de0b      	RCALL _LCD_Init
                 ; 0000 0171 OCR1A = 4710; //¸ðÅÍ ÃÊ±â¼³Á¤(Àá±è)
00037e d253      	RCALL SUBOPT_0x15
                 ; 0000 0172 
                 ; 0000 0173 
                 ; 0000 0174 
                 ; 0000 0175 while(1)
                 _0x58:
                 ; 0000 0176 {
                 ; 0000 0177 
                 ; 0000 0178 
                 ; 0000 0179 key_num= Changenum(KeyScan());  //keyscanÀ¸·Î ¹ÞÀº °ªÀ» º¯È¯ÇÏ¿© ÀúÀå
00037f ded5      	RCALL _KeyScan
000380 2fae      	MOV  R26,R30
000381 df14      	RCALL _Changenum
000382 2f0e      	MOV  R16,R30
000383 2711      	CLR  R17
                 ; 0000 017A 
                 ; 0000 017B if(key_num<10 & key_num>0 )   //¼ýÀÚ°¡ ´­¸®¸é »õ·Î¿î °ªÀ» ÀúÀåÇÏµµ·Ï count°ª ¼³Á¤
000384 01d8      	MOVW R26,R16
000385 e0ea      	LDI  R30,LOW(10)
000386 e0f0      	LDI  R31,HIGH(10)
000387 d2a6      	RCALL __LTW12
000388 2e0e      	MOV  R0,R30
000389 e0e0      	LDI  R30,LOW(0)
00038a e0f0      	LDI  R31,HIGH(0)
00038b d2a8      	RCALL __GTW12
00038c 21e0      	AND  R30,R0
00038d f011      	BREQ _0x5B
                 ; 0000 017C {
                 ; 0000 017D count++;
00038e d248      	RCALL SUBOPT_0x16
                 ; 0000 017E delay_ms(50);
                 ; 0000 017F 
                 ; 0000 0180 }
                 ; 0000 0181 else if(key_num==0 & zero_flag)   //zero_flag°¡ ½ÇÇàµÈ °æ¿ì¿¡¸¸ 0À¸·Î ÀÔ·Â
00038f c0a3      	RJMP _0x5C
                 _0x5B:
000390 01d8      	MOVW R26,R16
000391 e0e0      	LDI  R30,LOW(0)
000392 e0f0      	LDI  R31,HIGH(0)
000393 d294      	RCALL __EQW12
000394 21e4      	AND  R30,R4
000395 f011      	BREQ _0x5D
                 ; 0000 0182 {
                 ; 0000 0183 count++;
000396 d240      	RCALL SUBOPT_0x16
                 ; 0000 0184 delay_ms(50);
                 ; 0000 0185 }
                 ; 0000 0186 else if(key_num == 10 )
000397 c09b      	RJMP _0x5E
                 _0x5D:
000398 e0ea      	LDI  R30,LOW(10)
000399 e0f0      	LDI  R31,HIGH(10)
00039a 17e0      	CP   R30,R16
00039b 07f1      	CPC  R31,R17
00039c f009      	BREQ PC+2
00039d c060      	RJMP _0x5F
                 ; 0000 0187 {
                 ; 0000 0188 for(i=0;i<14;i++)   //ºñ¹Ð¹øÈ£ ÀÏÄ¡ÇÏ´ÂÁö È®ÀÎ
00039e e0e0      	LDI  R30,LOW(0)
00039f a3ea      	STD  Y+34,R30
0003a0 a3eb      	STD  Y+34+1,R30
                 _0x61:
0003a1 a1aa      	LDD  R26,Y+34
0003a2 a1bb      	LDD  R27,Y+34+1
0003a3 971e      	SBIW R26,14
0003a4 f49c      	BRGE _0x62
                 ; 0000 0189 {
                 ; 0000 018A if(fnd[i] == password[i])
0003a5 d235      	RCALL SUBOPT_0x17
0003a6 900d      	LD   R0,X+
0003a7 901c      	LD   R1,X
0003a8 a1ea      	LDD  R30,Y+34
0003a9 a1fb      	LDD  R31,Y+34+1
0003aa e2ab      	LDI  R26,LOW(_password)
0003ab e0b6      	LDI  R27,HIGH(_password)
0003ac d1f3      	RCALL SUBOPT_0xB
                +
0003ad 91ed     +LD R30 , X +
0003ae 91fc     +LD R31 , X
0003af 9711     +SBIW R26 , 1
                 	__GETW1P
0003b0 15e0      	CP   R30,R0
0003b1 05f1      	CPC  R31,R1
0003b2 f411      	BRNE _0x63
                 ; 0000 018B {
                 ; 0000 018C p_count ++;
0003b3 5f2f      	SUBI R18,-1
                 ; 0000 018D }
                 ; 0000 018E else
0003b4 c001      	RJMP _0x64
                 _0x63:
                 ; 0000 018F {
                 ; 0000 0190 p_count =0;
0003b5 e020      	LDI  R18,LOW(0)
                 ; 0000 0191 }
                 _0x64:
                 ; 0000 0192 
                 ; 0000 0193 }
0003b6 d229      	RCALL SUBOPT_0x18
0003b7 cfe9      	RJMP _0x61
                 _0x62:
                 ; 0000 0194 
                 ; 0000 0195 if(p_count == 14)  //ºñ¹Ð¹øÈ£ ÀÏÄ¡½Ã
0003b8 302e      	CPI  R18,14
0003b9 f521      	BRNE _0x65
                 ; 0000 0196 {
                 ; 0000 0197 LCD_Pos(0,0); // ¹®ÀÚ¿­ À§Ä¡ 0Çà 1¿­ ÁöÁ¤
0003ba d1c5      	RCALL SUBOPT_0x5
                 ; 0000 0198 LCD_Str("DOOR OPEN    "); // ¹®ÀÚ¿­ strÀ» LCD Ã¹¹øÂ° ¶óÀÎ¿¡ Ãâ·Â
                +
0003bb e7a7     +LDI R26 , LOW ( _0x66 + ( 0 ) )
0003bc e0b5     +LDI R27 , HIGH ( _0x66 + ( 0 ) )
                 	__POINTW2MN _0x66,0
0003bd d1ec      	RCALL SUBOPT_0xD
                 ; 0000 0199 delay_us(10);
                 ; 0000 019A LCD_Pos(1,0); // ¹®ÀÚ¿­ À§Ä¡ 1Çà 1¿­ ÁöÁ¤
                 ; 0000 019B LCD_Str("              "); // ¹®ÀÚ¿­ strÀ» LCD µÎ¹øÂ° ¶óÀÎ¿¡ Ãâ·Â
                +
0003be e8a5     +LDI R26 , LOW ( _0x66 + ( 14 ) )
0003bf e0b5     +LDI R27 , HIGH ( _0x66 + ( 14 ) )
                 	__POINTW2MN _0x66,14
0003c0 ddb6      	RCALL _LCD_Str
                 ; 0000 019C LCD_Pos(1,0);
0003c1 d1c2      	RCALL SUBOPT_0x6
                 ; 0000 019D 
                 ; 0000 019E Buzzer_play(Do);
0003c2 d1f9      	RCALL SUBOPT_0x11
                 ; 0000 019F delay_ms(500);
                 ; 0000 01A0 Buzzer_play(Mi);
0003c3 eeab      	LDI  R26,LOW(1515)
0003c4 e0b5      	LDI  R27,HIGH(1515)
0003c5 d1fc      	RCALL SUBOPT_0x12
                 ; 0000 01A1 delay_ms(500);
                 ; 0000 01A2 Buzzer_play(Sol);
0003c6 efab      	LDI  R26,LOW(1275)
0003c7 e0b4      	LDI  R27,HIGH(1275)
0003c8 d1f9      	RCALL SUBOPT_0x12
                 ; 0000 01A3 delay_ms(500);
                 ; 0000 01A4 Buzzer_play(Do/2);
0003c9 ebaa      	LDI  R26,LOW(954)
0003ca e0b3      	LDI  R27,HIGH(954)
0003cb de6d      	RCALL _Buzzer_play
                 ; 0000 01A5 delay_ms(500);
0003cc d1eb      	RCALL SUBOPT_0x10
                 ; 0000 01A6 LCD_Clear();
                 ; 0000 01A7 
                 ; 0000 01A8 OCR1A = 3000;    //¸ðÅÍ ÇØÁ¦
0003cd ebe8      	LDI  R30,LOW(3000)
0003ce e0fb      	LDI  R31,HIGH(3000)
0003cf bdfb      	OUT  0x2A+1,R31
0003d0 bdea      	OUT  0x2A,R30
                 ; 0000 01A9 for(i=0;i<14;i++) {
0003d1 e0e0      	LDI  R30,LOW(0)
0003d2 a3ea      	STD  Y+34,R30
0003d3 a3eb      	STD  Y+34+1,R30
                 _0x68:
0003d4 a1aa      	LDD  R26,Y+34
0003d5 a1bb      	LDD  R27,Y+34+1
0003d6 971e      	SBIW R26,14
0003d7 f424      	BRGE _0x69
                 ; 0000 01AA fnd[i] = 0; }  //¹ÞÀº fnd°ª ÃÊ±âÈ­
0003d8 d202      	RCALL SUBOPT_0x17
0003d9 d1d9      	RCALL SUBOPT_0xF
0003da d205      	RCALL SUBOPT_0x18
0003db cff8      	RJMP _0x68
                 _0x69:
                 ; 0000 01AB 
                 ; 0000 01AC p_count=0;
0003dc e020      	LDI  R18,LOW(0)
                 ; 0000 01AD }
                 ; 0000 01AE else  //ºñ¹Ð¹øÈ£ ¿À·ù½Ã
0003dd c01f      	RJMP _0x6A
                 _0x65:
                 ; 0000 01AF {
                 ; 0000 01B0 LCD_Pos(0,0); // ¹®ÀÚ¿­ À§Ä¡ 0Çà 1¿­ ÁöÁ¤
0003de d1a1      	RCALL SUBOPT_0x5
                 ; 0000 01B1 LCD_Str(str_password); // ¹®ÀÚ¿­ strÀ» LCD Ã¹¹øÂ° ¶óÀÎ¿¡ Ãâ·Â
0003df 01de      	MOVW R26,R28
0003e0 9650      	ADIW R26,16
0003e1 d1c8      	RCALL SUBOPT_0xD
                 ; 0000 01B2 delay_us(10);
                 ; 0000 01B3 LCD_Pos(1,0); // ¹®ÀÚ¿­ À§Ä¡ 1Çà 1¿­ ÁöÁ¤
                 ; 0000 01B4 LCD_Str(" error.......   "); // ¹®ÀÚ¿­ strÀ» LCD µÎ¹øÂ° ¶óÀÎ¿¡ Ãâ·Â
                +
0003e2 e9a4     +LDI R26 , LOW ( _0x66 + ( 29 ) )
0003e3 e0b5     +LDI R27 , HIGH ( _0x66 + ( 29 ) )
                 	__POINTW2MN _0x66,29
0003e4 dd92      	RCALL _LCD_Str
                 ; 0000 01B5 LCD_Pos(1,0);
0003e5 d19e      	RCALL SUBOPT_0x6
                 ; 0000 01B6 
                 ; 0000 01B7 
                 ; 0000 01B8 
                 ; 0000 01B9 Buzzer_play(La);
0003e6 e7a0      	LDI  R26,LOW(1136)
0003e7 e0b4      	LDI  R27,HIGH(1136)
0003e8 d1d9      	RCALL SUBOPT_0x12
                 ; 0000 01BA delay_ms(500);
                 ; 0000 01BB Buzzer_play(La);
0003e9 e7a0      	LDI  R26,LOW(1136)
0003ea e0b4      	LDI  R27,HIGH(1136)
0003eb d1d6      	RCALL SUBOPT_0x12
                 ; 0000 01BC delay_ms(500);
                 ; 0000 01BD Buzzer_play(La);
0003ec e7a0      	LDI  R26,LOW(1136)
0003ed e0b4      	LDI  R27,HIGH(1136)
0003ee de4a      	RCALL _Buzzer_play
                 ; 0000 01BE delay_ms(500);
0003ef d1c8      	RCALL SUBOPT_0x10
                 ; 0000 01BF LCD_Clear();
                 ; 0000 01C0 
                 ; 0000 01C1 
                 ; 0000 01C2 for(i=0;i<14;i++) {
0003f0 e0e0      	LDI  R30,LOW(0)
0003f1 a3ea      	STD  Y+34,R30
0003f2 a3eb      	STD  Y+34+1,R30
                 _0x6C:
0003f3 a1aa      	LDD  R26,Y+34
0003f4 a1bb      	LDD  R27,Y+34+1
0003f5 971e      	SBIW R26,14
0003f6 f424      	BRGE _0x6D
                 ; 0000 01C3 fnd[i] = 0; }
0003f7 d1e3      	RCALL SUBOPT_0x17
0003f8 d1ba      	RCALL SUBOPT_0xF
0003f9 d1e6      	RCALL SUBOPT_0x18
0003fa cff8      	RJMP _0x6C
                 _0x6D:
                 ; 0000 01C4 
                 ; 0000 01C5 p_count=0;
0003fb e020      	LDI  R18,LOW(0)
                 ; 0000 01C6 Rock_count ++;    //¿À·ù½Ã Rock_count°¡ Áõ°¡ÇÔ
0003fc 5f5f      	SUBI R21,-1
                 ; 0000 01C7 
                 ; 0000 01C8 }
                 _0x6A:
                 ; 0000 01C9 
                 ; 0000 01CA 
                 ; 0000 01CB 
                 ; 0000 01CC 
                 ; 0000 01CD 
                 ; 0000 01CE }
                 ; 0000 01CF 
                 ; 0000 01D0 
                 ; 0000 01D1 else if(key_num==12)   //#¹öÆ°¿¡ ÇØ´ç
0003fd c035      	RJMP _0x6E
                 _0x5F:
0003fe e0ec      	LDI  R30,LOW(12)
0003ff e0f0      	LDI  R31,HIGH(12)
000400 17e0      	CP   R30,R16
000401 07f1      	CPC  R31,R17
000402 f501      	BRNE _0x6F
                 ; 0000 01D2 {
                 ; 0000 01D3 LCD_Comm(0x0f); // ¸ðµç ±â´ÉÀ» ON ÇÑ´Ù.
000403 d1a1      	RCALL SUBOPT_0xC
                 ; 0000 01D4 LCD_delay(2);// 1.64§Â ÀÌ»óÀ» ±â´Ù¸²
                 ; 0000 01D5 
                 ; 0000 01D6 
                 ; 0000 01D7 LCD_Pos(0,0); // ¹®ÀÚ¿­ À§Ä¡ 0Çà 1¿­ ÁöÁ¤
                 ; 0000 01D8 LCD_Str(str_password); // ¹®ÀÚ¿­ strÀ» LCD Ã¹¹øÂ° ¶óÀÎ¿¡ Ãâ·Â
000404 01de      	MOVW R26,R28
000405 9650      	ADIW R26,16
000406 d1a3      	RCALL SUBOPT_0xD
                 ; 0000 01D9 delay_us(10);
                 ; 0000 01DA LCD_Pos(1,0); // ¹®ÀÚ¿­ À§Ä¡ 1Çà 1¿­ ÁöÁ¤
                 ; 0000 01DB LCD_Str(str_star); // ¹®ÀÚ¿­ strÀ» LCD µÎ¹øÂ° ¶óÀÎ¿¡ Ãâ·Â
000407 d1de      	RCALL SUBOPT_0x19
                 ; 0000 01DC LCD_Pos(1,0);
                 ; 0000 01DD delay_us(10);
000408 d1e0      	RCALL SUBOPT_0x1A
                 ; 0000 01DE 
                 ; 0000 01DF for(i=0;i<14;i++)  //fnd°ª ÃÊ±âÈ­
000409 a3ea      	STD  Y+34,R30
00040a a3eb      	STD  Y+34+1,R30
                 _0x71:
00040b a1aa      	LDD  R26,Y+34
00040c a1bb      	LDD  R27,Y+34+1
00040d 971e      	SBIW R26,14
00040e f424      	BRGE _0x72
                 ; 0000 01E0 {
                 ; 0000 01E1 fnd[i] =0;
00040f d1cb      	RCALL SUBOPT_0x17
000410 d1a2      	RCALL SUBOPT_0xF
                 ; 0000 01E2 }
000411 d1ce      	RCALL SUBOPT_0x18
000412 cff8      	RJMP _0x71
                 _0x72:
                 ; 0000 01E3 
                 ; 0000 01E4 for(i=0;i<17;i++)
000413 e0e0      	LDI  R30,LOW(0)
000414 a3ea      	STD  Y+34,R30
000415 a3eb      	STD  Y+34+1,R30
                 _0x74:
000416 a1aa      	LDD  R26,Y+34
000417 a1bb      	LDD  R27,Y+34+1
000418 9751      	SBIW R26,17
000419 f42c      	BRGE _0x75
                 ; 0000 01E5 {
                 ; 0000 01E6 str[i] = '*';  //¸¶½ºÅÍ¸ðµå¿¡¼­ Àß¸ø ÀÔ·ÂÇÏ¿´À»¶§ »ç¿ë
00041a d1d3      	RCALL SUBOPT_0x1B
00041b e2aa      	LDI  R26,LOW(42)
00041c 83a0      	STD  Z+0,R26
                 ; 0000 01E7 }
00041d d1c2      	RCALL SUBOPT_0x18
00041e cff7      	RJMP _0x74
                 _0x75:
                 ; 0000 01E8 buffer_count=0;
00041f 2455      	CLR  R5
                 ; 0000 01E9 master_flag=0;
000420 94e8      	CLT
000421 f820      	BLD  R2,0
                 ; 0000 01EA 
                 ; 0000 01EB }
                 ; 0000 01EC else if(key_num==13) // FND Ãâ·Â¼ýÀÚ ¸®¼Â¹öÆ° ±â´É
000422 c010      	RJMP _0x76
                 _0x6F:
000423 e0ed      	LDI  R30,LOW(13)
000424 e0f0      	LDI  R31,HIGH(13)
000425 17e0      	CP   R30,R16
000426 07f1      	CPC  R31,R17
000427 f459      	BRNE _0x77
                 ; 0000 01ED {
                 ; 0000 01EE for(i=0;i<14;i++)
000428 e0e0      	LDI  R30,LOW(0)
000429 a3ea      	STD  Y+34,R30
00042a a3eb      	STD  Y+34+1,R30
                 _0x79:
00042b a1aa      	LDD  R26,Y+34
00042c a1bb      	LDD  R27,Y+34+1
00042d 971e      	SBIW R26,14
00042e f424      	BRGE _0x7A
                 ; 0000 01EF fnd[i] =0;
00042f d1ab      	RCALL SUBOPT_0x17
000430 d182      	RCALL SUBOPT_0xF
000431 d1ae      	RCALL SUBOPT_0x18
000432 cff8      	RJMP _0x79
                 _0x7A:
                 ; 0000 01F0 }
                 ; 0000 01F1 
                 ; 0000 01F2 if((key_num)| zero_flag)
                 _0x77:
                 _0x76:
                 _0x6E:
                 _0x5E:
                 _0x5C:
000433 2de4      	MOV  R30,R4
000434 e0f0      	LDI  R31,0
000435 2be0      	OR   R30,R16
000436 2bf1      	OR   R31,R17
000437 9730      	SBIW R30,0
000438 f1a1      	BREQ _0x7B
                 ; 0000 01F3 {
                 ; 0000 01F4 if((count%2) ==1){   //count°¡ È¦¼öÀÏ¶§ µé¾î¿Â t°ªÀ» ÀúÀåÇÏ°í
000439 2fa3      	MOV  R26,R19
00043a 27bb      	CLR  R27
00043b e0e2      	LDI  R30,LOW(2)
00043c e0f0      	LDI  R31,HIGH(2)
00043d d214      	RCALL __MODW21
00043e 30e1      	CPI  R30,LOW(0x1)
00043f e0a0      	LDI  R26,HIGH(0x1)
000440 07fa      	CPC  R31,R26
000441 f541      	BRNE _0x7C
                 ; 0000 01F5 //´Ù½Ã count¸¦ Â¦¼ö·Î ¸¸µë
                 ; 0000 01F6 
                 ; 0000 01F7 for(i=13;i>0;i--) //Å°ÆÐµå·Î ÀÔ·ÂµÇ´Â ¼öµéÀ» fnd¹è¿­¿¡ ÀúÀå
000442 e0ed      	LDI  R30,LOW(13)
000443 e0f0      	LDI  R31,HIGH(13)
000444 a3ea      	STD  Y+34,R30
000445 a3fb      	STD  Y+34+1,R31
                 _0x7E:
000446 a1aa      	LDD  R26,Y+34
000447 a1bb      	LDD  R27,Y+34+1
                +
000448 2400     +CLR R0
000449 160a     +CP R0 , R26
00044a 060b     +CPC R0 , R27
                 	__CPW02
00044b f4ac      	BRGE _0x7F
                 ; 0000 01F8 {
                 ; 0000 01F9 fnd[i] = fnd[i-1];
00044c a1ea      	LDD  R30,Y+34
00044d a1fb      	LDD  R31,Y+34+1
00044e e0af      	LDI  R26,LOW(_fnd)
00044f e0b6      	LDI  R27,HIGH(_fnd)
000450 d175      	RCALL SUBOPT_0x13
000451 a1ea      	LDD  R30,Y+34
000452 a1fb      	LDD  R31,Y+34+1
000453 9731      	SBIW R30,1
000454 e0af      	LDI  R26,LOW(_fnd)
000455 e0b6      	LDI  R27,HIGH(_fnd)
000456 d149      	RCALL SUBOPT_0xB
000457 d174      	RCALL SUBOPT_0x14
                 ; 0000 01FA delay_ms(20);
000458 e1a4      	LDI  R26,LOW(20)
000459 e0b0      	LDI  R27,0
00045a d21d      	RCALL _delay_ms
                 ; 0000 01FB }
00045b a1ea      	LDD  R30,Y+34
00045c a1fb      	LDD  R31,Y+34+1
00045d 9731      	SBIW R30,1
00045e a3ea      	STD  Y+34,R30
00045f a3fb      	STD  Y+34+1,R31
000460 cfe5      	RJMP _0x7E
                 _0x7F:
                 ; 0000 01FC 
                 ; 0000 01FD fnd[0] = key_num;
                +
000461 9300 060f+STS _fnd + ( 0 ) , R16
000463 9310 0610+STS _fnd + ( 0 ) + 1 , R17
                 	__PUTWMRN _fnd,0,16,17
                 ; 0000 01FE 
                 ; 0000 01FF 
                 ; 0000 0200 count++;
000465 d171      	RCALL SUBOPT_0x16
                 ; 0000 0201 delay_ms(50);
                 ; 0000 0202 
                 ; 0000 0203 LCD_Char ( Num_to_Str(key_num));//ÀÔ·ÂµÇ¸é lcd¿¡ Ãâ·Â
000466 01d8      	MOVW R26,R16
000467 dd72      	RCALL _Num_to_Str
000468 2fae      	MOV  R26,R30
000469 dd06      	RCALL _LCD_Char
                 ; 0000 0204 
                 ; 0000 0205 }
                 ; 0000 0206 
                 ; 0000 0207 
                 ; 0000 0208 if(zero_flag) //0ÀÌ ¹ß»ý½Ã zeroflag¸¦ ´Ù½Ã 0À¸·Î¸¸µé¾î 0À» ´Ù½Ã ¹ÞÀ»¼ö ÀÖ°ÔÇÔ
                 _0x7C:
00046a 2044      	TST  R4
00046b f009      	BREQ _0x80
                 ; 0000 0209 {
                 ; 0000 020A zero_flag = 0;
00046c 2444      	CLR  R4
                 ; 0000 020B }
                 ; 0000 020C }
                 _0x80:
                 ; 0000 020D 
                 ; 0000 020E 
                 ; 0000 020F 
                 ; 0000 0210 
                 ; 0000 0211 if(PINC.4 && PINC.6)
                 _0x7B:
00046d 9b9c      	SBIS 0x13,4
00046e c002      	RJMP _0x82
00046f 999e      	SBIC 0x13,6
000470 c001      	RJMP _0x83
                 _0x82:
000471 c010      	RJMP _0x81
                 _0x83:
                 ; 0000 0212 {
                 ; 0000 0213 while(PINC.4 && PINC.6){  // *°ú #À» µ¿½Ã¿¡ ´©¸¥ »óÅÂ
                 _0x84:
000472 9b9c      	SBIS 0x13,4
000473 c002      	RJMP _0x87
000474 999e      	SBIC 0x13,6
000475 c001      	RJMP _0x88
                 _0x87:
000476 c00a      	RJMP _0x86
                 _0x88:
                 ; 0000 0214 delay_ms(10);
000477 d17b      	RCALL SUBOPT_0x1C
                 ; 0000 0215 mastermode_count++;  //ÃÊ Ä«¿îÆ®
                 ; 0000 0216 
                 ; 0000 0217 if(mastermode_count >  300)  //3ÃÊ Ä«¿îÆ®
000478 f03c      	BRLT _0x89
                 ; 0000 0218 {
                 ; 0000 0219 LCD_Pos(0,0); // ¹®ÀÚ¿­ À§Ä¡ 0Çà 1¿­ ÁöÁ¤
000479 d106      	RCALL SUBOPT_0x5
                 ; 0000 021A LCD_Str("MASTER MODE    "); // ¹®ÀÚ¿­ strÀ» LCD Ã¹¹øÂ° ¶óÀÎ¿¡ Ãâ·Â
                +
00047a eaa5     +LDI R26 , LOW ( _0x66 + ( 46 ) )
00047b e0b5     +LDI R27 , HIGH ( _0x66 + ( 46 ) )
                 	__POINTW2MN _0x66,46
00047c d12d      	RCALL SUBOPT_0xD
                 ; 0000 021B delay_us(10);
                 ; 0000 021C LCD_Pos(1,0); // ¹®ÀÚ¿­ À§Ä¡ 1Çà 1¿­ ÁöÁ¤
                 ; 0000 021D LCD_Str(str_star); // ¹®ÀÚ¿­ strÀ» LCD µÎ¹øÂ° ¶óÀÎ¿¡ Ãâ·Â
00047d d168      	RCALL SUBOPT_0x19
                 ; 0000 021E LCD_Pos(1,0);
                 ; 0000 021F delay_us(10);
00047e d16a      	RCALL SUBOPT_0x1A
                 ; 0000 0220 
                 ; 0000 0221 mastermode_count =0;
00047f d181      	RCALL SUBOPT_0x1D
                 ; 0000 0222 master_flag=1;  //¸¶½ºÅÍ ¸ðµå µé¾î°¨
                 ; 0000 0223 }
                 ; 0000 0224 
                 ; 0000 0225 }
                 _0x89:
000480 cff1      	RJMP _0x84
                 _0x86:
                 ; 0000 0226 }
                 ; 0000 0227 else
000481 c021      	RJMP _0x8A
                 _0x81:
                 ; 0000 0228 {
                 ; 0000 0229 
                 ; 0000 022A while(PINC.4){    // *¸¸ ²Ú ´©¸£°í ÀÖ´Â »óÅÂ
                 _0x8B:
000482 9b9c      	SBIS 0x13,4
000483 c01f      	RJMP _0x8D
                 ; 0000 022B delay_ms(10);
000484 e0aa      	LDI  R26,LOW(10)
000485 e0b0      	LDI  R27,0
000486 d1f1      	RCALL _delay_ms
                 ; 0000 022C star_count++;
000487 a1ee      	LDD  R30,Y+38
000488 a1ff      	LDD  R31,Y+38+1
000489 9631      	ADIW R30,1
00048a a3ee      	STD  Y+38,R30
00048b a3ff      	STD  Y+38+1,R31
                 ; 0000 022D if(star_count > 300)
00048c a1ae      	LDD  R26,Y+38
00048d a1bf      	LDD  R27,Y+38+1
00048e 32ad      	CPI  R26,LOW(0x12D)
00048f e0e1      	LDI  R30,HIGH(0x12D)
000490 07be      	CPC  R27,R30
000491 f084      	BRLT _0x8E
                 ; 0000 022E {
                 ; 0000 022F Buzzer_play(Sol);
000492 efab      	LDI  R26,LOW(1275)
000493 e0b4      	LDI  R27,HIGH(1275)
000494 d12d      	RCALL SUBOPT_0x12
                 ; 0000 0230 delay_ms(500);
                 ; 0000 0231 Buzzer_play(Fa);
000495 e9a8      	LDI  R26,LOW(1432)
000496 e0b5      	LDI  R27,HIGH(1432)
000497 d12a      	RCALL SUBOPT_0x12
                 ; 0000 0232 delay_ms(500);
                 ; 0000 0233 Buzzer_play(Mi);
000498 eeab      	LDI  R26,LOW(1515)
000499 e0b5      	LDI  R27,HIGH(1515)
00049a d127      	RCALL SUBOPT_0x12
                 ; 0000 0234 delay_ms(500);
                 ; 0000 0235 Buzzer_play(Re);
00049b eaa4      	LDI  R26,LOW(1700)
00049c e0b6      	LDI  R27,HIGH(1700)
00049d dd9b      	RCALL _Buzzer_play
                 ; 0000 0236 
                 ; 0000 0237 OCR1A = 4710;  // ±Ý°í Àá±Ý
00049e d133      	RCALL SUBOPT_0x15
                 ; 0000 0238 
                 ; 0000 0239 star_count =0;
00049f e0e0      	LDI  R30,LOW(0)
0004a0 a3ee      	STD  Y+38,R30
0004a1 a3ef      	STD  Y+38+1,R30
                 ; 0000 023A }
                 ; 0000 023B }
                 _0x8E:
0004a2 cfdf      	RJMP _0x8B
                 _0x8D:
                 ; 0000 023C }
                 _0x8A:
                 ; 0000 023D 
                 ; 0000 023E /*
                 ; 0000 023F if(PINB.7 == 1)  //Áøµ¿¼¾¼­ °¨Áö½Ã
                 ; 0000 0240 {
                 ; 0000 0241 LCD_Pos(0,0); // ¹®ÀÚ¿­ À§Ä¡ 0Çà 1¿­ ÁöÁ¤
                 ; 0000 0242 LCD_Str("Warning....."); // ¹®ÀÚ¿­ strÀ» LCD Ã¹¹øÂ° ¶óÀÎ¿¡ Ãâ·Â
                 ; 0000 0243 delay_us(10);
                 ; 0000 0244 LCD_Pos(1,0); // ¹®ÀÚ¿­ À§Ä¡ 1Çà 1¿­ ÁöÁ¤
                 ; 0000 0245 LCD_Str(" stealing!!!    "); // ¹®ÀÚ¿­ strÀ» LCD µÎ¹øÂ° ¶óÀÎ¿¡ Ãâ·Â
                 ; 0000 0246 LCD_Pos(1,0);
                 ; 0000 0247 delay_us(10);
                 ; 0000 0248 master_count = 1;
                 ; 0000 0249 
                 ; 0000 024A 
                 ; 0000 024B while(master_count) // ¸¶½ºÅÍ¸ðµå¿¡¼­ ÇØÁ¦ÇÏÁö ¾ÊÀ¸¸é ¹«ÇÑ ¹Ýº¹
                 ; 0000 024C {
                 ; 0000 024D 
                 ; 0000 024E for(i=0;i<20;i++){    //»çÀÌ·» ¼Ò¸®
                 ; 0000 024F Buzzer_play(Sol/2);
                 ; 0000 0250 delay_ms(10);
                 ; 0000 0251 }
                 ; 0000 0252 delay_ms(10);
                 ; 0000 0253 for(i=0;i<20;i++){
                 ; 0000 0254 Buzzer_play(Re/2);
                 ; 0000 0255 delay_ms(10);
                 ; 0000 0256 }
                 ; 0000 0257 
                 ; 0000 0258 
                 ; 0000 0259 while(PINC.4 && PINC.6){ //»çÀÌ·»¸ðµå¿¡¼­ ¸¶½ºÅÍ¸ðµå·Î Á¢±Ù
                 ; 0000 025A delay_ms(10);
                 ; 0000 025B 
                 ; 0000 025C mastermode_count++;
                 ; 0000 025D if(mastermode_count >  300)
                 ; 0000 025E {
                 ; 0000 025F LCD_Pos(0,0); // ¹®ÀÚ¿­ À§Ä¡ 0Çà 1¿­ ÁöÁ¤
                 ; 0000 0260 LCD_Str("MASTER MODE    "); // ¹®ÀÚ¿­ strÀ» LCD Ã¹¹øÂ° ¶óÀÎ¿¡ Ãâ·Â
                 ; 0000 0261 delay_us(10);
                 ; 0000 0262 LCD_Pos(1,0); // ¹®ÀÚ¿­ À§Ä¡ 1Çà 1¿­ ÁöÁ¤
                 ; 0000 0263 LCD_Str(str_star); // ¹®ÀÚ¿­ strÀ» LCD µÎ¹øÂ° ¶óÀÎ¿¡ Ãâ·Â
                 ; 0000 0264 LCD_Pos(1,0);
                 ; 0000 0265 delay_us(10);
                 ; 0000 0266 
                 ; 0000 0267 puts_USART("Enter Password  \n");
                 ; 0000 0268 puts_USART("-->  \n");
                 ; 0000 0269 
                 ; 0000 026A buffer_count=0;
                 ; 0000 026B mastermode_count =0;
                 ; 0000 026C master_flag=1;
                 ; 0000 026D 
                 ; 0000 026E }
                 ; 0000 026F }
                 ; 0000 0270 for(i=0;i<10;i++)
                 ; 0000 0271 {
                 ; 0000 0272 if(str[i] == master_password[i]) //pc¿¡¼­ ¹ÞÀº str°ú ÇÐ¹øÀ» ºñ±³
                 ; 0000 0273 {
                 ; 0000 0274 p_count ++;
                 ; 0000 0275 }
                 ; 0000 0276 else
                 ; 0000 0277 {
                 ; 0000 0278 p_count =0;
                 ; 0000 0279 }
                 ; 0000 027A 
                 ; 0000 027B }
                 ; 0000 027C 
                 ; 0000 027D if(p_count == 10)  // ºñ¹Ð¹øÈ£ ÀÏÄ¡½Ã
                 ; 0000 027E {
                 ; 0000 027F master_count =0; //»çÀÌ·» Å»Ãâ
                 ; 0000 0280 master_flag=0;   //¸¶½ºÅÍ¸ðµå ÇØÁ¦
                 ; 0000 0281 p_count =0;      //ºñ¹Ð¹øÈ£ Ä«¿îÆ® ÃÊ±âÈ­
                 ; 0000 0282 delay_ms(500);
                 ; 0000 0283 LCD_Clear();
                 ; 0000 0284 }
                 ; 0000 0285 }
                 ; 0000 0286 
                 ; 0000 0287 }
                 ; 0000 0288 */
                 ; 0000 0289 
                 ; 0000 028A 
                 ; 0000 028B if(Rock_count >= 3) //¿¡·¯ 3¹øÀÌ»ó ¹ß»ý½Ã
0004a3 3053      	CPI  R21,3
0004a4 f408      	BRSH PC+2
0004a5 c061      	RJMP _0x8F
                 ; 0000 028C {
                 ; 0000 028D LCD_Pos(0,0); // ¹®ÀÚ¿­ À§Ä¡ 0Çà 1¿­ ÁöÁ¤
0004a6 d0d9      	RCALL SUBOPT_0x5
                 ; 0000 028E LCD_Str("Warning....."); // ¹®ÀÚ¿­ strÀ» LCD Ã¹¹øÂ° ¶óÀÎ¿¡ Ãâ·Â
                +
0004a7 eba5     +LDI R26 , LOW ( _0x66 + ( 62 ) )
0004a8 e0b5     +LDI R27 , HIGH ( _0x66 + ( 62 ) )
                 	__POINTW2MN _0x66,62
0004a9 d100      	RCALL SUBOPT_0xD
                 ; 0000 028F delay_us(10);
                 ; 0000 0290 LCD_Pos(1,0); // ¹®ÀÚ¿­ À§Ä¡ 1Çà 1¿­ ÁöÁ¤
                 ; 0000 0291 LCD_Str(" if.theft         "); // ¹®ÀÚ¿­ strÀ» LCD µÎ¹øÂ° ¶óÀÎ¿¡ Ãâ·Â
                +
0004aa eca2     +LDI R26 , LOW ( _0x66 + ( 75 ) )
0004ab e0b5     +LDI R27 , HIGH ( _0x66 + ( 75 ) )
                 	__POINTW2MN _0x66,75
0004ac dcca      	RCALL _LCD_Str
                 ; 0000 0292 LCD_Pos(1,0);
0004ad d0d6      	RCALL SUBOPT_0x6
                 ; 0000 0293 delay_us(10);
                +
0004ae e381     +LDI R24 , LOW ( 49 )
                +__DELAY_USB_LOOP :
0004af 958a     +DEC R24
0004b0 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 49
                 ; 0000 0294 master_count = 1;
0004b1 e041      	LDI  R20,LOW(1)
                 ; 0000 0295 
                 ; 0000 0296 while(master_count)   //ÀÌÇÏ ³»¿ëÀº Áøµ¿¼¾¼­¿Í µ¿ÀÏ
                 _0x90:
0004b2 3040      	CPI  R20,0
0004b3 f409      	BRNE PC+2
0004b4 c052      	RJMP _0x92
                 ; 0000 0297 {                     // ´Ü Rock_countÃÊ±âÈ­ ÇÏ´Â±â´ÉÀÌ ¸¶Áö¸·¿¡ Ãß°¡
                 ; 0000 0298 for(i=0;i<20;i++){
0004b5 e0e0      	LDI  R30,LOW(0)
0004b6 a3ea      	STD  Y+34,R30
0004b7 a3eb      	STD  Y+34+1,R30
                 _0x94:
0004b8 a1aa      	LDD  R26,Y+34
0004b9 a1bb      	LDD  R27,Y+34+1
0004ba 9754      	SBIW R26,20
0004bb f42c      	BRGE _0x95
                 ; 0000 0299 Buzzer_play(Sol/2);
0004bc e7ad      	LDI  R26,LOW(637)
0004bd e0b2      	LDI  R27,HIGH(637)
0004be d147      	RCALL SUBOPT_0x1E
                 ; 0000 029A delay_ms(10);
                 ; 0000 029B }
0004bf d120      	RCALL SUBOPT_0x18
0004c0 cff7      	RJMP _0x94
                 _0x95:
                 ; 0000 029C delay_ms(10);
0004c1 e0aa      	LDI  R26,LOW(10)
0004c2 e0b0      	LDI  R27,0
0004c3 d1b4      	RCALL _delay_ms
                 ; 0000 029D for(i=0;i<20;i++){
0004c4 e0e0      	LDI  R30,LOW(0)
0004c5 a3ea      	STD  Y+34,R30
0004c6 a3eb      	STD  Y+34+1,R30
                 _0x97:
0004c7 a1aa      	LDD  R26,Y+34
0004c8 a1bb      	LDD  R27,Y+34+1
0004c9 9754      	SBIW R26,20
0004ca f42c      	BRGE _0x98
                 ; 0000 029E Buzzer_play(Re/2);
0004cb e5a2      	LDI  R26,LOW(850)
0004cc e0b3      	LDI  R27,HIGH(850)
0004cd d138      	RCALL SUBOPT_0x1E
                 ; 0000 029F delay_ms(10);
                 ; 0000 02A0 }
0004ce d111      	RCALL SUBOPT_0x18
0004cf cff7      	RJMP _0x97
                 _0x98:
                 ; 0000 02A1 
                 ; 0000 02A2 while(PINC.4 && PINC.6){
                 _0x99:
0004d0 9b9c      	SBIS 0x13,4
0004d1 c002      	RJMP _0x9C
0004d2 999e      	SBIC 0x13,6
0004d3 c001      	RJMP _0x9D
                 _0x9C:
0004d4 c014      	RJMP _0x9B
                 _0x9D:
                 ; 0000 02A3 delay_ms(10);
0004d5 d11d      	RCALL SUBOPT_0x1C
                 ; 0000 02A4 
                 ; 0000 02A5 
                 ; 0000 02A6 mastermode_count++;
                 ; 0000 02A7 
                 ; 0000 02A8 if(mastermode_count >  300)
0004d6 f08c      	BRLT _0x9E
                 ; 0000 02A9 {
                 ; 0000 02AA LCD_Pos(0,0); // ¹®ÀÚ¿­ À§Ä¡ 0Çà 1¿­ ÁöÁ¤
0004d7 d0a8      	RCALL SUBOPT_0x5
                 ; 0000 02AB LCD_Str("MASTER MODE    "); // ¹®ÀÚ¿­ strÀ» LCD Ã¹¹øÂ° ¶óÀÎ¿¡ Ãâ·Â
                +
0004d8 eda5     +LDI R26 , LOW ( _0x66 + ( 94 ) )
0004d9 e0b5     +LDI R27 , HIGH ( _0x66 + ( 94 ) )
                 	__POINTW2MN _0x66,94
0004da d0cf      	RCALL SUBOPT_0xD
                 ; 0000 02AC delay_us(10);
                 ; 0000 02AD LCD_Pos(1,0); // ¹®ÀÚ¿­ À§Ä¡ 1Çà 1¿­ ÁöÁ¤
                 ; 0000 02AE LCD_Str(str_star); // ¹®ÀÚ¿­ strÀ» LCD µÎ¹øÂ° ¶óÀÎ¿¡ Ãâ·Â
0004db d10a      	RCALL SUBOPT_0x19
                 ; 0000 02AF LCD_Pos(1,0);
                 ; 0000 02B0 delay_us(10);
                +
0004dc e381     +LDI R24 , LOW ( 49 )
                +__DELAY_USB_LOOP :
0004dd 958a     +DEC R24
0004de f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 49
                 ; 0000 02B1 
                 ; 0000 02B2 puts_USART("Enter Password  \n");
                +
0004df eea5     +LDI R26 , LOW ( _0x66 + ( 110 ) )
0004e0 e0b5     +LDI R27 , HIGH ( _0x66 + ( 110 ) )
                 	__POINTW2MN _0x66,110
0004e1 de7a      	RCALL _puts_USART
                 ; 0000 02B3 puts_USART("-->  \n");
                +
0004e2 efa7     +LDI R26 , LOW ( _0x66 + ( 128 ) )
0004e3 e0b5     +LDI R27 , HIGH ( _0x66 + ( 128 ) )
                 	__POINTW2MN _0x66,128
0004e4 de77      	RCALL _puts_USART
                 ; 0000 02B4 
                 ; 0000 02B5 buffer_count=0;
0004e5 2455      	CLR  R5
                 ; 0000 02B6 mastermode_count =0;
0004e6 e0e0      	LDI  R30,LOW(0)
0004e7 d119      	RCALL SUBOPT_0x1D
                 ; 0000 02B7 master_flag=1;
                 ; 0000 02B8 }
                 ; 0000 02B9 }
                 _0x9E:
0004e8 cfe7      	RJMP _0x99
                 _0x9B:
                 ; 0000 02BA for(i=0;i<10;i++)
0004e9 e0e0      	LDI  R30,LOW(0)
0004ea a3ea      	STD  Y+34,R30
0004eb a3eb      	STD  Y+34+1,R30
                 _0xA0:
0004ec a1aa      	LDD  R26,Y+34
0004ed a1bb      	LDD  R27,Y+34+1
0004ee 971a      	SBIW R26,10
0004ef f474      	BRGE _0xA1
                 ; 0000 02BB {
                 ; 0000 02BC if(str[i] == master_password[i])
0004f0 d0fd      	RCALL SUBOPT_0x1B
0004f1 81a0      	LD   R26,Z
0004f2 a1ea      	LDD  R30,Y+34
0004f3 a1fb      	LDD  R31,Y+34+1
0004f4 0de8      	ADD  R30,R8
0004f5 1df9      	ADC  R31,R9
0004f6 81e0      	LD   R30,Z
0004f7 17ea      	CP   R30,R26
0004f8 f411      	BRNE _0xA2
                 ; 0000 02BD {
                 ; 0000 02BE p_count ++;
0004f9 5f2f      	SUBI R18,-1
                 ; 0000 02BF }
                 ; 0000 02C0 else
0004fa c001      	RJMP _0xA3
                 _0xA2:
                 ; 0000 02C1 {
                 ; 0000 02C2 p_count =0;
0004fb e020      	LDI  R18,LOW(0)
                 ; 0000 02C3 }
                 _0xA3:
                 ; 0000 02C4 }
0004fc d0e3      	RCALL SUBOPT_0x18
0004fd cfee      	RJMP _0xA0
                 _0xA1:
                 ; 0000 02C5 
                 ; 0000 02C6 if(p_count == 10)
0004fe 302a      	CPI  R18,10
0004ff f431      	BRNE _0xA4
                 ; 0000 02C7 {
                 ; 0000 02C8 master_count =0;
000500 e040      	LDI  R20,LOW(0)
                 ; 0000 02C9 Rock_count =0;
000501 e050      	LDI  R21,LOW(0)
                 ; 0000 02CA master_flag=0;
000502 94e8      	CLT
000503 f820      	BLD  R2,0
                 ; 0000 02CB p_count =0;
000504 e020      	LDI  R18,LOW(0)
                 ; 0000 02CC 
                 ; 0000 02CD delay_ms(500);
000505 d0b2      	RCALL SUBOPT_0x10
                 ; 0000 02CE LCD_Clear();
                 ; 0000 02CF }
                 ; 0000 02D0 }
                 _0xA4:
000506 cfab      	RJMP _0x90
                 _0x92:
                 ; 0000 02D1 
                 ; 0000 02D2 
                 ; 0000 02D3 }
                 ; 0000 02D4 
                 ; 0000 02D5 OUTFND(fnd);  //fndÃâ·Â
                 _0x8F:
000507 e0af      	LDI  R26,LOW(_fnd)
000508 e0b6      	LDI  R27,HIGH(_fnd)
000509 ddcf      	RCALL _OUTFND
                 ; 0000 02D6 
                 ; 0000 02D7 
                 ; 0000 02D8 switch(key_num)     //°¢ Å°ÆÐµå¸¶´Ù ³ª¿À´Â À½ ¼³Á¤
00050a 01f8      	MOVW R30,R16
                 ; 0000 02D9 {
                 ; 0000 02DA case 1:
00050b 30e1      	CPI  R30,LOW(0x1)
00050c e0a0      	LDI  R26,HIGH(0x1)
00050d 07fa      	CPC  R31,R26
00050e f421      	BRNE _0xA8
                 ; 0000 02DB Buzzer_play(Do);
00050f e7a4      	LDI  R26,LOW(1908)
000510 e0b7      	LDI  R27,HIGH(1908)
000511 dd27      	RCALL _Buzzer_play
                 ; 0000 02DC break;
000512 c03f      	RJMP _0xA7
                 ; 0000 02DD case 2:
                 _0xA8:
000513 30e2      	CPI  R30,LOW(0x2)
000514 e0a0      	LDI  R26,HIGH(0x2)
000515 07fa      	CPC  R31,R26
000516 f421      	BRNE _0xA9
                 ; 0000 02DE Buzzer_play(Re);
000517 eaa4      	LDI  R26,LOW(1700)
000518 e0b6      	LDI  R27,HIGH(1700)
000519 dd1f      	RCALL _Buzzer_play
                 ; 0000 02DF break;
00051a c037      	RJMP _0xA7
                 ; 0000 02E0 case 3:
                 _0xA9:
00051b 30e3      	CPI  R30,LOW(0x3)
00051c e0a0      	LDI  R26,HIGH(0x3)
00051d 07fa      	CPC  R31,R26
00051e f421      	BRNE _0xAA
                 ; 0000 02E1 Buzzer_play(Mi);
00051f eeab      	LDI  R26,LOW(1515)
000520 e0b5      	LDI  R27,HIGH(1515)
000521 dd17      	RCALL _Buzzer_play
                 ; 0000 02E2 break;
000522 c02f      	RJMP _0xA7
                 ; 0000 02E3 case 4:
                 _0xAA:
000523 30e4      	CPI  R30,LOW(0x4)
000524 e0a0      	LDI  R26,HIGH(0x4)
000525 07fa      	CPC  R31,R26
000526 f421      	BRNE _0xAB
                 ; 0000 02E4 Buzzer_play(Fa);
000527 e9a8      	LDI  R26,LOW(1432)
000528 e0b5      	LDI  R27,HIGH(1432)
000529 dd0f      	RCALL _Buzzer_play
                 ; 0000 02E5 break;
00052a c027      	RJMP _0xA7
                 ; 0000 02E6 case 5:
                 _0xAB:
00052b 30e5      	CPI  R30,LOW(0x5)
00052c e0a0      	LDI  R26,HIGH(0x5)
00052d 07fa      	CPC  R31,R26
00052e f421      	BRNE _0xAC
                 ; 0000 02E7 Buzzer_play(Sol);
00052f efab      	LDI  R26,LOW(1275)
000530 e0b4      	LDI  R27,HIGH(1275)
000531 dd07      	RCALL _Buzzer_play
                 ; 0000 02E8 break;
000532 c01f      	RJMP _0xA7
                 ; 0000 02E9 case 6:
                 _0xAC:
000533 30e6      	CPI  R30,LOW(0x6)
000534 e0a0      	LDI  R26,HIGH(0x6)
000535 07fa      	CPC  R31,R26
000536 f421      	BRNE _0xAD
                 ; 0000 02EA Buzzer_play(La);
000537 e7a0      	LDI  R26,LOW(1136)
000538 e0b4      	LDI  R27,HIGH(1136)
000539 dcff      	RCALL _Buzzer_play
                 ; 0000 02EB break;
00053a c017      	RJMP _0xA7
                 ; 0000 02EC case 7:
                 _0xAD:
00053b 30e7      	CPI  R30,LOW(0x7)
00053c e0a0      	LDI  R26,HIGH(0x7)
00053d 07fa      	CPC  R31,R26
00053e f421      	BRNE _0xAE
                 ; 0000 02ED Buzzer_play(Si);
00053f efa4      	LDI  R26,LOW(1012)
000540 e0b3      	LDI  R27,HIGH(1012)
000541 dcf7      	RCALL _Buzzer_play
                 ; 0000 02EE break;
000542 c00f      	RJMP _0xA7
                 ; 0000 02EF case 8:
                 _0xAE:
000543 30e8      	CPI  R30,LOW(0x8)
000544 e0a0      	LDI  R26,HIGH(0x8)
000545 07fa      	CPC  R31,R26
000546 f421      	BRNE _0xAF
                 ; 0000 02F0 Buzzer_play(Do/2);
000547 ebaa      	LDI  R26,LOW(954)
000548 e0b3      	LDI  R27,HIGH(954)
000549 dcef      	RCALL _Buzzer_play
                 ; 0000 02F1 break;
00054a c007      	RJMP _0xA7
                 ; 0000 02F2 case 9:
                 _0xAF:
00054b 30e9      	CPI  R30,LOW(0x9)
00054c e0a0      	LDI  R26,HIGH(0x9)
00054d 07fa      	CPC  R31,R26
00054e f419      	BRNE _0xB1
                 ; 0000 02F3 Buzzer_play(Re/2);
00054f e5a2      	LDI  R26,LOW(850)
000550 e0b3      	LDI  R27,HIGH(850)
000551 dce7      	RCALL _Buzzer_play
                 ; 0000 02F4 break;
                 ; 0000 02F5 
                 ; 0000 02F6 default:
                 _0xB1:
                 ; 0000 02F7 break;
                 ; 0000 02F8 }
                 _0xA7:
                 ; 0000 02F9 }
000552 ce2c      	RJMP _0x58
                 ; 0000 02FA }
                 _0xB2:
000553 cfff      	RJMP _0xB2
                 ; .FEND
                 
                 	.DSEG
                 _0x66:
000577           	.BYTE 0x87
                 
                 	.DSEG
                 _str:
0005fe           	.BYTE 0x11
                 _fnd:
00060f           	.BYTE 0x1C
                 _password:
00062b           	.BYTE 0x1C
                 _Port_char:
000647           	.BYTE 0x10
                 _Port_fnd:
000657           	.BYTE 0x8
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
000554 931a      	ST   -Y,R17
000555 2f1a      	MOV  R17,R26
000556 91e0 0065 	LDS  R30,101
000558 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1:
000559 93e0 0065 	STS  101,R30
00055b 91e0 0065 	LDS  R30,101
00055d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2:
00055e 60e1      	ORI  R30,1
00055f 93e0 0065 	STS  101,R30
                +
000561 ef86     +LDI R24 , LOW ( 246 )
                +__DELAY_USB_LOOP :
000562 958a     +DEC R24
000563 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 246
000564 bb1b      	OUT  0x1B,R17
                +
000565 ef86     +LDI R24 , LOW ( 246 )
                +__DELAY_USB_LOOP :
000566 958a     +DEC R24
000567 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 246
000568 91e0 0065 	LDS  R30,101
00056a 7fee      	ANDI R30,0xFE
00056b 93e0 0065 	STS  101,R30
00056d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3:
00056e e3a8      	LDI  R26,LOW(56)
00056f dbe5      	RCALL _LCD_Comm
000570 e0a4      	LDI  R26,LOW(4)
000571 cbea      	RJMP _LCD_delay
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x4:
000572 920a      	ST   -Y,R0
000573 921a      	ST   -Y,R1
000574 92fa      	ST   -Y,R15
000575 936a      	ST   -Y,R22
000576 937a      	ST   -Y,R23
000577 938a      	ST   -Y,R24
000578 939a      	ST   -Y,R25
000579 93aa      	ST   -Y,R26
00057a 93ba      	ST   -Y,R27
00057b 93ea      	ST   -Y,R30
00057c 93fa      	ST   -Y,R31
00057d b7ef      	IN   R30,SREG
00057e 93ea      	ST   -Y,R30
00057f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x5:
000580 e0e0      	LDI  R30,LOW(0)
000581 93ea      	ST   -Y,R30
000582 e0a0      	LDI  R26,LOW(0)
000583 cbdd      	RJMP _LCD_Pos
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x6:
000584 e0e1      	LDI  R30,LOW(1)
000585 93ea      	ST   -Y,R30
000586 e0a0      	LDI  R26,LOW(0)
000587 cbd9      	RJMP _LCD_Pos
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000588 d083      	RCALL __SAVELOCR4
000589 019d      	MOVW R18,R26
                +
00058a e000     +LDI R16 , LOW ( 0 )
00058b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00058c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
00058d 93e0 0065 	STS  101,R30
00058f 01da      	MOVW R26,R20
000590 cc9d      	RJMP _myDelay_us
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x9:
000591 2fa0      	MOV  R26,R16
000592 e0b0      	LDI  R27,0
000593 e0e4      	LDI  R30,LOW(4)
000594 e0f0      	LDI  R31,HIGH(4)
000595 d0b7      	RCALL __DIVW21
000596 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0xA:
000597 0fee      	LSL  R30
000598 0fee      	LSL  R30
000599 2e0e      	MOV  R0,R30
00059a 2fe0      	MOV  R30,R16
00059b e0f0      	LDI  R31,0
00059c e0a3      	LDI  R26,LOW(3)
00059d e0b0      	LDI  R27,HIGH(3)
00059e d0c1      	RCALL __MANDW12
00059f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:28 WORDS
                 SUBOPT_0xB:
0005a0 0fee      	LSL  R30
0005a1 1fff      	ROL  R31
0005a2 0fae      	ADD  R26,R30
0005a3 1fbf      	ADC  R27,R31
0005a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC:
0005a5 e0af      	LDI  R26,LOW(15)
0005a6 dbae      	RCALL _LCD_Comm
0005a7 e0a2      	LDI  R26,LOW(2)
0005a8 dbb3      	RCALL _LCD_delay
0005a9 cfd6      	RJMP SUBOPT_0x5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:26 WORDS
                 SUBOPT_0xD:
0005aa dbcc      	RCALL _LCD_Str
                +
0005ab e381     +LDI R24 , LOW ( 49 )
                +__DELAY_USB_LOOP :
0005ac 958a     +DEC R24
0005ad f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 49
0005ae cfd5      	RJMP SUBOPT_0x6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
0005af 01f8      	MOVW R30,R16
0005b0 e0af      	LDI  R26,LOW(_fnd)
0005b1 e0b6      	LDI  R27,HIGH(_fnd)
0005b2 cfed      	RJMP SUBOPT_0xB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xF:
0005b3 e0e0      	LDI  R30,LOW(0)
0005b4 e0f0      	LDI  R31,HIGH(0)
0005b5 93ed      	ST   X+,R30
0005b6 93fc      	ST   X,R31
0005b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x10:
0005b8 efa4      	LDI  R26,LOW(500)
0005b9 e0b1      	LDI  R27,HIGH(500)
0005ba d0bd      	RCALL _delay_ms
0005bb cbc8      	RJMP _LCD_Clear
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x11:
0005bc e7a4      	LDI  R26,LOW(1908)
0005bd e0b7      	LDI  R27,HIGH(1908)
0005be dc7a      	RCALL _Buzzer_play
0005bf efa4      	LDI  R26,LOW(500)
0005c0 e0b1      	LDI  R27,HIGH(500)
0005c1 c0b6      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x12:
0005c2 dc76      	RCALL _Buzzer_play
0005c3 efa4      	LDI  R26,LOW(500)
0005c4 e0b1      	LDI  R27,HIGH(500)
0005c5 c0b2      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x13:
0005c6 0fee      	LSL  R30
0005c7 1fff      	ROL  R31
0005c8 0fea      	ADD  R30,R26
0005c9 1ffb      	ADC  R31,R27
0005ca 010f      	MOVW R0,R30
0005cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x14:
0005cc 91ed      	LD   R30,X+
0005cd 91fd      	LD   R31,X+
0005ce 01d0      	MOVW R26,R0
0005cf 93ed      	ST   X+,R30
0005d0 93fc      	ST   X,R31
0005d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
0005d2 e6e6      	LDI  R30,LOW(4710)
0005d3 e1f2      	LDI  R31,HIGH(4710)
0005d4 bdfb      	OUT  0x2A+1,R31
0005d5 bdea      	OUT  0x2A,R30
0005d6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x16:
0005d7 5f3f      	SUBI R19,-1
0005d8 e3a2      	LDI  R26,LOW(50)
0005d9 e0b0      	LDI  R27,0
0005da c09d      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x17:
0005db a1ea      	LDD  R30,Y+34
0005dc a1fb      	LDD  R31,Y+34+1
0005dd e0af      	LDI  R26,LOW(_fnd)
0005de e0b6      	LDI  R27,HIGH(_fnd)
0005df cfc0      	RJMP SUBOPT_0xB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x18:
0005e0 a1ea      	LDD  R30,Y+34
0005e1 a1fb      	LDD  R31,Y+34+1
0005e2 9631      	ADIW R30,1
0005e3 a3ea      	STD  Y+34,R30
0005e4 a3fb      	STD  Y+34+1,R31
0005e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x19:
0005e6 01de      	MOVW R26,R28
0005e7 db8f      	RCALL _LCD_Str
0005e8 cf9b      	RJMP SUBOPT_0x6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
                +
0005e9 e381     +LDI R24 , LOW ( 49 )
                +__DELAY_USB_LOOP :
0005ea 958a     +DEC R24
0005eb f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 49
0005ec e0e0      	LDI  R30,LOW(0)
0005ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B:
0005ee a1ea      	LDD  R30,Y+34
0005ef a1fb      	LDD  R31,Y+34+1
0005f0 50e2      	SUBI R30,LOW(-_str)
0005f1 4ffa      	SBCI R31,HIGH(-_str)
0005f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x1C:
0005f3 e0aa      	LDI  R26,LOW(10)
0005f4 e0b0      	LDI  R27,0
0005f5 d082      	RCALL _delay_ms
0005f6 a1ec      	LDD  R30,Y+36
0005f7 a1fd      	LDD  R31,Y+36+1
0005f8 9631      	ADIW R30,1
0005f9 a3ec      	STD  Y+36,R30
0005fa a3fd      	STD  Y+36+1,R31
0005fb a1ac      	LDD  R26,Y+36
0005fc a1bd      	LDD  R27,Y+36+1
0005fd 32ad      	CPI  R26,LOW(0x12D)
0005fe e0e1      	LDI  R30,HIGH(0x12D)
0005ff 07be      	CPC  R27,R30
000600 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D:
000601 a3ec      	STD  Y+36,R30
000602 a3ed      	STD  Y+36+1,R30
000603 9468      	SET
000604 f820      	BLD  R2,0
000605 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E:
000606 dc32      	RCALL _Buzzer_play
000607 e0aa      	LDI  R26,LOW(10)
000608 e0b0      	LDI  R27,0
000609 c06e      	RJMP _delay_ms
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
00060a 935a      	ST   -Y,R21
                 __SAVELOCR5:
00060b 934a      	ST   -Y,R20
                 __SAVELOCR4:
00060c 933a      	ST   -Y,R19
                 __SAVELOCR3:
00060d 932a      	ST   -Y,R18
                 __SAVELOCR2:
00060e 931a      	ST   -Y,R17
00060f 930a      	ST   -Y,R16
000610 9508      	RET
                 
                 __LOADLOCR6:
000611 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000612 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000613 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000614 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000615 8119      	LDD  R17,Y+1
000616 8108      	LD   R16,Y
000617 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
000618 93af      	PUSH R26
000619 93bf      	PUSH R27
00061a 01db      	MOVW R26,R22
00061b 0fac      	ADD  R26,R28
00061c 1fbd      	ADC  R27,R29
                 __INITLOC0:
00061d 9005      	LPM  R0,Z+
00061e 920d      	ST   X+,R0
00061f 958a      	DEC  R24
000620 f7e1      	BRNE __INITLOC0
000621 91bf      	POP  R27
000622 91af      	POP  R26
000623 9508      	RET
                 
                 __ANEGW1:
000624 95f1      	NEG  R31
000625 95e1      	NEG  R30
000626 40f0      	SBCI R31,0
000627 9508      	RET
                 
                 __EQW12:
000628 17ea      	CP   R30,R26
000629 07fb      	CPC  R31,R27
00062a e0e1      	LDI  R30,1
00062b f009      	BREQ __EQW12T
00062c 27ee      	CLR  R30
                 __EQW12T:
00062d 9508      	RET
                 
                 __LTW12:
00062e 17ae      	CP   R26,R30
00062f 07bf      	CPC  R27,R31
000630 e0e1      	LDI  R30,1
000631 f00c      	BRLT __LTW12T
000632 27ee      	CLR  R30
                 __LTW12T:
000633 9508      	RET
                 
                 __GTW12:
000634 17ea      	CP   R30,R26
000635 07fb      	CPC  R31,R27
000636 e0e1      	LDI  R30,1
000637 f00c      	BRLT __GTW12T
000638 27ee      	CLR  R30
                 __GTW12T:
000639 9508      	RET
                 
                 __DIVW21U:
00063a 2400      	CLR  R0
00063b 2411      	CLR  R1
00063c e190      	LDI  R25,16
                 __DIVW21U1:
00063d 0faa      	LSL  R26
00063e 1fbb      	ROL  R27
00063f 1c00      	ROL  R0
000640 1c11      	ROL  R1
000641 1a0e      	SUB  R0,R30
000642 0a1f      	SBC  R1,R31
000643 f418      	BRCC __DIVW21U2
000644 0e0e      	ADD  R0,R30
000645 1e1f      	ADC  R1,R31
000646 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000647 60a1      	SBR  R26,1
                 __DIVW21U3:
000648 959a      	DEC  R25
000649 f799      	BRNE __DIVW21U1
00064a 01fd      	MOVW R30,R26
00064b 01d0      	MOVW R26,R0
00064c 9508      	RET
                 
                 __DIVW21:
00064d d01c      	RCALL __CHKSIGNW
00064e dfeb      	RCALL __DIVW21U
00064f f40e      	BRTC __DIVW211
000650 dfd3      	RCALL __ANEGW1
                 __DIVW211:
000651 9508      	RET
                 
                 __MODW21:
000652 94e8      	CLT
000653 ffb7      	SBRS R27,7
000654 c004      	RJMP __MODW211
000655 95b1      	NEG  R27
000656 95a1      	NEG  R26
000657 40b0      	SBCI R27,0
000658 9468      	SET
                 __MODW211:
000659 fdf7      	SBRC R31,7
00065a dfc9      	RCALL __ANEGW1
00065b dfde      	RCALL __DIVW21U
00065c 01fd      	MOVW R30,R26
00065d f40e      	BRTC __MODW212
00065e dfc5      	RCALL __ANEGW1
                 __MODW212:
00065f 9508      	RET
                 
                 __MANDW12:
000660 94e8      	CLT
000661 fff7      	SBRS R31,7
000662 c002      	RJMP __MANDW121
000663 dfc0      	RCALL __ANEGW1
000664 9468      	SET
                 __MANDW121:
000665 23ea      	AND  R30,R26
000666 23fb      	AND  R31,R27
000667 f40e      	BRTC __MANDW122
000668 dfbb      	RCALL __ANEGW1
                 __MANDW122:
000669 9508      	RET
                 
                 __CHKSIGNW:
00066a 94e8      	CLT
00066b fff7      	SBRS R31,7
00066c c002      	RJMP __CHKSW1
00066d dfb6      	RCALL __ANEGW1
00066e 9468      	SET
                 __CHKSW1:
00066f ffb7      	SBRS R27,7
000670 c006      	RJMP __CHKSW2
000671 95b1      	NEG  R27
000672 95a1      	NEG  R26
000673 40b0      	SBCI R27,0
000674 f800      	BLD  R0,0
000675 9403      	INC  R0
000676 fa00      	BST  R0,0
                 __CHKSW2:
000677 9508      	RET
                 
                 _delay_ms:
000678 9610      	adiw r26,0
000679 f039      	breq __delay_ms1
                 __delay_ms0:
00067a 95a8      	wdr
                +
00067b e686     +LDI R24 , LOW ( 0xE66 )
00067c e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
00067d 9701     +SBIW R24 , 1
00067e f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
00067f 9711      	sbiw r26,1
000680 f7c9      	brne __delay_ms0
                 __delay_ms1:
000681 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  35 r1 :   9 r2 :   4 r3 :   0 r4 :   5 r5 :   6 r6 :   0 r7 :   3 
r8 :   1 r9 :   1 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   2 
r16:  57 r17:  68 r18:  20 r19:  17 r20:  12 r21:   7 r22:   6 r23:   3 
r24:  38 r25:   7 r26: 228 r27: 106 r28:   9 r29:   2 r30: 298 r31: 102 
x  :  22 y  : 136 z  :  12 
Registers used: 28 out of 35 (80.0%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   5 add   :  10 
adiw  :  13 and   :   4 andi  :   7 asr   :   0 bclr  :   0 bld   :   4 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  12 
brge  :  13 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   1 
brlt  :   5 brmi  :   0 brne  :  58 brpl  :   0 brsh  :   4 brtc  :   3 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   2 bst   :   1 call  :   0 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  17 cls   :   0 clt   :   5 clv   :   0 clz   :   0 com   :   0 
cp    :  12 cpc   :  41 cpi   :  41 cpse  :   0 dec   :  15 des   :   0 
elpm  :   0 eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 
ijmp  :   0 in    :   4 inc   :   2 jmp   :  36 ld    :  34 ldd   :  52 
ldi   : 328 lds   :   7 lpm   :   8 lsl   :   6 lsr   :   0 mov   :  32 
movw  :  38 mul   :   4 muls  :   1 mulsu :   0 neg   :   6 nop   :   1 
or    :   2 ori   :   5 out   :  30 pop   :   2 push  :   2 rcall : 202 
ret   :  41 reti  :   2 rjmp  : 104 rol   :   6 ror   :   0 sbc   :   1 
sbci  :  13 sbi   :   0 sbic  :   3 sbis  :   4 sbiw  :  22 sbr   :   1 
sbrc  :   1 sbrs  :   5 sec   :   0 seh   :   0 sei   :   0 sen   :   0 
ser   :   0 ses   :   0 set   :   4 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    :  43 std   :  33 sts   :  15 sub   :   1 subi  :  19 
swap  :   0 tst   :   2 wdr   :   1 
Instructions used: 64 out of 117 (54.7%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000d04   2912    420   3332  131072   2.5%
[.dseg] 0x000100 0x00065f      0    351    351    4096   8.6%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 7 warnings
