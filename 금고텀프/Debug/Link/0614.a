;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;	ch -> R17
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;	ch -> R17
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;	ms -> R17
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;	col -> R16
;	row -> R17
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;	c -> R17
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;	*str -> R16,R17
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;	*str -> R18,R19
;	loop_count -> R17
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0

	.DSEG
_0xA:
	.BYTE 0x15

	.CSEG
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;	p -> R17
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;	p -> R17
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0

	.DSEG
_0x13:
	.BYTE 0xB
;interrupt [31] void usart1_receive(void)
; 0000 001D {

	.CSEG
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 001E if(master_flag)    //마스터모드에서만 동작하게 설정
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 001F {
; 0000 0020 str[buffer_count] = UDR1;
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 0021 if(buffer_count >= MAXLEN)
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 0022 buffer_count = 0;
;PCODE: $00000113 VOL: 0
; 0000 0023 else
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0000 0024 buffer_count++;
;PCODE: $00000116 VOL: 0
; 0000 0025 
; 0000 0026 
; 0000 0027 LCD_Clear();
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
; 0000 0028 LCD_Pos(0,0);
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 0029 LCD_Str("MASTER MODE    ");
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
; 0000 002A delay_us(1);
;PCODE: $00000120 VOL: 0
; 0000 002B LCD_Pos(1,0);
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 002C LCD_Str("**************");
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0000 002D LCD_Pos(1,0);
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 002E delay_us(1);
;PCODE: $0000012C VOL: 0
; 0000 002F LCD_Str(str);
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 0030 
; 0000 0031 }
; 0000 0032 }
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0

	.DSEG
_0x19:
	.BYTE 0x1F
;void Init_USART1_IntCon(void)
; 0000 0035 {

	.CSEG
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 0036 // RXCIE1=1(수신 인터럽트 허가), RXEN0=1(수신 허가), TXEN0 = 1(송신 허가)
; 0000 0037 UCSR1B = (1<<RXCIE1)| (1<<RXEN1) | (1 <<TXEN1);
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0000 0038 UBRR1L = 0x07; // 115200bps 보오 레이트 설정
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 0039 SREG |= 0x80; // 전체 인터럽트 허가
;PCODE: $00000139 VOL: 0
; 0000 003A }
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;void PORT_Init(void)
; 0000 003E {
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 003F DDRE=0xF0;     //FND 출력을 위한 설정
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 0040 DDRF=0xFF;     //FND 출력을 위한 설정
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 0041 DDRC=0x0F;     //키패드를 위한 설정
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
; 0000 0042 DDRG=0x10;     //부저 출력을 위한 설정
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
; 0000 0043 DDRB=0x20;     //서브모터 출력을 위한 설정
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0000 0044 
; 0000 0045 EIMSK = 0x01;    // 외부인터럽트를 0~4까지 선택
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 0046 EICRA = 0xaf;    //INT0,1은 상승에지 INT2,3 하강에지로 선택
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 0047 SREG |= 0x80;    //전체인터럽트 허가
;PCODE: $0000014C VOL: 0
; 0000 0048 DDRD |= 0x00;    //D를 입력으로 받음(스위치)
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 0049 
; 0000 004A 
; 0000 004B 
; 0000 004C PORTC=0xFF;
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
; 0000 004D }
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;char Num_to_Str(int num)
; 0000 0052 {
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
; 0000 0053 char str;
; 0000 0054 switch(num)
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;	num -> R18,R19
;	str -> R17
;PCODE: $00000158 VOL: 0
; 0000 0055 {
; 0000 0056 case 0 :
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0000 0057 str = '0';
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 0058 break;
;PCODE: $0000015D VOL: 0
; 0000 0059 case 1 :
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
; 0000 005A str = '1';
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0000 005B break;
;PCODE: $00000164 VOL: 0
; 0000 005C case 2 :
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 005D str = '2';
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0000 005E break;
;PCODE: $0000016B VOL: 0
; 0000 005F case 3 :
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0000 0060 str = '3';
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0000 0061 break;
;PCODE: $00000172 VOL: 0
; 0000 0062 case 4 :
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
; 0000 0063 str = '4';
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0000 0064 break;
;PCODE: $00000179 VOL: 0
; 0000 0065 case 5 :
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 0066 str = '5';
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
; 0000 0067 break;
;PCODE: $00000180 VOL: 0
; 0000 0068 case 6 :
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 0069 str = '6';
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
; 0000 006A break;
;PCODE: $00000187 VOL: 0
; 0000 006B case 7 :
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
; 0000 006C str = '7';
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 006D break;
;PCODE: $0000018E VOL: 0
; 0000 006E case 8 :
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 006F str = '8';
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
; 0000 0070 break;
;PCODE: $00000195 VOL: 0
; 0000 0071 case 9 :
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
; 0000 0072 str = '9';
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0000 0073 break;
;PCODE: $0000019C VOL: 0
; 0000 0074 dafault:
;PCODE: $0000019D VOL: 0
; 0000 0075 break;
;PCODE: $0000019E VOL: 0
; 0000 0076 }
;PCODE: $0000019F VOL: 0
; 0000 0077 return str;
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0000 0078 
; 0000 0079 }
;PCODE: $000001A4 VOL: 0
;void Init_Timer1(void)
; 0000 007C {
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
; 0000 007D 
; 0000 007E TCCR1A = (1<<COM1A1) | (1<<WGM11);
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
; 0000 007F TCCR1B = (1<<WGM13) | (1<<WGM12) | (1<<CS11);
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
; 0000 0080 TCNT1 = 0x00;
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
; 0000 0081 ICR1 = 36864-1; // TOP 값 : 36864-> 20ms(0.542us X 36864), 0~36863
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
; 0000 0082 OCR1A =2765 ; // 초기 시작 위치 0도
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
; 0000 0083 TIMSK |= (1<<OCIE1A); // Output Compare Match Interrupt 허가
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
; 0000 0084 }
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;interrupt [13] void compare(void)
; 0000 0087 {
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
; 0000 0088 #asm("nop");          //비교일치 인터럽트 구문
;PCODE: $000001B8 VOL: 0
; 0000 0089 }
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;void myDelay_us(unsigned int delay)
; 0000 008C 
; 0000 008D {
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
; 0000 008E unsigned int loop;
; 0000 008F for(loop=0; loop<delay; loop++)
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;	delay -> R18,R19
;	loop -> R16,R17
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
; 0000 0090 delay_us(1);
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
; 0000 0091 }
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;void Buzzer_play(unsigned int delay)
; 0000 0095 {
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
; 0000 0096 unsigned int loop;
; 0000 0097 unsigned char Play_Tim=0;
; 0000 0098 Play_Tim = 10000/delay;
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;	delay -> R20,R21
;	loop -> R16,R17
;	Play_Tim -> R19
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
; 0000 0099 for(loop=0; loop<Play_Tim; loop++)
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
; 0000 009A {
; 0000 009B PORTG |= 1<<4;      //buzzer off, PORTG의 4번 핀 on(out 1)
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
; 0000 009C myDelay_us(delay);
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
; 0000 009D PORTG &= ~(1<<4);   //buzzer on, PORTG의 4번 핀 off(out 0)
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
; 0000 009E myDelay_us(delay);
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
; 0000 009F }
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
; 0000 00A0 }
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;unsigned char KeyScan(void)
; 0000 00A3 {
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
; 0000 00A4 unsigned int key_scan_line = 0xFE;
; 0000 00A5 unsigned char key_scan_loop =0, getPinData =0;
; 0000 00A6 unsigned int key_num =0;
; 0000 00A7 
; 0000 00A8 for(key_scan_loop =0; key_scan_loop <4;key_scan_loop++)
;PCODE: $000001FD VOL: 0
;	key_scan_line -> R16,R17
;	key_scan_loop -> R19
;	getPinData -> R18
;	key_num -> R20,R21
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
; 0000 00A9 {
; 0000 00AA PORTC = key_scan_line;
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
; 0000 00AB delay_us(1);
;PCODE: $00000211 VOL: 0
; 0000 00AC 
; 0000 00AD getPinData = PINC & 0xF0;
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
; 0000 00AE 
; 0000 00AF if(getPinData != 0x00)
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
; 0000 00B0 {
; 0000 00B1 switch(getPinData)
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
; 0000 00B2 {
; 0000 00B3 case 0x10:
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
; 0000 00B4 key_num = key_scan_loop * 4 +1 ;
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
; 0000 00B5 break;
;PCODE: $00000220 VOL: 0
; 0000 00B6 case 0x20:
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
; 0000 00B7 key_num = key_scan_loop * 4 +2 ;
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
; 0000 00B8 break;
;PCODE: $00000229 VOL: 0
; 0000 00B9 case 0x40:
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
; 0000 00BA key_num = key_scan_loop * 4 +3 ;
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
; 0000 00BB break;
;PCODE: $00000232 VOL: 0
; 0000 00BC case 0x80:
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
; 0000 00BD key_num = key_scan_loop * 4 +4 ;
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
; 0000 00BE break;
;PCODE: $0000023B VOL: 0
; 0000 00BF 
; 0000 00C0 }
;PCODE: $0000023C VOL: 0
; 0000 00C1 
; 0000 00C2 return key_num;
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
; 0000 00C3 
; 0000 00C4 
; 0000 00C5 }
; 0000 00C6 key_scan_line = (key_scan_line <<1);
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
; 0000 00C7 }
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
; 0000 00C8 
; 0000 00C9 }
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;unsigned char Changenum(unsigned char num)
; 0000 00CB //상황에 맞게 변환
; 0000 00CC {
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
; 0000 00CD 
; 0000 00CE unsigned char return_num=0;
; 0000 00CF if(num ==0){
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;	num -> R16
;	return_num -> R17
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
; 0000 00D0 return_num =0;
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
; 0000 00D1 }
; 0000 00D2 else if (num%4 ==0){                      // 1 2 3   13
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
; 0000 00D3 return_num = 12 + num/4;                 // 4 5 6   14
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
; 0000 00D4 // 7 8 9   15
; 0000 00D5 }                                         // 10 0 12 16
; 0000 00D6 else if( num/4 ==0){                      // 위처럼 인식되게 변환
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
; 0000 00D7 return_num = (4*(num/4) +num%4)  ;
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
; 0000 00D8 
; 0000 00D9 }
; 0000 00DA else if( num/4 ==1){
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
; 0000 00DB return_num = (4*(num/4) +num%4) -1 ;
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
; 0000 00DC 
; 0000 00DD }
; 0000 00DE else if( num/4 ==2){
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
; 0000 00DF return_num = (4*(num/4) +num%4) -2 ;
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
; 0000 00E0 
; 0000 00E1 }
; 0000 00E2 else if( num/4 ==3){
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
; 0000 00E3 return_num = (4*(num/4) +num%4) -3 ;
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
; 0000 00E4 
; 0000 00E5 }
; 0000 00E6 
; 0000 00E7 if (return_num ==11){
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
; 0000 00E8 return_num =0;
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
; 0000 00E9 
; 0000 00EA zero_flag =1;   // 아무것도 누르지 않을때도 0이 저장되기에
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
; 0000 00EB // 0을 누를때 zero_flag동작되게 설정
; 0000 00EC 
; 0000 00ED 
; 0000 00EE 
; 0000 00EF }
; 0000 00F0 return return_num;
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
; 0000 00F1 }
;PCODE: $000002CC VOL: 0
;void OUTFND( int FND[] )
; 0000 00FB {
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
; 0000 00FC int i=0;
; 0000 00FD for(i=0;i<4;i++ )
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
;	FND -> R18,R19
;	i -> R16,R17
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
; 0000 00FE {
; 0000 00FF 
; 0000 0100 
; 0000 0101 PORTE = Port_fnd[i];
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
; 0000 0102 PORTF = Port_char[FND[i]];
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
; 0000 0103 delay_ms(10);
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
; 0000 0104 
; 0000 0105 
; 0000 0106 
; 0000 0107 }
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
; 0000 0108 }
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
;interrupt [2] void ext_int0_isr(void)
; 0000 010D {
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
; 0000 010E int i=0;
; 0000 010F delay_ms(50);
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
;	i -> R16,R17
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
; 0000 0110 if(interrupt_flag ==0)  //flag가0일시 비밀번호 set상태
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
; 0000 0111 {
; 0000 0112 delay_ms(10);
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
; 0000 0113 LCD_Comm(0x0f); // 모든 기능을 ON 한다.
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
; 0000 0114 LCD_delay(2);// 1.64㎳ 이상을 기다림
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
; 0000 0115 
; 0000 0116 
; 0000 0117 LCD_Pos(0,0); // 문자열 위치 0행 1열 지정
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
; 0000 0118 LCD_Str("PASSWORD SET"); // 문자열 str을 LCD 첫번째 라인에 출력
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
; 0000 0119 delay_us(10);
;PCODE: $0000030F VOL: 0
; 0000 011A LCD_Pos(1,0); // 문자열 위치 1행 1열 지정
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
; 0000 011B LCD_Str("--------------"); // 문자열 str을 LCD 두번째 라인에 출력
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
; 0000 011C LCD_Pos(1,0);
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
; 0000 011D delay_us(10);
;PCODE: $0000031B VOL: 0
; 0000 011E 
; 0000 011F 
; 0000 0120 
; 0000 0121 
; 0000 0122 for(i=0;i<14;i++) {
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
; 0000 0123 fnd[i] = 0; }
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
; 0000 0124 
; 0000 0125 interrupt_flag =1;
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
; 0000 0126 
; 0000 0127 }
; 0000 0128 else    //들어온 비밀번호를 저장
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
; 0000 0129 {
; 0000 012A 
; 0000 012B 
; 0000 012C LCD_Pos(0,0); // 문자열 위치 0행 1열 지정
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
; 0000 012D LCD_Str("PASSWORD SET"); // 문자열 str을 LCD 첫번째 라인에 출력
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
; 0000 012E delay_us(10);
;PCODE: $0000033B VOL: 0
; 0000 012F LCD_Pos(1,0); // 문자열 위치 1행 1열 지정
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
; 0000 0130 LCD_Str(" -SUCCESS-    "); // 문자열 str을 LCD 두번째 라인에 출력
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
; 0000 0131 LCD_Pos(1,0);
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
; 0000 0132 delay_us(10);
;PCODE: $00000347 VOL: 0
; 0000 0133 
; 0000 0134 delay_ms(500);
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
; 0000 0135 LCD_Clear();
;PCODE: $0000034A VOL: 0
; 0000 0136 
; 0000 0137 
; 0000 0138 Buzzer_play(Do);
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
; 0000 0139 delay_ms(500);
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
; 0000 013A Buzzer_play(Re);
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
; 0000 013B delay_ms(500);
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
; 0000 013C Buzzer_play(Mi);
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
; 0000 013D 
; 0000 013E 
; 0000 013F 
; 0000 0140 for(i=0;i<14;i++)
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
; 0000 0141 {
; 0000 0142 password[i] = fnd[i];    //새 비밀번호를 저장
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
; 0000 0143 }
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
; 0000 0144 
; 0000 0145 interrupt_flag = 0;
;PCODE: $0000036F VOL: 0
; 0000 0146 
; 0000 0147 }
;PCODE: $00000370 VOL: 0
; 0000 0148 
; 0000 0149 }
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0

	.DSEG
_0x49:
	.BYTE 0x38
;void putch_USART(char data)
; 0000 014B {

	.CSEG
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
; 0000 014C while(!(UCSR1A & (1<<UDRE1)));
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
;	data -> R17
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
; 0000 014D UDR1 = data;
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
; 0000 014E }
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
;void puts_USART(char *str)
; 0000 0151 {
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
; 0000 0152 while(*str!= 0)
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
;	*str -> R16,R17
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
; 0000 0153 {
; 0000 0154 putch_USART(*str);
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
; 0000 0155 str++;
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
; 0000 0156 }
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
; 0000 0157 }
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
;void main (void)
; 0000 015D {
;PCODE: $00000398 VOL: 0
; 0000 015E int key_num=0;        //키패드로 받은 숫자
; 0000 015F char count =0;        //count 변수_fnd에서 숫자받을때 사용
; 0000 0160 char p_count=0;       //password 일치확인할때 사용
; 0000 0161 char Rock_count =0;   //3번이상 틀릴때 rock되게 사용
; 0000 0162 char master_count=1;  //위험감지시 사이렌모드로 동작하게 사용
; 0000 0163 int star_count=0;     //*이 3초이상 눌리는지 감지할때 사용
; 0000 0164 int mastermode_count=0; //mastermode에 들어갔는지 감지에 사용
; 0000 0165 int i=0;   //for문을 돌리기 위한 변수
; 0000 0166 
; 0000 0167 unsigned char  loop_count=0;
; 0000 0168 unsigned char  str_password[] = "PASSWORD        ";
; 0000 0169 unsigned char  str_star[] = "************** ";
; 0000 016A 
; 0000 016B 
; 0000 016C Init_USART1_IntCon();
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
;	key_num -> R16,R17
;	count -> R19
;	p_count -> R18
;	Rock_count -> R21
;	master_count -> R20
;	star_count -> Y+38
;	mastermode_count -> Y+36
;	i -> Y+34
;	loop_count -> Y+33
;	str_password -> Y+16
;	str_star -> Y+0
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
; 0000 016D Init_Timer1();  // 타이머 초기설정
;PCODE: $000003AA VOL: 0
; 0000 016E PORT_Init();    // 포트들 입출력 초기 설정
;PCODE: $000003AB VOL: 0
; 0000 016F LCD_PORT_Init; // LCD 출력 포트 설정
;PCODE: $000003AC VOL: 0
; 0000 0170 LCD_Init(); // LCD 초기화
;PCODE: $000003AD VOL: 0
; 0000 0171 OCR1A = 4710; //모터 초기설정(잠김)
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
; 0000 0172 
; 0000 0173 
; 0000 0174 
; 0000 0175 while(1)
;PCODE: $000003B0 VOL: 0
; 0000 0176 {
; 0000 0177 
; 0000 0178 
; 0000 0179 key_num= Changenum(KeyScan());  //keyscan으로 받은 값을 변환하여 저장
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
;PCODE: $000003B5 VOL: 0
; 0000 017A 
; 0000 017B if(key_num<10 & key_num>0 )   //숫자가 눌리면 새로운 값을 저장하도록 count값 설정
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
; 0000 017C {
; 0000 017D count++;
;PCODE: $000003BF VOL: 0
;PCODE: $000003C0 VOL: 0
; 0000 017E delay_ms(50);
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
;PCODE: $000003C3 VOL: 0
; 0000 017F 
; 0000 0180 }
; 0000 0181 else if(key_num==0 & zero_flag)   //zero_flag가 실행된 경우에만 0으로 입력
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
; 0000 0182 {
; 0000 0183 count++;
;PCODE: $000003CB VOL: 0
;PCODE: $000003CC VOL: 0
; 0000 0184 delay_ms(50);
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
; 0000 0185 }
; 0000 0186 else if(key_num == 10 )
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
; 0000 0187 {
; 0000 0188 for(i=0;i<14;i++)   //비밀번호 일치하는지 확인
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
; 0000 0189 {
; 0000 018A if(fnd[i] == password[i])
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
;PCODE: $000003E3 VOL: 0
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
;PCODE: $000003E6 VOL: 0
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
;PCODE: $000003EA VOL: 0
; 0000 018B {
; 0000 018C p_count ++;
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
; 0000 018D }
; 0000 018E else
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
; 0000 018F {
; 0000 0190 p_count =0;
;PCODE: $000003EF VOL: 0
;PCODE: $000003F0 VOL: 0
; 0000 0191 }
;PCODE: $000003F1 VOL: 0
; 0000 0192 
; 0000 0193 }
;PCODE: $000003F2 VOL: 0
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
;PCODE: $000003F7 VOL: 0
; 0000 0194 
; 0000 0195 if(p_count == 14)  //비밀번호 일치시
;PCODE: $000003F8 VOL: 0
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
; 0000 0196 {
; 0000 0197 LCD_Pos(0,0); // 문자열 위치 0행 1열 지정
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
; 0000 0198 LCD_Str("DOOR OPEN    "); // 문자열 str을 LCD 첫번째 라인에 출력
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
;PCODE: $00000401 VOL: 0
; 0000 0199 delay_us(10);
;PCODE: $00000402 VOL: 0
; 0000 019A LCD_Pos(1,0); // 문자열 위치 1행 1열 지정
;PCODE: $00000403 VOL: 0
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
;PCODE: $00000406 VOL: 0
; 0000 019B LCD_Str("              "); // 문자열 str을 LCD 두번째 라인에 출력
;PCODE: $00000407 VOL: 0
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
; 0000 019C LCD_Pos(1,0);
;PCODE: $0000040A VOL: 0
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
;PCODE: $0000040D VOL: 0
; 0000 019D 
; 0000 019E Buzzer_play(Do);
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
; 0000 019F delay_ms(500);
;PCODE: $00000410 VOL: 0
;PCODE: $00000411 VOL: 0
; 0000 01A0 Buzzer_play(Mi);
;PCODE: $00000412 VOL: 0
;PCODE: $00000413 VOL: 0
; 0000 01A1 delay_ms(500);
;PCODE: $00000414 VOL: 0
;PCODE: $00000415 VOL: 0
; 0000 01A2 Buzzer_play(Sol);
;PCODE: $00000416 VOL: 0
;PCODE: $00000417 VOL: 0
; 0000 01A3 delay_ms(500);
;PCODE: $00000418 VOL: 0
;PCODE: $00000419 VOL: 0
; 0000 01A4 Buzzer_play(Do/2);
;PCODE: $0000041A VOL: 0
;PCODE: $0000041B VOL: 0
; 0000 01A5 delay_ms(500);
;PCODE: $0000041C VOL: 0
;PCODE: $0000041D VOL: 0
; 0000 01A6 LCD_Clear();
;PCODE: $0000041E VOL: 0
; 0000 01A7 
; 0000 01A8 OCR1A = 3000;    //모터 해제
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
; 0000 01A9 for(i=0;i<14;i++) {
;PCODE: $00000421 VOL: 0
;PCODE: $00000422 VOL: 0
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
;PCODE: $00000425 VOL: 0
;PCODE: $00000426 VOL: 0
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
;PCODE: $0000042A VOL: 0
; 0000 01AA fnd[i] = 0; }  //받은 fnd값 초기화
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 0
;PCODE: $0000042D VOL: 0
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
;PCODE: $00000431 VOL: 0
;PCODE: $00000432 VOL: 0
;PCODE: $00000433 VOL: 0
;PCODE: $00000434 VOL: 0
;PCODE: $00000435 VOL: 0
;PCODE: $00000436 VOL: 0
; 0000 01AB 
; 0000 01AC p_count=0;
;PCODE: $00000437 VOL: 0
;PCODE: $00000438 VOL: 0
; 0000 01AD }
; 0000 01AE else  //비밀번호 오류시
;PCODE: $00000439 VOL: 0
;PCODE: $0000043A VOL: 0
; 0000 01AF {
; 0000 01B0 LCD_Pos(0,0); // 문자열 위치 0행 1열 지정
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
; 0000 01B1 LCD_Str(str_password); // 문자열 str을 LCD 첫번째 라인에 출력
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
; 0000 01B2 delay_us(10);
;PCODE: $00000441 VOL: 0
; 0000 01B3 LCD_Pos(1,0); // 문자열 위치 1행 1열 지정
;PCODE: $00000442 VOL: 0
;PCODE: $00000443 VOL: 0
;PCODE: $00000444 VOL: 0
;PCODE: $00000445 VOL: 0
; 0000 01B4 LCD_Str(" error.......   "); // 문자열 str을 LCD 두번째 라인에 출력
;PCODE: $00000446 VOL: 0
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
; 0000 01B5 LCD_Pos(1,0);
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
;PCODE: $0000044B VOL: 0
;PCODE: $0000044C VOL: 0
; 0000 01B6 
; 0000 01B7 
; 0000 01B8 
; 0000 01B9 Buzzer_play(La);
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
; 0000 01BA delay_ms(500);
;PCODE: $0000044F VOL: 0
;PCODE: $00000450 VOL: 0
; 0000 01BB Buzzer_play(La);
;PCODE: $00000451 VOL: 0
;PCODE: $00000452 VOL: 0
; 0000 01BC delay_ms(500);
;PCODE: $00000453 VOL: 0
;PCODE: $00000454 VOL: 0
; 0000 01BD Buzzer_play(La);
;PCODE: $00000455 VOL: 0
;PCODE: $00000456 VOL: 0
; 0000 01BE delay_ms(500);
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
; 0000 01BF LCD_Clear();
;PCODE: $00000459 VOL: 0
; 0000 01C0 
; 0000 01C1 
; 0000 01C2 for(i=0;i<14;i++) {
;PCODE: $0000045A VOL: 0
;PCODE: $0000045B VOL: 0
;PCODE: $0000045C VOL: 0
;PCODE: $0000045D VOL: 0
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
;PCODE: $00000461 VOL: 0
;PCODE: $00000462 VOL: 0
;PCODE: $00000463 VOL: 0
; 0000 01C3 fnd[i] = 0; }
;PCODE: $00000464 VOL: 0
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
;PCODE: $00000467 VOL: 0
;PCODE: $00000468 VOL: 0
;PCODE: $00000469 VOL: 0
;PCODE: $0000046A VOL: 0
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
;PCODE: $0000046D VOL: 0
;PCODE: $0000046E VOL: 0
;PCODE: $0000046F VOL: 0
; 0000 01C4 
; 0000 01C5 p_count=0;
;PCODE: $00000470 VOL: 0
;PCODE: $00000471 VOL: 0
; 0000 01C6 Rock_count ++;    //오류시 Rock_count가 증가함
;PCODE: $00000472 VOL: 0
;PCODE: $00000473 VOL: 0
; 0000 01C7 
; 0000 01C8 }
;PCODE: $00000474 VOL: 0
; 0000 01C9 
; 0000 01CA 
; 0000 01CB 
; 0000 01CC 
; 0000 01CD 
; 0000 01CE }
; 0000 01CF 
; 0000 01D0 
; 0000 01D1 else if(key_num==12)   //#버튼에 해당
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
;PCODE: $00000477 VOL: 0
;PCODE: $00000478 VOL: 0
;PCODE: $00000479 VOL: 0
; 0000 01D2 {
; 0000 01D3 LCD_Comm(0x0f); // 모든 기능을 ON 한다.
;PCODE: $0000047A VOL: 0
;PCODE: $0000047B VOL: 0
; 0000 01D4 LCD_delay(2);// 1.64㎳ 이상을 기다림
;PCODE: $0000047C VOL: 0
;PCODE: $0000047D VOL: 0
; 0000 01D5 
; 0000 01D6 
; 0000 01D7 LCD_Pos(0,0); // 문자열 위치 0행 1열 지정
;PCODE: $0000047E VOL: 0
;PCODE: $0000047F VOL: 0
;PCODE: $00000480 VOL: 0
;PCODE: $00000481 VOL: 0
; 0000 01D8 LCD_Str(str_password); // 문자열 str을 LCD 첫번째 라인에 출력
;PCODE: $00000482 VOL: 0
;PCODE: $00000483 VOL: 0
; 0000 01D9 delay_us(10);
;PCODE: $00000484 VOL: 0
; 0000 01DA LCD_Pos(1,0); // 문자열 위치 1행 1열 지정
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
;PCODE: $00000487 VOL: 0
;PCODE: $00000488 VOL: 0
; 0000 01DB LCD_Str(str_star); // 문자열 str을 LCD 두번째 라인에 출력
;PCODE: $00000489 VOL: 0
;PCODE: $0000048A VOL: 0
; 0000 01DC LCD_Pos(1,0);
;PCODE: $0000048B VOL: 0
;PCODE: $0000048C VOL: 0
;PCODE: $0000048D VOL: 0
;PCODE: $0000048E VOL: 0
; 0000 01DD delay_us(10);
;PCODE: $0000048F VOL: 0
; 0000 01DE 
; 0000 01DF for(i=0;i<14;i++)  //fnd값 초기화
;PCODE: $00000490 VOL: 0
;PCODE: $00000491 VOL: 0
;PCODE: $00000492 VOL: 0
;PCODE: $00000493 VOL: 0
;PCODE: $00000494 VOL: 0
;PCODE: $00000495 VOL: 0
;PCODE: $00000496 VOL: 0
;PCODE: $00000497 VOL: 0
;PCODE: $00000498 VOL: 0
;PCODE: $00000499 VOL: 0
; 0000 01E0 {
; 0000 01E1 fnd[i] =0;
;PCODE: $0000049A VOL: 0
;PCODE: $0000049B VOL: 0
;PCODE: $0000049C VOL: 0
;PCODE: $0000049D VOL: 0
;PCODE: $0000049E VOL: 0
;PCODE: $0000049F VOL: 0
; 0000 01E2 }
;PCODE: $000004A0 VOL: 0
;PCODE: $000004A1 VOL: 0
;PCODE: $000004A2 VOL: 0
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
;PCODE: $000004A5 VOL: 0
; 0000 01E3 
; 0000 01E4 for(i=0;i<17;i++)
;PCODE: $000004A6 VOL: 0
;PCODE: $000004A7 VOL: 0
;PCODE: $000004A8 VOL: 0
;PCODE: $000004A9 VOL: 0
;PCODE: $000004AA VOL: 0
;PCODE: $000004AB VOL: 0
;PCODE: $000004AC VOL: 0
;PCODE: $000004AD VOL: 0
;PCODE: $000004AE VOL: 0
;PCODE: $000004AF VOL: 0
; 0000 01E5 {
; 0000 01E6 str[i] = '*';  //마스터모드에서 잘못 입력하였을때 사용
;PCODE: $000004B0 VOL: 0
;PCODE: $000004B1 VOL: 0
;PCODE: $000004B2 VOL: 0
;PCODE: $000004B3 VOL: 0
; 0000 01E7 }
;PCODE: $000004B4 VOL: 0
;PCODE: $000004B5 VOL: 0
;PCODE: $000004B6 VOL: 0
;PCODE: $000004B7 VOL: 0
;PCODE: $000004B8 VOL: 0
;PCODE: $000004B9 VOL: 0
; 0000 01E8 buffer_count=0;
;PCODE: $000004BA VOL: 0
; 0000 01E9 master_flag=0;
;PCODE: $000004BB VOL: 0
;PCODE: $000004BC VOL: 0
;PCODE: $000004BD VOL: 0
; 0000 01EA 
; 0000 01EB }
; 0000 01EC else if(key_num==13) // FND 출력숫자 리셋버튼 기능
;PCODE: $000004BE VOL: 0
;PCODE: $000004BF VOL: 0
;PCODE: $000004C0 VOL: 0
;PCODE: $000004C1 VOL: 0
;PCODE: $000004C2 VOL: 0
; 0000 01ED {
; 0000 01EE for(i=0;i<14;i++)
;PCODE: $000004C3 VOL: 0
;PCODE: $000004C4 VOL: 0
;PCODE: $000004C5 VOL: 0
;PCODE: $000004C6 VOL: 0
;PCODE: $000004C7 VOL: 0
;PCODE: $000004C8 VOL: 0
;PCODE: $000004C9 VOL: 0
;PCODE: $000004CA VOL: 0
;PCODE: $000004CB VOL: 0
;PCODE: $000004CC VOL: 0
; 0000 01EF fnd[i] =0;
;PCODE: $000004CD VOL: 0
;PCODE: $000004CE VOL: 0
;PCODE: $000004CF VOL: 0
;PCODE: $000004D0 VOL: 0
;PCODE: $000004D1 VOL: 0
;PCODE: $000004D2 VOL: 0
;PCODE: $000004D3 VOL: 0
;PCODE: $000004D4 VOL: 0
;PCODE: $000004D5 VOL: 0
;PCODE: $000004D6 VOL: 0
;PCODE: $000004D7 VOL: 0
;PCODE: $000004D8 VOL: 0
; 0000 01F0 }
; 0000 01F1 
; 0000 01F2 if((key_num)| zero_flag)
;PCODE: $000004D9 VOL: 0
;PCODE: $000004DA VOL: 0
;PCODE: $000004DB VOL: 0
;PCODE: $000004DC VOL: 0
;PCODE: $000004DD VOL: 0
;PCODE: $000004DE VOL: 0
;PCODE: $000004DF VOL: 0
;PCODE: $000004E0 VOL: 0
;PCODE: $000004E1 VOL: 0
;PCODE: $000004E2 VOL: 0
; 0000 01F3 {
; 0000 01F4 if((count%2) ==1){   //count가 홀수일때 들어온 t값을 저장하고
;PCODE: $000004E3 VOL: 0
;PCODE: $000004E4 VOL: 0
;PCODE: $000004E5 VOL: 0
;PCODE: $000004E6 VOL: 0
;PCODE: $000004E7 VOL: 0
;PCODE: $000004E8 VOL: 0
; 0000 01F5 //다시 count를 짝수로 만듬
; 0000 01F6 
; 0000 01F7 for(i=13;i>0;i--) //키패드로 입력되는 수들을 fnd배열에 저장
;PCODE: $000004E9 VOL: 0
;PCODE: $000004EA VOL: 0
;PCODE: $000004EB VOL: 0
;PCODE: $000004EC VOL: 0
;PCODE: $000004ED VOL: 0
;PCODE: $000004EE VOL: 0
;PCODE: $000004EF VOL: 0
;PCODE: $000004F0 VOL: 0
;PCODE: $000004F1 VOL: 0
;PCODE: $000004F2 VOL: 0
; 0000 01F8 {
; 0000 01F9 fnd[i] = fnd[i-1];
;PCODE: $000004F3 VOL: 0
;PCODE: $000004F4 VOL: 0
;PCODE: $000004F5 VOL: 0
;PCODE: $000004F6 VOL: 0
;PCODE: $000004F7 VOL: 0
;PCODE: $000004F8 VOL: 0
;PCODE: $000004F9 VOL: 0
;PCODE: $000004FA VOL: 0
;PCODE: $000004FB VOL: 0
;PCODE: $000004FC VOL: 0
;PCODE: $000004FD VOL: 0
;PCODE: $000004FE VOL: 0
;PCODE: $000004FF VOL: 0
; 0000 01FA delay_ms(20);
;PCODE: $00000500 VOL: 0
;PCODE: $00000501 VOL: 0
;PCODE: $00000502 VOL: 0
; 0000 01FB }
;PCODE: $00000503 VOL: 0
;PCODE: $00000504 VOL: 0
;PCODE: $00000505 VOL: 0
;PCODE: $00000506 VOL: 0
;PCODE: $00000507 VOL: 0
;PCODE: $00000508 VOL: 0
; 0000 01FC 
; 0000 01FD fnd[0] = key_num;
;PCODE: $00000509 VOL: 0
;PCODE: $0000050A VOL: 0
; 0000 01FE 
; 0000 01FF 
; 0000 0200 count++;
;PCODE: $0000050B VOL: 0
;PCODE: $0000050C VOL: 0
; 0000 0201 delay_ms(50);
;PCODE: $0000050D VOL: 0
;PCODE: $0000050E VOL: 0
;PCODE: $0000050F VOL: 0
; 0000 0202 
; 0000 0203 LCD_Char ( Num_to_Str(key_num));//입력되면 lcd에 출력
;PCODE: $00000510 VOL: 0
;PCODE: $00000511 VOL: 0
;PCODE: $00000512 VOL: 0
;PCODE: $00000513 VOL: 0
; 0000 0204 
; 0000 0205 }
; 0000 0206 
; 0000 0207 
; 0000 0208 if(zero_flag) //0이 발생시 zeroflag를 다시 0으로만들어 0을 다시 받을수 있게함
;PCODE: $00000514 VOL: 0
;PCODE: $00000515 VOL: 0
;PCODE: $00000516 VOL: 0
; 0000 0209 {
; 0000 020A zero_flag = 0;
;PCODE: $00000517 VOL: 0
; 0000 020B }
; 0000 020C }
;PCODE: $00000518 VOL: 0
; 0000 020D 
; 0000 020E 
; 0000 020F 
; 0000 0210 
; 0000 0211 if(PINC.4 && PINC.6)
;PCODE: $00000519 VOL: 0
;PCODE: $0000051A VOL: 0
;PCODE: $0000051B VOL: 0
;PCODE: $0000051C VOL: 0
;PCODE: $0000051D VOL: 0
;PCODE: $0000051E VOL: 0
;PCODE: $0000051F VOL: 0
;PCODE: $00000520 VOL: 0
;PCODE: $00000521 VOL: 0
;PCODE: $00000522 VOL: 0
;PCODE: $00000523 VOL: 0
; 0000 0212 {
; 0000 0213 while(PINC.4 && PINC.6){  // *과 #을 동시에 누른 상태
;PCODE: $00000524 VOL: 0
;PCODE: $00000525 VOL: 0
;PCODE: $00000526 VOL: 0
;PCODE: $00000527 VOL: 0
;PCODE: $00000528 VOL: 0
;PCODE: $00000529 VOL: 0
;PCODE: $0000052A VOL: 0
;PCODE: $0000052B VOL: 0
;PCODE: $0000052C VOL: 0
;PCODE: $0000052D VOL: 0
;PCODE: $0000052E VOL: 0
; 0000 0214 delay_ms(10);
;PCODE: $0000052F VOL: 0
;PCODE: $00000530 VOL: 0
;PCODE: $00000531 VOL: 0
; 0000 0215 mastermode_count++;  //초 카운트
;PCODE: $00000532 VOL: 0
;PCODE: $00000533 VOL: 0
;PCODE: $00000534 VOL: 0
; 0000 0216 
; 0000 0217 if(mastermode_count >  300)  //3초 카운트
;PCODE: $00000535 VOL: 0
;PCODE: $00000536 VOL: 0
;PCODE: $00000537 VOL: 0
; 0000 0218 {
; 0000 0219 LCD_Pos(0,0); // 문자열 위치 0행 1열 지정
;PCODE: $00000538 VOL: 0
;PCODE: $00000539 VOL: 0
;PCODE: $0000053A VOL: 0
;PCODE: $0000053B VOL: 0
; 0000 021A LCD_Str("MASTER MODE    "); // 문자열 str을 LCD 첫번째 라인에 출력
;PCODE: $0000053C VOL: 0
;PCODE: $0000053D VOL: 0
;PCODE: $0000053E VOL: 0
; 0000 021B delay_us(10);
;PCODE: $0000053F VOL: 0
; 0000 021C LCD_Pos(1,0); // 문자열 위치 1행 1열 지정
;PCODE: $00000540 VOL: 0
;PCODE: $00000541 VOL: 0
;PCODE: $00000542 VOL: 0
;PCODE: $00000543 VOL: 0
; 0000 021D LCD_Str(str_star); // 문자열 str을 LCD 두번째 라인에 출력
;PCODE: $00000544 VOL: 0
;PCODE: $00000545 VOL: 0
; 0000 021E LCD_Pos(1,0);
;PCODE: $00000546 VOL: 0
;PCODE: $00000547 VOL: 0
;PCODE: $00000548 VOL: 0
;PCODE: $00000549 VOL: 0
; 0000 021F delay_us(10);
;PCODE: $0000054A VOL: 0
; 0000 0220 
; 0000 0221 mastermode_count =0;
;PCODE: $0000054B VOL: 0
;PCODE: $0000054C VOL: 0
; 0000 0222 master_flag=1;  //마스터 모드 들어감
;PCODE: $0000054D VOL: 0
;PCODE: $0000054E VOL: 0
;PCODE: $0000054F VOL: 0
; 0000 0223 }
; 0000 0224 
; 0000 0225 }
;PCODE: $00000550 VOL: 0
;PCODE: $00000551 VOL: 0
;PCODE: $00000552 VOL: 0
; 0000 0226 }
; 0000 0227 else
;PCODE: $00000553 VOL: 0
;PCODE: $00000554 VOL: 0
; 0000 0228 {
; 0000 0229 
; 0000 022A while(PINC.4){    // *만 꾹 누르고 있는 상태
;PCODE: $00000555 VOL: 0
;PCODE: $00000556 VOL: 0
;PCODE: $00000557 VOL: 0
;PCODE: $00000558 VOL: 0
; 0000 022B delay_ms(10);
;PCODE: $00000559 VOL: 0
;PCODE: $0000055A VOL: 0
;PCODE: $0000055B VOL: 0
; 0000 022C star_count++;
;PCODE: $0000055C VOL: 0
;PCODE: $0000055D VOL: 0
;PCODE: $0000055E VOL: 0
; 0000 022D if(star_count > 300)
;PCODE: $0000055F VOL: 0
;PCODE: $00000560 VOL: 0
;PCODE: $00000561 VOL: 0
; 0000 022E {
; 0000 022F Buzzer_play(Sol);
;PCODE: $00000562 VOL: 0
;PCODE: $00000563 VOL: 0
; 0000 0230 delay_ms(500);
;PCODE: $00000564 VOL: 0
;PCODE: $00000565 VOL: 0
; 0000 0231 Buzzer_play(Fa);
;PCODE: $00000566 VOL: 0
;PCODE: $00000567 VOL: 0
; 0000 0232 delay_ms(500);
;PCODE: $00000568 VOL: 0
;PCODE: $00000569 VOL: 0
; 0000 0233 Buzzer_play(Mi);
;PCODE: $0000056A VOL: 0
;PCODE: $0000056B VOL: 0
; 0000 0234 delay_ms(500);
;PCODE: $0000056C VOL: 0
;PCODE: $0000056D VOL: 0
; 0000 0235 Buzzer_play(Re);
;PCODE: $0000056E VOL: 0
;PCODE: $0000056F VOL: 0
; 0000 0236 
; 0000 0237 OCR1A = 4710;  // 금고 잠금
;PCODE: $00000570 VOL: 0
;PCODE: $00000571 VOL: 0
; 0000 0238 
; 0000 0239 star_count =0;
;PCODE: $00000572 VOL: 0
;PCODE: $00000573 VOL: 0
; 0000 023A }
; 0000 023B }
;PCODE: $00000574 VOL: 0
;PCODE: $00000575 VOL: 0
;PCODE: $00000576 VOL: 0
; 0000 023C }
;PCODE: $00000577 VOL: 0
; 0000 023D 
; 0000 023E /*
; 0000 023F if(PINB.7 == 1)  //진동센서 감지시
; 0000 0240 {
; 0000 0241 LCD_Pos(0,0); // 문자열 위치 0행 1열 지정
; 0000 0242 LCD_Str("Warning....."); // 문자열 str을 LCD 첫번째 라인에 출력
; 0000 0243 delay_us(10);
; 0000 0244 LCD_Pos(1,0); // 문자열 위치 1행 1열 지정
; 0000 0245 LCD_Str(" stealing!!!    "); // 문자열 str을 LCD 두번째 라인에 출력
; 0000 0246 LCD_Pos(1,0);
; 0000 0247 delay_us(10);
; 0000 0248 master_count = 1;
; 0000 0249 
; 0000 024A 
; 0000 024B while(master_count) // 마스터모드에서 해제하지 않으면 무한 반복
; 0000 024C {
; 0000 024D 
; 0000 024E for(i=0;i<20;i++){    //사이렌 소리
; 0000 024F Buzzer_play(Sol/2);
; 0000 0250 delay_ms(10);
; 0000 0251 }
; 0000 0252 delay_ms(10);
; 0000 0253 for(i=0;i<20;i++){
; 0000 0254 Buzzer_play(Re/2);
; 0000 0255 delay_ms(10);
; 0000 0256 }
; 0000 0257 
; 0000 0258 
; 0000 0259 while(PINC.4 && PINC.6){ //사이렌모드에서 마스터모드로 접근
; 0000 025A delay_ms(10);
; 0000 025B 
; 0000 025C mastermode_count++;
; 0000 025D if(mastermode_count >  300)
; 0000 025E {
; 0000 025F LCD_Pos(0,0); // 문자열 위치 0행 1열 지정
; 0000 0260 LCD_Str("MASTER MODE    "); // 문자열 str을 LCD 첫번째 라인에 출력
; 0000 0261 delay_us(10);
; 0000 0262 LCD_Pos(1,0); // 문자열 위치 1행 1열 지정
; 0000 0263 LCD_Str(str_star); // 문자열 str을 LCD 두번째 라인에 출력
; 0000 0264 LCD_Pos(1,0);
; 0000 0265 delay_us(10);
; 0000 0266 
; 0000 0267 puts_USART("Enter Password  \n");
; 0000 0268 puts_USART("-->  \n");
; 0000 0269 
; 0000 026A buffer_count=0;
; 0000 026B mastermode_count =0;
; 0000 026C master_flag=1;
; 0000 026D 
; 0000 026E }
; 0000 026F }
; 0000 0270 for(i=0;i<10;i++)
; 0000 0271 {
; 0000 0272 if(str[i] == master_password[i]) //pc에서 받은 str과 학번을 비교
; 0000 0273 {
; 0000 0274 p_count ++;
; 0000 0275 }
; 0000 0276 else
; 0000 0277 {
; 0000 0278 p_count =0;
; 0000 0279 }
; 0000 027A 
; 0000 027B }
; 0000 027C 
; 0000 027D if(p_count == 10)  // 비밀번호 일치시
; 0000 027E {
; 0000 027F master_count =0; //사이렌 탈출
; 0000 0280 master_flag=0;   //마스터모드 해제
; 0000 0281 p_count =0;      //비밀번호 카운트 초기화
; 0000 0282 delay_ms(500);
; 0000 0283 LCD_Clear();
; 0000 0284 }
; 0000 0285 }
; 0000 0286 
; 0000 0287 }
; 0000 0288 */
; 0000 0289 
; 0000 028A 
; 0000 028B if(Rock_count >= 3) //에러 3번이상 발생시
;PCODE: $00000578 VOL: 0
;PCODE: $00000579 VOL: 0
;PCODE: $0000057A VOL: 0
; 0000 028C {
; 0000 028D LCD_Pos(0,0); // 문자열 위치 0행 1열 지정
;PCODE: $0000057B VOL: 0
;PCODE: $0000057C VOL: 0
;PCODE: $0000057D VOL: 0
;PCODE: $0000057E VOL: 0
; 0000 028E LCD_Str("Warning....."); // 문자열 str을 LCD 첫번째 라인에 출력
;PCODE: $0000057F VOL: 0
;PCODE: $00000580 VOL: 0
;PCODE: $00000581 VOL: 0
; 0000 028F delay_us(10);
;PCODE: $00000582 VOL: 0
; 0000 0290 LCD_Pos(1,0); // 문자열 위치 1행 1열 지정
;PCODE: $00000583 VOL: 0
;PCODE: $00000584 VOL: 0
;PCODE: $00000585 VOL: 0
;PCODE: $00000586 VOL: 0
; 0000 0291 LCD_Str(" if.theft         "); // 문자열 str을 LCD 두번째 라인에 출력
;PCODE: $00000587 VOL: 0
;PCODE: $00000588 VOL: 0
;PCODE: $00000589 VOL: 0
; 0000 0292 LCD_Pos(1,0);
;PCODE: $0000058A VOL: 0
;PCODE: $0000058B VOL: 0
;PCODE: $0000058C VOL: 0
;PCODE: $0000058D VOL: 0
; 0000 0293 delay_us(10);
;PCODE: $0000058E VOL: 0
; 0000 0294 master_count = 1;
;PCODE: $0000058F VOL: 0
;PCODE: $00000590 VOL: 0
; 0000 0295 
; 0000 0296 while(master_count)   //이하 내용은 진동센서와 동일
;PCODE: $00000591 VOL: 0
;PCODE: $00000592 VOL: 0
;PCODE: $00000593 VOL: 0
; 0000 0297 {                     // 단 Rock_count초기화 하는기능이 마지막에 추가
; 0000 0298 for(i=0;i<20;i++){
;PCODE: $00000594 VOL: 0
;PCODE: $00000595 VOL: 0
;PCODE: $00000596 VOL: 0
;PCODE: $00000597 VOL: 0
;PCODE: $00000598 VOL: 0
;PCODE: $00000599 VOL: 0
;PCODE: $0000059A VOL: 0
;PCODE: $0000059B VOL: 0
;PCODE: $0000059C VOL: 0
;PCODE: $0000059D VOL: 0
; 0000 0299 Buzzer_play(Sol/2);
;PCODE: $0000059E VOL: 0
;PCODE: $0000059F VOL: 0
; 0000 029A delay_ms(10);
;PCODE: $000005A0 VOL: 0
;PCODE: $000005A1 VOL: 0
;PCODE: $000005A2 VOL: 0
; 0000 029B }
;PCODE: $000005A3 VOL: 0
;PCODE: $000005A4 VOL: 0
;PCODE: $000005A5 VOL: 0
;PCODE: $000005A6 VOL: 0
;PCODE: $000005A7 VOL: 0
;PCODE: $000005A8 VOL: 0
; 0000 029C delay_ms(10);
;PCODE: $000005A9 VOL: 0
;PCODE: $000005AA VOL: 0
;PCODE: $000005AB VOL: 0
; 0000 029D for(i=0;i<20;i++){
;PCODE: $000005AC VOL: 0
;PCODE: $000005AD VOL: 0
;PCODE: $000005AE VOL: 0
;PCODE: $000005AF VOL: 0
;PCODE: $000005B0 VOL: 0
;PCODE: $000005B1 VOL: 0
;PCODE: $000005B2 VOL: 0
;PCODE: $000005B3 VOL: 0
;PCODE: $000005B4 VOL: 0
;PCODE: $000005B5 VOL: 0
; 0000 029E Buzzer_play(Re/2);
;PCODE: $000005B6 VOL: 0
;PCODE: $000005B7 VOL: 0
; 0000 029F delay_ms(10);
;PCODE: $000005B8 VOL: 0
;PCODE: $000005B9 VOL: 0
;PCODE: $000005BA VOL: 0
; 0000 02A0 }
;PCODE: $000005BB VOL: 0
;PCODE: $000005BC VOL: 0
;PCODE: $000005BD VOL: 0
;PCODE: $000005BE VOL: 0
;PCODE: $000005BF VOL: 0
;PCODE: $000005C0 VOL: 0
; 0000 02A1 
; 0000 02A2 while(PINC.4 && PINC.6){
;PCODE: $000005C1 VOL: 0
;PCODE: $000005C2 VOL: 0
;PCODE: $000005C3 VOL: 0
;PCODE: $000005C4 VOL: 0
;PCODE: $000005C5 VOL: 0
;PCODE: $000005C6 VOL: 0
;PCODE: $000005C7 VOL: 0
;PCODE: $000005C8 VOL: 0
;PCODE: $000005C9 VOL: 0
;PCODE: $000005CA VOL: 0
;PCODE: $000005CB VOL: 0
; 0000 02A3 delay_ms(10);
;PCODE: $000005CC VOL: 0
;PCODE: $000005CD VOL: 0
;PCODE: $000005CE VOL: 0
; 0000 02A4 
; 0000 02A5 
; 0000 02A6 mastermode_count++;
;PCODE: $000005CF VOL: 0
;PCODE: $000005D0 VOL: 0
;PCODE: $000005D1 VOL: 0
; 0000 02A7 
; 0000 02A8 if(mastermode_count >  300)
;PCODE: $000005D2 VOL: 0
;PCODE: $000005D3 VOL: 0
;PCODE: $000005D4 VOL: 0
; 0000 02A9 {
; 0000 02AA LCD_Pos(0,0); // 문자열 위치 0행 1열 지정
;PCODE: $000005D5 VOL: 0
;PCODE: $000005D6 VOL: 0
;PCODE: $000005D7 VOL: 0
;PCODE: $000005D8 VOL: 0
; 0000 02AB LCD_Str("MASTER MODE    "); // 문자열 str을 LCD 첫번째 라인에 출력
;PCODE: $000005D9 VOL: 0
;PCODE: $000005DA VOL: 0
;PCODE: $000005DB VOL: 0
; 0000 02AC delay_us(10);
;PCODE: $000005DC VOL: 0
; 0000 02AD LCD_Pos(1,0); // 문자열 위치 1행 1열 지정
;PCODE: $000005DD VOL: 0
;PCODE: $000005DE VOL: 0
;PCODE: $000005DF VOL: 0
;PCODE: $000005E0 VOL: 0
; 0000 02AE LCD_Str(str_star); // 문자열 str을 LCD 두번째 라인에 출력
;PCODE: $000005E1 VOL: 0
;PCODE: $000005E2 VOL: 0
; 0000 02AF LCD_Pos(1,0);
;PCODE: $000005E3 VOL: 0
;PCODE: $000005E4 VOL: 0
;PCODE: $000005E5 VOL: 0
;PCODE: $000005E6 VOL: 0
; 0000 02B0 delay_us(10);
;PCODE: $000005E7 VOL: 0
; 0000 02B1 
; 0000 02B2 puts_USART("Enter Password  \n");
;PCODE: $000005E8 VOL: 0
;PCODE: $000005E9 VOL: 0
;PCODE: $000005EA VOL: 0
; 0000 02B3 puts_USART("-->  \n");
;PCODE: $000005EB VOL: 0
;PCODE: $000005EC VOL: 0
;PCODE: $000005ED VOL: 0
; 0000 02B4 
; 0000 02B5 buffer_count=0;
;PCODE: $000005EE VOL: 0
; 0000 02B6 mastermode_count =0;
;PCODE: $000005EF VOL: 0
;PCODE: $000005F0 VOL: 0
; 0000 02B7 master_flag=1;
;PCODE: $000005F1 VOL: 0
;PCODE: $000005F2 VOL: 0
;PCODE: $000005F3 VOL: 0
; 0000 02B8 }
; 0000 02B9 }
;PCODE: $000005F4 VOL: 0
;PCODE: $000005F5 VOL: 0
;PCODE: $000005F6 VOL: 0
; 0000 02BA for(i=0;i<10;i++)
;PCODE: $000005F7 VOL: 0
;PCODE: $000005F8 VOL: 0
;PCODE: $000005F9 VOL: 0
;PCODE: $000005FA VOL: 0
;PCODE: $000005FB VOL: 0
;PCODE: $000005FC VOL: 0
;PCODE: $000005FD VOL: 0
;PCODE: $000005FE VOL: 0
;PCODE: $000005FF VOL: 0
;PCODE: $00000600 VOL: 0
; 0000 02BB {
; 0000 02BC if(str[i] == master_password[i])
;PCODE: $00000601 VOL: 0
;PCODE: $00000602 VOL: 0
;PCODE: $00000603 VOL: 0
;PCODE: $00000604 VOL: 0
;PCODE: $00000605 VOL: 0
;PCODE: $00000606 VOL: 0
;PCODE: $00000607 VOL: 0
;PCODE: $00000608 VOL: 0
; 0000 02BD {
; 0000 02BE p_count ++;
;PCODE: $00000609 VOL: 0
;PCODE: $0000060A VOL: 0
; 0000 02BF }
; 0000 02C0 else
;PCODE: $0000060B VOL: 0
;PCODE: $0000060C VOL: 0
; 0000 02C1 {
; 0000 02C2 p_count =0;
;PCODE: $0000060D VOL: 0
;PCODE: $0000060E VOL: 0
; 0000 02C3 }
;PCODE: $0000060F VOL: 0
; 0000 02C4 }
;PCODE: $00000610 VOL: 0
;PCODE: $00000611 VOL: 0
;PCODE: $00000612 VOL: 0
;PCODE: $00000613 VOL: 0
;PCODE: $00000614 VOL: 0
;PCODE: $00000615 VOL: 0
; 0000 02C5 
; 0000 02C6 if(p_count == 10)
;PCODE: $00000616 VOL: 0
;PCODE: $00000617 VOL: 0
;PCODE: $00000618 VOL: 0
; 0000 02C7 {
; 0000 02C8 master_count =0;
;PCODE: $00000619 VOL: 0
;PCODE: $0000061A VOL: 0
; 0000 02C9 Rock_count =0;
;PCODE: $0000061B VOL: 0
;PCODE: $0000061C VOL: 0
; 0000 02CA master_flag=0;
;PCODE: $0000061D VOL: 0
;PCODE: $0000061E VOL: 0
;PCODE: $0000061F VOL: 0
; 0000 02CB p_count =0;
;PCODE: $00000620 VOL: 0
;PCODE: $00000621 VOL: 0
; 0000 02CC 
; 0000 02CD delay_ms(500);
;PCODE: $00000622 VOL: 0
;PCODE: $00000623 VOL: 0
; 0000 02CE LCD_Clear();
;PCODE: $00000624 VOL: 0
; 0000 02CF }
; 0000 02D0 }
;PCODE: $00000625 VOL: 0
;PCODE: $00000626 VOL: 0
;PCODE: $00000627 VOL: 0
; 0000 02D1 
; 0000 02D2 
; 0000 02D3 }
; 0000 02D4 
; 0000 02D5 OUTFND(fnd);  //fnd출력
;PCODE: $00000628 VOL: 0
;PCODE: $00000629 VOL: 0
;PCODE: $0000062A VOL: 0
; 0000 02D6 
; 0000 02D7 
; 0000 02D8 switch(key_num)     //각 키패드마다 나오는 음 설정
;PCODE: $0000062B VOL: 0
; 0000 02D9 {
; 0000 02DA case 1:
;PCODE: $0000062C VOL: 0
;PCODE: $0000062D VOL: 0
;PCODE: $0000062E VOL: 0
; 0000 02DB Buzzer_play(Do);
;PCODE: $0000062F VOL: 0
;PCODE: $00000630 VOL: 0
; 0000 02DC break;
;PCODE: $00000631 VOL: 0
; 0000 02DD case 2:
;PCODE: $00000632 VOL: 0
;PCODE: $00000633 VOL: 0
;PCODE: $00000634 VOL: 0
;PCODE: $00000635 VOL: 0
; 0000 02DE Buzzer_play(Re);
;PCODE: $00000636 VOL: 0
;PCODE: $00000637 VOL: 0
; 0000 02DF break;
;PCODE: $00000638 VOL: 0
; 0000 02E0 case 3:
;PCODE: $00000639 VOL: 0
;PCODE: $0000063A VOL: 0
;PCODE: $0000063B VOL: 0
;PCODE: $0000063C VOL: 0
; 0000 02E1 Buzzer_play(Mi);
;PCODE: $0000063D VOL: 0
;PCODE: $0000063E VOL: 0
; 0000 02E2 break;
;PCODE: $0000063F VOL: 0
; 0000 02E3 case 4:
;PCODE: $00000640 VOL: 0
;PCODE: $00000641 VOL: 0
;PCODE: $00000642 VOL: 0
;PCODE: $00000643 VOL: 0
; 0000 02E4 Buzzer_play(Fa);
;PCODE: $00000644 VOL: 0
;PCODE: $00000645 VOL: 0
; 0000 02E5 break;
;PCODE: $00000646 VOL: 0
; 0000 02E6 case 5:
;PCODE: $00000647 VOL: 0
;PCODE: $00000648 VOL: 0
;PCODE: $00000649 VOL: 0
;PCODE: $0000064A VOL: 0
; 0000 02E7 Buzzer_play(Sol);
;PCODE: $0000064B VOL: 0
;PCODE: $0000064C VOL: 0
; 0000 02E8 break;
;PCODE: $0000064D VOL: 0
; 0000 02E9 case 6:
;PCODE: $0000064E VOL: 0
;PCODE: $0000064F VOL: 0
;PCODE: $00000650 VOL: 0
;PCODE: $00000651 VOL: 0
; 0000 02EA Buzzer_play(La);
;PCODE: $00000652 VOL: 0
;PCODE: $00000653 VOL: 0
; 0000 02EB break;
;PCODE: $00000654 VOL: 0
; 0000 02EC case 7:
;PCODE: $00000655 VOL: 0
;PCODE: $00000656 VOL: 0
;PCODE: $00000657 VOL: 0
;PCODE: $00000658 VOL: 0
; 0000 02ED Buzzer_play(Si);
;PCODE: $00000659 VOL: 0
;PCODE: $0000065A VOL: 0
; 0000 02EE break;
;PCODE: $0000065B VOL: 0
; 0000 02EF case 8:
;PCODE: $0000065C VOL: 0
;PCODE: $0000065D VOL: 0
;PCODE: $0000065E VOL: 0
;PCODE: $0000065F VOL: 0
; 0000 02F0 Buzzer_play(Do/2);
;PCODE: $00000660 VOL: 0
;PCODE: $00000661 VOL: 0
; 0000 02F1 break;
;PCODE: $00000662 VOL: 0
; 0000 02F2 case 9:
;PCODE: $00000663 VOL: 0
;PCODE: $00000664 VOL: 0
;PCODE: $00000665 VOL: 0
;PCODE: $00000666 VOL: 0
; 0000 02F3 Buzzer_play(Re/2);
;PCODE: $00000667 VOL: 0
;PCODE: $00000668 VOL: 0
; 0000 02F4 break;
;PCODE: $00000669 VOL: 0
; 0000 02F5 
; 0000 02F6 default:
;PCODE: $0000066A VOL: 0
; 0000 02F7 break;
;PCODE: $0000066B VOL: 0
; 0000 02F8 }
;PCODE: $0000066C VOL: 0
; 0000 02F9 }
;PCODE: $0000066D VOL: 0
;PCODE: $0000066E VOL: 0
; 0000 02FA }
;PCODE: $0000066F VOL: 0
;PCODE: $00000670 VOL: 0
;PCODE: $00000671 VOL: 0
;PCODE: $00000672 VOL: 0

	.DSEG
_0x66:
	.BYTE 0x87
