
AVRASM ver. 2.1.30  C:\Users\정민규\Desktop\마이크로프로세서2\TWI\twi_send_mesage\Debug\List\twi_send_message.asm Fri Oct 15 00:33:11 2021

C:\Users\정민규\Desktop\마이크로프로세서2\TWI\twi_send_mesage\Debug\List\twi_send_message.asm(1416): warning: Register r5 already defined by the .DEF directive
C:\Users\정민규\Desktop\마이크로프로세서2\TWI\twi_send_mesage\Debug\List\twi_send_message.asm(1417): warning: Register r6 already defined by the .DEF directive
C:\Users\정민규\Desktop\마이크로프로세서2\TWI\twi_send_mesage\Debug\List\twi_send_message.asm(1418): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.45 
                 ;(C) Copyright 1998-2021 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128
                 ;Program type           : Application
                 ;Clock frequency        : 14.745600 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _SLAVE_ADDR=R5
                 	.DEF _mes=R6
                 	.DEF _mes_msb=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0073 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000046 1502
C:\Users\정민규\Desktop\마이크로프로세서2\TWI\twi_send_mesage\Debug\List\twi_send_message.asm(1465): warning: .cseg .db misalignment - padding zero byte
000047 0005      	.DB  0x2,LOW(_0x29),HIGH(_0x29)
                 
                 _0x0:
000048 2020
000049 2020
00004a 2020
00004b 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00004c 2020
00004d 2020
00004e 2020
00004f 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000050 2020
000051 2020
000052 6d00
000053 6e69      	.DB  0x20,0x20,0x20,0x20,0x0,0x6D,0x69,0x6E
000054 7967
000055 0075
000056 3249
000057 2043      	.DB  0x67,0x79,0x75,0x0,0x49,0x32,0x43,0x20
000058 614d
000059 7473
00005a 7265
00005b 4920      	.DB  0x4D,0x61,0x73,0x74,0x65,0x72,0x20,0x49
00005c 696e
00005d 0074
00005e 6553
00005f 646e      	.DB  0x6E,0x69,0x74,0x0,0x53,0x65,0x6E,0x64
000060 2d20
000061 203e
C:\Users\정민규\Desktop\마이크로프로세서2\TWI\twi_send_mesage\Debug\List\twi_send_message.asm(1474): warning: .cseg .db misalignment - padding zero byte
000062 0000      	.DB  0x20,0x2D,0x3E,0x20,0x0
                 
                 __GLOBAL_INI_TBL:
000063 0003      	.DW  0x03
000064 0005      	.DW  0x05
000065 008c      	.DW  __REG_VARS*2
                 
000066 0015      	.DW  0x15
000067 0500      	.DW  _0x21
000068 0090      	.DW  _0x0*2
                 
000069 0007      	.DW  0x07
00006a 0515      	.DW  _0x29
00006b 00a5      	.DW  _0x0*2+21
                 
00006c 0010      	.DW  0x10
00006d 051c      	.DW  _0x2A
00006e 00ac      	.DW  _0x0*2+28
                 
00006f 0009      	.DW  0x09
000070 052c      	.DW  _0x2A+16
000071 00bc      	.DW  _0x0*2+44
                 
                 _0xFFFFFFFF:
000072 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000073 94f8      	CLI
000074 27ee      	CLR  R30
000075 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000076 e0f1      	LDI  R31,1
000077 bff5      	OUT  MCUCR,R31
000078 bfe5      	OUT  MCUCR,R30
000079 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
00007b e08d      	LDI  R24,(14-2)+1
00007c e0a2      	LDI  R26,2
00007d 27bb      	CLR  R27
                 __CLEAR_REG:
00007e 93ed      	ST   X+,R30
00007f 958a      	DEC  R24
000080 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000081 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000082 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000083 e0a0      	LDI  R26,LOW(__SRAM_START)
000084 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000085 93ed      	ST   X+,R30
000086 9701      	SBIW R24,1
000087 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000088 ece6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000089 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00008a 9185      	LPM  R24,Z+
00008b 9195      	LPM  R25,Z+
00008c 9700      	SBIW R24,0
00008d f061      	BREQ __GLOBAL_INI_END
00008e 91a5      	LPM  R26,Z+
00008f 91b5      	LPM  R27,Z+
000090 9005      	LPM  R0,Z+
000091 9015      	LPM  R1,Z+
000092 01bf      	MOVW R22,R30
000093 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000094 9005      	LPM  R0,Z+
000095 920d      	ST   X+,R0
000096 9701      	SBIW R24,1
000097 f7e1      	BRNE __GLOBAL_INI_LOOP
000098 01fb      	MOVW R30,R22
000099 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
00009a bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00009b efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00009c bfed      	OUT  SPL,R30
00009d e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00009e bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00009f e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000a0 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000a1 940c 0144 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 
                 	.CSEG
                 _Init_TWI:
                 ; .FSTART _Init_TWI
0000a3 e3e2      	LDI  R30,LOW(50)
0000a4 93e0 0070 	STS  112,R30
0000a6 e0e4      	LDI  R30,LOW(4)
0000a7 93e0 0074 	STS  116,R30
0000a9 e0e0      	LDI  R30,LOW(0)
0000aa 93e0 0071 	STS  113,R30
0000ac 9508      	RET
                 ; .FEND
                 _TWI_TransCheck_ACK:
                 ; .FSTART _TWI_TransCheck_ACK
0000ad d122      	RCALL __SAVELOCR4
0000ae 2f3a      	MOV  R19,R26
                 ;	Stat -> R19
                 ;	ExtDev_ErrCnt -> R16,R17
                +
0000af e000     +LDI R16 , LOW ( 0 )
0000b0 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x3:
0000b1 91e0 0074 	LDS  R30,116
0000b3 78e0      	ANDI R30,LOW(0x80)
0000b4 f451      	BRNE _0x5
0000b5 01d8      	MOVW R26,R16
                +
0000b6 5f0f     +SUBI R16 , LOW ( - 1 )
0000b7 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0000b8 3da1      	CPI  R26,LOW(0x7D1)
0000b9 e0e7      	LDI  R30,HIGH(0x7D1)
0000ba 07be      	CPC  R27,R30
0000bb f010      	BRLO _0x6
0000bc e0e1      	LDI  R30,LOW(1)
0000bd c009      	RJMP _0x2000004
                 _0x6:
0000be cff2      	RJMP _0x3
                 _0x5:
0000bf 91e0 0071 	LDS  R30,113
0000c1 7fe8      	ANDI R30,LOW(0xF8)
0000c2 173e      	CP   R19,R30
0000c3 f011      	BREQ _0x7
0000c4 e0e2      	LDI  R30,LOW(2)
0000c5 c001      	RJMP _0x2000004
                 _0x7:
0000c6 e0e0      	LDI  R30,LOW(0)
                 _0x2000004:
0000c7 d10d      	RCALL __LOADLOCR4
0000c8 9624      	ADIW R28,4
0000c9 9508      	RET
                 ; .FEND
                 _TWI_Start:
                 ; .FSTART _TWI_Start
0000ca eae4      	LDI  R30,LOW(164)
0000cb 93e0 0074 	STS  116,R30
0000cd e0a8      	LDI  R26,LOW(8)
0000ce dfde      	RCALL _TWI_TransCheck_ACK
0000cf 9508      	RET
                 ; .FEND
                 _TWI_Write_SLAW:
                 ; .FSTART _TWI_Write_SLAW
0000d0 d0d2      	RCALL SUBOPT_0x0
                 ;	Addr -> R17
0000d1 e1a8      	LDI  R26,LOW(24)
0000d2 dfda      	RCALL _TWI_TransCheck_ACK
0000d3 c04c      	RJMP _0x2000002
                 ; .FEND
                 _TWI_Write_Data:
                 ; .FSTART _TWI_Write_Data
0000d4 d0ce      	RCALL SUBOPT_0x0
                 ;	Data -> R17
0000d5 e2a8      	LDI  R26,LOW(40)
0000d6 dfd6      	RCALL _TWI_TransCheck_ACK
0000d7 c048      	RJMP _0x2000002
                 ; .FEND
                 _TWI_Stop:
                 ; .FSTART _TWI_Stop
0000d8 e9e4      	LDI  R30,LOW(148)
0000d9 93e0 0074 	STS  116,R30
0000db 9508      	RET
                 ; .FEND
                 _TWI_Master_Transmit:
                 ; .FSTART _TWI_Master_Transmit
0000dc d0f3      	RCALL __SAVELOCR4
0000dd 2f0a      	MOV  R16,R26
0000de 813c      	LDD  R19,Y+4
                 ;	Data -> R19
                 ;	Addr -> R16
                 ;	ret_err -> R17
0000df e010      	LDI  R17,0
0000e0 dfe9      	RCALL _TWI_Start
0000e1 2f1e      	MOV  R17,R30
0000e2 3010      	CPI  R17,0
0000e3 f459      	BRNE _0x2000003
0000e4 2fa0      	MOV  R26,R16
0000e5 dfea      	RCALL _TWI_Write_SLAW
0000e6 2f1e      	MOV  R17,R30
0000e7 3010      	CPI  R17,0
0000e8 f431      	BRNE _0x2000003
0000e9 2fa3      	MOV  R26,R19
0000ea dfe9      	RCALL _TWI_Write_Data
0000eb 2f1e      	MOV  R17,R30
0000ec 3010      	CPI  R17,0
0000ed f409      	BRNE _0x2000003
0000ee dfe9      	RCALL _TWI_Stop
                 _0x2000003:
0000ef 2fe1      	MOV  R30,R17
0000f0 d0e4      	RCALL __LOADLOCR4
0000f1 9625      	ADIW R28,5
0000f2 9508      	RET
                 ; .FEND
                 ;	Addr -> R17
                 ;	*Data -> R18,R19
                 ;	ret_err -> R17
                 ;	*Data -> R18,R19
                 ;	ret_err -> R17
                 ;	Addr -> R21
                 ;	*Data -> R18,R19
                 ;	rec_data -> R17
                 ;	ret_err -> R16
                 ;	Slave_Addr -> R17
                 ;	*Data -> R18,R19
                 ;	ret_err -> R17
                 ;	*Data -> R18,R19
                 ;	ret_err -> R17
                 ;	rec_data -> R16
                 ;	devAddr -> R20
                 ;	regAddr -> R21
                 ;	*Data -> R18,R19
                 ;	rec_data -> R17
                 ;	ret_err -> R16
                 _LCD_PORT_Init:
                 ; .FSTART _LCD_PORT_Init
0000f3 efef      	LDI  R30,LOW(255)
0000f4 bbea      	OUT  0x1A,R30
0000f5 e1ef      	LDI  R30,LOW(31)
0000f6 93e0 0064 	STS  100,R30
0000f8 9508      	RET
                 ; .FEND
                 _LCD_Data:
                 ; .FSTART _LCD_Data
0000f9 d0b1      	RCALL SUBOPT_0x1
                 ;	ch -> R17
0000fa 60e4      	ORI  R30,4
0000fb d0b4      	RCALL SUBOPT_0x2
0000fc 7fed      	ANDI R30,0xFD
0000fd d0b2      	RCALL SUBOPT_0x2
0000fe d0b6      	RCALL SUBOPT_0x3
0000ff c020      	RJMP _0x2000002
                 ; .FEND
                 _LCD_Comm:
                 ; .FSTART _LCD_Comm
000100 d0aa      	RCALL SUBOPT_0x1
                 ;	ch -> R17
000101 7feb      	ANDI R30,0xFB
000102 d0ad      	RCALL SUBOPT_0x2
000103 7fed      	ANDI R30,0xFD
000104 d0ab      	RCALL SUBOPT_0x2
000105 d0af      	RCALL SUBOPT_0x3
000106 c019      	RJMP _0x2000002
                 ; .FEND
                 _LCD_delay:
                 ; .FSTART _LCD_delay
000107 931a      	ST   -Y,R17
000108 2f1a      	MOV  R17,R26
                 ;	ms -> R17
000109 27bb      	CLR  R27
00010a c014      	RJMP _0x2000001
                 ; .FEND
                 _LCD_Pos:
                 ; .FSTART _LCD_Pos
00010b 931a      	ST   -Y,R17
00010c 930a      	ST   -Y,R16
00010d 2f1a      	MOV  R17,R26
00010e 810a      	LDD  R16,Y+2
                 ;	col -> R16
                 ;	row -> R17
00010f e4a0      	LDI  R26,LOW(64)
000110 020a      	MULS R16,R26
000111 01f0      	MOVW R30,R0
000112 0fe1      	ADD  R30,R17
000113 68e0      	ORI  R30,0x80
000114 2fae      	MOV  R26,R30
000115 dfea      	RCALL _LCD_Comm
000116 8119      	LDD  R17,Y+1
000117 8108      	LDD  R16,Y+0
000118 9623      	ADIW R28,3
000119 9508      	RET
                 ; .FEND
                 _LCD_Char:
                 ; .FSTART _LCD_Char
00011a 931a      	ST   -Y,R17
00011b 2f1a      	MOV  R17,R26
                 ;	c -> R17
00011c dfdc      	RCALL _LCD_Data
00011d e0a1      	LDI  R26,LOW(1)
00011e e0b0      	LDI  R27,0
                 _0x2000001:
00011f d0ba      	RCALL _delay_ms
                 _0x2000002:
000120 9119      	LD   R17,Y+
000121 9508      	RET
                 ; .FEND
                 _LCD_Str:
                 ; .FSTART _LCD_Str
000122 931a      	ST   -Y,R17
000123 930a      	ST   -Y,R16
000124 018d      	MOVW R16,R26
                 ;	*str -> R16,R17
                 _0x1A:
000125 01d8      	MOVW R26,R16
000126 91ec      	LD   R30,X
000127 30e0      	CPI  R30,0
000128 f029      	BREQ _0x1C
000129 91ac      	LD   R26,X
00012a dfef      	RCALL _LCD_Char
                +
00012b 5f0f     +SUBI R16 , LOW ( - 1 )
00012c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00012d cff7      	RJMP _0x1A
                 _0x1C:
00012e 9109      	LD   R16,Y+
00012f 9119      	LD   R17,Y+
000130 9508      	RET
                 ; .FEND
                 ;	*str -> R18,R19
                 ;	loop_count -> R17
                 
                 	.DSEG
                 _0x21:
000500           	.BYTE 0x15
                 
                 	.CSEG
                 _LCD_Clear:
                 ; .FSTART _LCD_Clear
000131 e0a1      	LDI  R26,LOW(1)
000132 dfcd      	RCALL _LCD_Comm
000133 e0a2      	LDI  R26,LOW(2)
000134 dfd2      	RCALL _LCD_delay
000135 9508      	RET
                 ; .FEND
                 _LCD_Init:
                 ; .FSTART _LCD_Init
000136 dfbc      	RCALL _LCD_PORT_Init
000137 d08d      	RCALL SUBOPT_0x4
000138 d08c      	RCALL SUBOPT_0x4
000139 d08b      	RCALL SUBOPT_0x4
00013a e0ae      	LDI  R26,LOW(14)
00013b dfc4      	RCALL _LCD_Comm
00013c e0a4      	LDI  R26,LOW(4)
00013d dfc9      	RCALL _LCD_delay
00013e e0a6      	LDI  R26,LOW(6)
00013f dfc0      	RCALL _LCD_Comm
000140 e0a4      	LDI  R26,LOW(4)
000141 dfc5      	RCALL _LCD_delay
000142 dfee      	RCALL _LCD_Clear
000143 9508      	RET
                 ; .FEND
                 ;	p -> R17
                 ;	p -> R17
                 
                 	.DSEG
                 _0x29:
000515           	.BYTE 0x7
                 ;void main(void)
                 ; 0000 0015 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0016 
                 ; 0000 0017 unsigned char idx = 0;
                 ; 0000 0018 unsigned char key =0;
                 ; 0000 0019 int i=0;
                 ; 0000 001A 
                 ; 0000 001B LCD_Init();
                 ;	idx -> R17
                 ;	key -> R16
                 ;	i -> R18,R19
000144 e010      	LDI  R17,0
000145 e000      	LDI  R16,0
                +
000146 e020     +LDI R18 , LOW ( 0 )
000147 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
000148 dfed      	RCALL _LCD_Init
                 ; 0000 001C LCD_Str("I2C Master Init");
                +
000149 e1ac     +LDI R26 , LOW ( _0x2A + ( 0 ) )
00014a e0b5     +LDI R27 , HIGH ( _0x2A + ( 0 ) )
                 	__POINTW2MN _0x2A,0
00014b dfd6      	RCALL _LCD_Str
                 ; 0000 001D LCD_Pos(1,0);
00014c e0e1      	LDI  R30,LOW(1)
00014d 93ea      	ST   -Y,R30
00014e e0a0      	LDI  R26,LOW(0)
00014f dfbb      	RCALL _LCD_Pos
                 ; 0000 001E LCD_Str("Send -> ");
                +
000150 e2ac     +LDI R26 , LOW ( _0x2A + ( 16 ) )
000151 e0b5     +LDI R27 , HIGH ( _0x2A + ( 16 ) )
                 	__POINTW2MN _0x2A,16
000152 dfcf      	RCALL _LCD_Str
                 ; 0000 001F 
                 ; 0000 0020 DDRB = 0x00;
000153 e0e0      	LDI  R30,LOW(0)
000154 bbe7      	OUT  0x17,R30
                 ; 0000 0021 Init_TWI();
000155 df4d      	RCALL _Init_TWI
                 ; 0000 0022 while (1)
                 _0x2B:
                 ; 0000 0023 {
                 ; 0000 0024 
                 ; 0000 0025 
                 ; 0000 0026 
                 ; 0000 0027 
                 ; 0000 0028 key = (PINB&0xff);
000156 b3e6      	IN   R30,0x16
000157 2f0e      	MOV  R16,R30
                 ; 0000 0029 switch(key)
000158 e0f0      	LDI  R31,0
                 ; 0000 002A {
                 ; 0000 002B case 0xF7://스위치3
000159 3fe7      	CPI  R30,LOW(0xF7)
00015a e0a0      	LDI  R26,HIGH(0xF7)
00015b 07fa      	CPC  R31,R26
00015c f409      	BRNE _0x31
                 ; 0000 002C 
                 ; 0000 002D 
                 ; 0000 002E 
                 ; 0000 002F 
                 ; 0000 0030 break;
00015d c043      	RJMP _0x30
                 ; 0000 0031 case 0xFB: //스위치2
                 _0x31:
00015e 3feb      	CPI  R30,LOW(0xFB)
00015f e0a0      	LDI  R26,HIGH(0xFB)
000160 07fa      	CPC  R31,R26
000161 f4d1      	BRNE _0x32
                 ; 0000 0032 delay_ms(500);
000162 d066      	RCALL SUBOPT_0x5
                 ; 0000 0033 LCD_Pos(1,9);
                 ; 0000 0034 
                 ; 0000 0035 
                 ; 0000 0036 for(i=0;i<6;i++)
                +
000163 e020     +LDI R18 , LOW ( 0 )
000164 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x34:
                +
000165 3026     +CPI R18 , LOW ( 6 )
000166 e0e0     +LDI R30 , HIGH ( 6 )
000167 073e     +CPC R19 , R30
                 	__CPWRN 18,19,6
000168 f494      	BRGE _0x35
                 ; 0000 0037 {
                 ; 0000 0038 delay_ms(500);
000169 efa4      	LDI  R26,LOW(500)
00016a e0b1      	LDI  R27,HIGH(500)
00016b d06e      	RCALL _delay_ms
                 ; 0000 0039 LCD_Char(mes[i]);
00016c 01f9      	MOVW R30,R18
00016d 0de6      	ADD  R30,R6
00016e 1df7      	ADC  R31,R7
00016f 81a0      	LD   R26,Z
000170 dfa9      	RCALL _LCD_Char
                 ; 0000 003A if( TWI_Master_Transmit(mes[i],SLAVE_ADDR) == 0)
000171 01f9      	MOVW R30,R18
000172 0de6      	ADD  R30,R6
000173 1df7      	ADC  R31,R7
000174 81e0      	LD   R30,Z
000175 93ea      	ST   -Y,R30
000176 2da5      	MOV  R26,R5
000177 df64      	RCALL _TWI_Master_Transmit
                 ; 0000 003B {
                 ; 0000 003C 
                 ; 0000 003D }
                 ; 0000 003E 
                 ; 0000 003F }
                +
000178 5f2f     +SUBI R18 , LOW ( - 1 )
000179 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00017a cfea      	RJMP _0x34
                 _0x35:
                 ; 0000 0040 
                 ; 0000 0041 
                 ; 0000 0042 
                 ; 0000 0043 
                 ; 0000 0044 break;
00017b c025      	RJMP _0x30
                 ; 0000 0045 case 0xFD: //스위치1
                 _0x32:
00017c 3fed      	CPI  R30,LOW(0xFD)
00017d e0a0      	LDI  R26,HIGH(0xFD)
00017e 07fa      	CPC  R31,R26
00017f f4b1      	BRNE _0x37
                 ; 0000 0046 delay_ms(500);
000180 d048      	RCALL SUBOPT_0x5
                 ; 0000 0047 LCD_Pos(1,9);
                 ; 0000 0048 LCD_Char('A'+idx);
000181 2fa1      	MOV  R26,R17
000182 5baf      	SUBI R26,-LOW(65)
000183 df96      	RCALL _LCD_Char
                 ; 0000 0049 
                 ; 0000 004A if( TWI_Master_Transmit('A' +(idx++),SLAVE_ADDR) == 0)
000184 2fe1      	MOV  R30,R17
000185 5f1f      	SUBI R17,-1
000186 5bef      	SUBI R30,-LOW(65)
000187 93ea      	ST   -Y,R30
000188 2da5      	MOV  R26,R5
000189 df52      	RCALL _TWI_Master_Transmit
00018a 30e0      	CPI  R30,0
00018b f449      	BRNE _0x38
                 ; 0000 004B {
                 ; 0000 004C if(('A'+idx)>'Z') idx = 0;
00018c 2fe1      	MOV  R30,R17
00018d e0f0      	LDI  R31,0
00018e 5bef      	SUBI R30,LOW(-65)
00018f 4fff      	SBCI R31,HIGH(-65)
000190 35eb      	CPI  R30,LOW(0x5B)
000191 e0a0      	LDI  R26,HIGH(0x5B)
000192 07fa      	CPC  R31,R26
000193 f00c      	BRLT _0x39
000194 e010      	LDI  R17,LOW(0)
                 ; 0000 004D 
                 ; 0000 004E }
                 _0x39:
                 ; 0000 004F 
                 ; 0000 0050 
                 ; 0000 0051 
                 ; 0000 0052 
                 ; 0000 0053 break;
                 _0x38:
000195 c00b      	RJMP _0x30
                 ; 0000 0054 case 0xFE: //스위치0
                 _0x37:
000196 3fee      	CPI  R30,LOW(0xFE)
000197 e0a0      	LDI  R26,HIGH(0xFE)
000198 07fa      	CPC  R31,R26
000199 f439      	BRNE _0x3C
                 ; 0000 0055 delay_ms(500);
00019a d02e      	RCALL SUBOPT_0x5
                 ; 0000 0056 LCD_Pos(1,9);
                 ; 0000 0057 LCD_Char('A');
00019b e4a1      	LDI  R26,LOW(65)
00019c df7d      	RCALL _LCD_Char
                 ; 0000 0058 
                 ; 0000 0059 if( TWI_Master_Transmit('A' ,SLAVE_ADDR) == 0)
00019d e4e1      	LDI  R30,LOW(65)
00019e 93ea      	ST   -Y,R30
00019f 2da5      	MOV  R26,R5
0001a0 df3b      	RCALL _TWI_Master_Transmit
                 ; 0000 005A 
                 ; 0000 005B 
                 ; 0000 005C 
                 ; 0000 005D 
                 ; 0000 005E 
                 ; 0000 005F 
                 ; 0000 0060 break;
                 ; 0000 0061 default:
                 _0x3C:
                 ; 0000 0062 break;
                 ; 0000 0063 }
                 _0x30:
                 ; 0000 0064 
                 ; 0000 0065 
                 ; 0000 0066 
                 ; 0000 0067 
                 ; 0000 0068 
                 ; 0000 0069 // Please write your application code here
                 ; 0000 006A 
                 ; 0000 006B }
0001a1 cfb4      	RJMP _0x2B
                 ; 0000 006C }
                 _0x3D:
0001a2 cfff      	RJMP _0x3D
                 ; .FEND
                 
                 	.DSEG
                 _0x2A:
00051c           	.BYTE 0x19
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x0:
0001a3 931a      	ST   -Y,R17
0001a4 2f1a      	MOV  R17,R26
0001a5 9310 0073 	STS  115,R17
0001a7 e8e4      	LDI  R30,LOW(132)
0001a8 93e0 0074 	STS  116,R30
0001aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
0001ab 931a      	ST   -Y,R17
0001ac 2f1a      	MOV  R17,R26
0001ad 91e0 0065 	LDS  R30,101
0001af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2:
0001b0 93e0 0065 	STS  101,R30
0001b2 91e0 0065 	LDS  R30,101
0001b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x3:
0001b5 60e1      	ORI  R30,1
0001b6 93e0 0065 	STS  101,R30
                +
0001b8 ef86     +LDI R24 , LOW ( 246 )
                +__DELAY_USB_LOOP :
0001b9 958a     +DEC R24
0001ba f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 246
0001bb bb1b      	OUT  0x1B,R17
                +
0001bc ef86     +LDI R24 , LOW ( 246 )
                +__DELAY_USB_LOOP :
0001bd 958a     +DEC R24
0001be f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 246
0001bf 91e0 0065 	LDS  R30,101
0001c1 7fee      	ANDI R30,0xFE
0001c2 93e0 0065 	STS  101,R30
0001c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4:
0001c5 e3a8      	LDI  R26,LOW(56)
0001c6 df39      	RCALL _LCD_Comm
0001c7 e0a4      	LDI  R26,LOW(4)
0001c8 cf3e      	RJMP _LCD_delay
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x5:
0001c9 efa4      	LDI  R26,LOW(500)
0001ca e0b1      	LDI  R27,HIGH(500)
0001cb d00e      	RCALL _delay_ms
0001cc e0e1      	LDI  R30,LOW(1)
0001cd 93ea      	ST   -Y,R30
0001ce e0a9      	LDI  R26,LOW(9)
0001cf cf3b      	RJMP _LCD_Pos
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR4:
0001d0 933a      	ST   -Y,R19
                 __SAVELOCR3:
0001d1 932a      	ST   -Y,R18
                 __SAVELOCR2:
0001d2 931a      	ST   -Y,R17
0001d3 930a      	ST   -Y,R16
0001d4 9508      	RET
                 
                 __LOADLOCR4:
0001d5 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0001d6 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0001d7 8119      	LDD  R17,Y+1
0001d8 8108      	LD   R16,Y
0001d9 9508      	RET
                 
                 _delay_ms:
0001da 9610      	adiw r26,0
0001db f039      	breq __delay_ms1
                 __delay_ms0:
0001dc 95a8      	wdr
                +
0001dd e686     +LDI R24 , LOW ( 0xE66 )
0001de e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
0001df 9701     +SBIW R24 , 1
0001e0 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
0001e1 9711      	sbiw r26,1
0001e2 f7c9      	brne __delay_ms0
                 __delay_ms1:
0001e3 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :   5 r1 :   1 r2 :   0 r3 :   0 r4 :   0 r5 :   3 r6 :   2 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:  18 r17:  36 r18:   8 r19:  10 r20:   0 r21:   0 r22:   2 r23:   0 
r24:  14 r25:   3 r26:  57 r27:  10 r28:   4 r29:   1 r30:  91 r31:  13 
x  :   5 y  :  28 z  :   9 
Registers used: 21 out of 35 (60.0%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   2 add   :   3 
adiw  :   4 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   4 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   1 
brlt  :   1 brmi  :   0 brne  :  16 brpl  :   0 brsh  :   0 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   3 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   1 cpc   :   7 cpi   :  12 cpse  :   0 dec   :   3 des   :   0 
elpm  :   0 eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 
ijmp  :   0 in    :   1 inc   :   0 jmp   :  36 ld    :   8 ldd   :   7 
ldi   :  76 lds   :   5 lpm   :   7 lsl   :   0 lsr   :   0 mov   :  21 
movw  :   9 mul   :   0 muls  :   1 mulsu :   0 neg   :   0 nop   :   0 
or    :   0 ori   :   3 out   :   9 pop   :   0 push  :   0 rcall :  53 
ret   :  18 reti  :   0 rjmp  :  18 rol   :   0 ror   :   0 sbc   :   0 
sbci  :   4 sbi   :   0 sbic  :   0 sbis  :   0 sbiw  :   5 sbr   :   0 
sbrc  :   0 sbrs  :   0 sec   :   0 seh   :   0 sei   :   0 sen   :   0 
ser   :   0 ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    :  20 std   :   0 sts   :  12 sub   :   0 subi  :   7 
swap  :   0 tst   :   0 wdr   :   1 
Instructions used: 36 out of 117 (30.8%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0003c8    878     90    968  131072   0.7%
[.dseg] 0x000100 0x000535      0     53     53    4096   1.3%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 5 warnings
