
AVRASM ver. 2.1.30  C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm Mon Dec 06 16:13:36 2021

C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1061): warning: Register r5 already defined by the .DEF directive
C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1062): warning: Register r4 already defined by the .DEF directive
C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1063): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 14.745600 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _zero_flag=R5
                 	.DEF _ti_Cnt_1ms=R4
                 	.DEF _LCD_DelCnt_1ms=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0117 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 02d4 	JMP  _compare
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0447 	JMP  _timer0_comp
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
000046 2710
000047 03e8
000048 0064
000049 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00004a 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00004b 1000
00004c 0100
00004d 0010
00004e 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x5A:
00004f f9c0
000050 b0a4
000051 9299
000052 d882      	.DB  0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xD8
000053 9080
000054 8388
000055 a1c4
000056 8e84      	.DB  0x80,0x90,0x88,0x83,0xC4,0xA1,0x84,0x8E
                 _0x5B:
000057 001f
000058 002f
000059 004f
C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1118): warning: .cseg .db misalignment - padding zero byte
00005a 008f      	.DB  0x1F,0x0,0x2F,0x0,0x4F,0x0,0x8F
                 _0x97:
00005b 0000
00005c 5858
00005d 0158
00005e 0000      	.DB  0x0,0x0,0x58,0x58,0x58,0x1,0x0,0x0
00005f 0000
000060 0000
000061 0000
000062 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000063 0000
000064 0000
000065 0000
000066 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000067 0000
000068 0000
000069 0000
00006a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006b 0000
00006c 0000
00006d 0000
00006e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006f 0000
000070 0000
000071 0000
000072 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000073 0000
000074 0000
000075 0000
000076 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000077 0000
000078 0000
000079 0000
00007a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007b 0000
00007c 0000
00007d 0000
00007e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007f 0000
000080 0000
000081 0000
000082 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000083 0000      	.DB  0x0,0x0
                 _0xE7:
C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1132): warning: .cseg .db misalignment - padding zero byte
000084 0000      	.DB  0x0
                 _0x0:
000085 2020
000086 2020
000087 2020
000088 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000089 2020
00008a 2020
00008b 2020
00008c 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00008d 2020
00008e 2020
00008f 4300
000090 6f68      	.DB  0x20,0x20,0x20,0x20,0x0,0x43,0x68,0x6F
000091 736f
000092 2065
000093 6553
000094 7461      	.DB  0x6F,0x73,0x65,0x20,0x53,0x65,0x61,0x74
000095 3100
000096 2020
000097 3200
000098 2020      	.DB  0x0,0x31,0x20,0x20,0x0,0x32,0x20,0x20
000099 3300
00009a 2020
00009b 5300
00009c 7574      	.DB  0x0,0x33,0x20,0x20,0x0,0x53,0x74,0x75
00009d 7964
00009e 6f52
00009f 6d6f
0000a0 2020      	.DB  0x64,0x79,0x52,0x6F,0x6F,0x6D,0x20,0x20
0000a1 3a34
0000a2 554f
0000a3 0054
0000a4 3a31      	.DB  0x34,0x3A,0x4F,0x55,0x54,0x0,0x31,0x3A
0000a5 6325
0000a6 3220
0000a7 253a
0000a8 2063      	.DB  0x25,0x63,0x20,0x32,0x3A,0x25,0x63,0x20
0000a9 3a33
0000aa 6325
0000ab 2500
0000ac 2564      	.DB  0x33,0x3A,0x25,0x63,0x0,0x25,0x64,0x25
0000ad 2564
0000ae 2564
0000af 2564
0000b0 2564      	.DB  0x64,0x25,0x64,0x25,0x64,0x25,0x64,0x25
0000b1 2564
0000b2 2564
0000b3 2564
0000b4 2564      	.DB  0x64,0x25,0x64,0x25,0x64,0x25,0x64,0x25
0000b5 2564
0000b6 0064
0000b7 6e49
0000b8 7570      	.DB  0x64,0x25,0x64,0x0,0x49,0x6E,0x70,0x75
0000b9 2074
0000ba 6850
0000bb 6e6f
0000bc 4e65      	.DB  0x74,0x20,0x50,0x68,0x6F,0x6E,0x65,0x4E
0000bd 6d75
0000be 5300
0000bf 6d6f
0000c0 6f65      	.DB  0x75,0x6D,0x0,0x53,0x6F,0x6D,0x65,0x6F
0000c1 656e
0000c2 5520
0000c3 6573
0000c4 0064      	.DB  0x6E,0x65,0x20,0x55,0x73,0x65,0x64,0x0
0000c5 3a31
0000c6 6559
0000c7 2073
0000c8 3220      	.DB  0x31,0x3A,0x59,0x65,0x73,0x20,0x20,0x32
0000c9 4e3a
0000ca 006f
0000cb 6d45
0000cc 7470      	.DB  0x3A,0x4E,0x6F,0x0,0x45,0x6D,0x70,0x74
0000cd 2079
0000ce 6553
0000cf 7461
0000d0 5500      	.DB  0x79,0x20,0x53,0x65,0x61,0x74,0x0,0x55
0000d1 6573
0000d2 2072
0000d3 6843
0000d4 6365      	.DB  0x73,0x65,0x72,0x20,0x43,0x68,0x65,0x63
0000d5 006b
0000d6 6f47
0000d7 646f
0000d8 4220      	.DB  0x6B,0x0,0x47,0x6F,0x6F,0x64,0x20,0x42
0000d9 6579
0000da 4400
0000db 6f6f
0000dc 2072      	.DB  0x79,0x65,0x0,0x44,0x6F,0x6F,0x72,0x20
0000dd 704f
0000de 6e65
C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1156): warning: .cseg .db misalignment - padding zero byte
0000df 0000      	.DB  0x4F,0x70,0x65,0x6E,0x0
                 
                 __GLOBAL_INI_TBL:
0000e0 0015      	.DW  0x15
0000e1 0500      	.DW  _0xA
0000e2 010a      	.DW  _0x0*2
                 
0000e3 0010      	.DW  0x10
0000e4 05aa      	.DW  _Port_char
0000e5 009e      	.DW  _0x5A*2
                 
0000e6 0007      	.DW  0x07
0000e7 05ba      	.DW  _Port_fnd
0000e8 00ae      	.DW  _0x5B*2
                 
0000e9 000c      	.DW  0x0C
0000ea 0515      	.DW  _0xB5
0000eb 011f      	.DW  _0x0*2+21
                 
0000ec 0004      	.DW  0x04
0000ed 0521      	.DW  _0xB5+12
0000ee 012b      	.DW  _0x0*2+33
                 
0000ef 0004      	.DW  0x04
0000f0 0525      	.DW  _0xB5+16
0000f1 012f      	.DW  _0x0*2+37
                 
0000f2 0004      	.DW  0x04
0000f3 0529      	.DW  _0xB5+20
0000f4 0133      	.DW  _0x0*2+41
                 
0000f5 0011      	.DW  0x11
0000f6 052d      	.DW  _0xB5+24
0000f7 0137      	.DW  _0x0*2+45
                 
0000f8 000f      	.DW  0x0F
0000f9 053e      	.DW  _0xB5+41
0000fa 016e      	.DW  _0x0*2+100
                 
0000fb 000d      	.DW  0x0D
0000fc 054d      	.DW  _0xB5+56
0000fd 017d      	.DW  _0x0*2+115
                 
0000fe 000c      	.DW  0x0C
0000ff 055a      	.DW  _0xB5+69
000100 018a      	.DW  _0x0*2+128
                 
000101 000b      	.DW  0x0B
000102 0566      	.DW  _0xB5+81
000103 0196      	.DW  _0x0*2+140
                 
000104 000c      	.DW  0x0C
000105 0571      	.DW  _0xB5+92
000106 018a      	.DW  _0x0*2+128
                 
000107 000b      	.DW  0x0B
000108 057d      	.DW  _0xB5+104
000109 01a1      	.DW  _0x0*2+151
                 
00010a 0009      	.DW  0x09
00010b 0588      	.DW  _0xB5+115
00010c 01ac      	.DW  _0x0*2+162
                 
00010d 000a      	.DW  0x0A
00010e 0591      	.DW  _0xB5+124
00010f 01b5      	.DW  _0x0*2+171
                 
000110 000f      	.DW  0x0F
000111 059b      	.DW  _0xB5+134
000112 016e      	.DW  _0x0*2+100
                 
000113 0001      	.DW  0x01
000114 0005      	.DW  0x05
000115 0108      	.DW  _0xE7*2
                 
                 _0xFFFFFFFF:
000116 0000      	.DW  0
                 
                 __RESET:
000117 94f8      	CLI
000118 27ee      	CLR  R30
000119 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00011a e0f1      	LDI  R31,1
00011b bff5      	OUT  MCUCR,R31
00011c bfe5      	OUT  MCUCR,R30
00011d 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
00011f e1f8      	LDI  R31,0x18
000120 bdf1      	OUT  WDTCR,R31
000121 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000122 e08d      	LDI  R24,(14-2)+1
000123 e0a2      	LDI  R26,2
000124 27bb      	CLR  R27
                 __CLEAR_REG:
000125 93ed      	ST   X+,R30
000126 958a      	DEC  R24
000127 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000128 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000129 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00012a e0a0      	LDI  R26,LOW(__SRAM_START)
00012b e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00012c 93ed      	ST   X+,R30
00012d 9701      	SBIW R24,1
00012e f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00012f ece0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000130 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000131 9185      	LPM  R24,Z+
000132 9195      	LPM  R25,Z+
000133 9700      	SBIW R24,0
000134 f061      	BREQ __GLOBAL_INI_END
000135 91a5      	LPM  R26,Z+
000136 91b5      	LPM  R27,Z+
000137 9005      	LPM  R0,Z+
000138 9015      	LPM  R1,Z+
000139 01bf      	MOVW R22,R30
00013a 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00013b 9005      	LPM  R0,Z+
00013c 920d      	ST   X+,R0
00013d 9701      	SBIW R24,1
00013e f7e1      	BRNE __GLOBAL_INI_LOOP
00013f 01fb      	MOVW R30,R22
000140 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
000141 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000142 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000143 bfed      	OUT  SPL,R30
000144 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000145 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000146 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000147 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000148 940c 0472 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include "lcd.h"
                 
                 	.CSEG
                 _LCD_PORT_Init:
00014a efef      	LDI  R30,LOW(255)
00014b bbea      	OUT  0x1A,R30
00014c e1ef      	LDI  R30,LOW(31)
00014d 93e0 0064 	STS  100,R30
00014f 9508      	RET
                 _LCD_Data:
                 ;	ch -> Y+0
000150 91e0 0065 	LDS  R30,101
000152 60e4      	ORI  R30,4
000153 940e 092d 	CALL SUBOPT_0x0
000155 7fed      	ANDI R30,0xFD
000156 940e 092d 	CALL SUBOPT_0x0
000158 940e 0932 	CALL SUBOPT_0x1
00015a c119      	RJMP _0x2060009
                 _LCD_Comm:
                 ;	ch -> Y+0
00015b 91e0 0065 	LDS  R30,101
00015d 7feb      	ANDI R30,0xFB
00015e 940e 092d 	CALL SUBOPT_0x0
000160 7fed      	ANDI R30,0xFD
000161 940e 092d 	CALL SUBOPT_0x0
000163 940e 0932 	CALL SUBOPT_0x1
000165 c10e      	RJMP _0x2060009
                 _LCD_delay:
                 ;	ms -> Y+0
000166 81e8      	LD   R30,Y
000167 e0f0      	LDI  R31,0
000168 940e 0943 	CALL SUBOPT_0x2
00016a c109      	RJMP _0x2060009
                 _LCD_Pos:
                 ;	col -> Y+1
                 ;	row -> Y+0
00016b 81e9      	LDD  R30,Y+1
00016c e4a0      	LDI  R26,LOW(64)
00016d 02ea      	MULS R30,R26
00016e 01f0      	MOVW R30,R0
00016f 81a8      	LD   R26,Y
000170 0fea      	ADD  R30,R26
000171 68e0      	ORI  R30,0x80
000172 93ea      	ST   -Y,R30
000173 dfe7      	RCALL _LCD_Comm
000174 c2c7      	RJMP _0x2060004
                 _LCD_Char:
                 ;	c -> Y+0
000175 81e8      	LD   R30,Y
000176 93ea      	ST   -Y,R30
000177 dfd8      	RCALL _LCD_Data
000178 940e 0947 	CALL SUBOPT_0x3
00017a c0f9      	RJMP _0x2060009
                 _LCD_Str:
                 ;	*str -> Y+0
                 _0x3:
00017b 81a8      	LD   R26,Y
00017c 81b9      	LDD  R27,Y+1
00017d 91ec      	LD   R30,X
00017e 30e0      	CPI  R30,0
00017f f041      	BREQ _0x5
000180 93ea      	ST   -Y,R30
000181 dff3      	RCALL _LCD_Char
000182 81e8      	LD   R30,Y
000183 81f9      	LDD  R31,Y+1
000184 9631      	ADIW R30,1
000185 83e8      	ST   Y,R30
000186 83f9      	STD  Y+1,R31
000187 cff3      	RJMP _0x3
                 _0x5:
000188 c2b3      	RJMP _0x2060004
                 ;	*str -> Y+1
                 ;	loop_count -> R17
                 
                 	.DSEG
                 _0xA:
000500           	.BYTE 0x15
                 
                 	.CSEG
                 _LCD_Clear:
000189 e0e1      	LDI  R30,LOW(1)
00018a 93ea      	ST   -Y,R30
00018b dfcf      	RCALL _LCD_Comm
00018c e0e2      	LDI  R30,LOW(2)
00018d 93ea      	ST   -Y,R30
00018e dfd7      	RCALL _LCD_delay
00018f 9508      	RET
                 _LCD_Init:
000190 dfb9      	RCALL _LCD_PORT_Init
000191 940e 094a 	CALL SUBOPT_0x4
000193 940e 094a 	CALL SUBOPT_0x4
000195 940e 094a 	CALL SUBOPT_0x4
000197 e0ee      	LDI  R30,LOW(14)
000198 940e 0952 	CALL SUBOPT_0x5
00019a e0e6      	LDI  R30,LOW(6)
00019b 940e 0952 	CALL SUBOPT_0x5
00019d dfeb      	RCALL _LCD_Clear
00019e 9508      	RET
                 ;	p -> Y+0
                 ;	p -> Y+0
                 ;#include "twi.h"
                 _Init_TWI:
00019f e3e2      	LDI  R30,LOW(50)
0001a0 93e0 0070 	STS  112,R30
0001a2 e0e4      	LDI  R30,LOW(4)
0001a3 93e0 0074 	STS  116,R30
0001a5 e0e0      	LDI  R30,LOW(0)
0001a6 93e0 0071 	STS  113,R30
0001a8 9508      	RET
                 _TWI_TransCheck_ACK:
0001a9 931a      	ST   -Y,R17
0001aa 930a      	ST   -Y,R16
                 ;	Stat -> Y+2
                 ;	ExtDev_ErrCnt -> R16,R17
                +
0001ab e000     +LDI R16 , LOW ( 0 )
0001ac e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x12:
0001ad 91e0 0074 	LDS  R30,116
0001af 78e0      	ANDI R30,LOW(0x80)
0001b0 f461      	BRNE _0x14
0001b1 01d8      	MOVW R26,R16
                +
0001b2 5f0f     +SUBI R16 , LOW ( - 1 )
0001b3 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0001b4 3da1      	CPI  R26,LOW(0x7D1)
0001b5 e0e7      	LDI  R30,HIGH(0x7D1)
0001b6 07be      	CPC  R27,R30
0001b7 f020      	BRLO _0x15
0001b8 e0e1      	LDI  R30,LOW(1)
0001b9 8119      	LDD  R17,Y+1
0001ba 8108      	LDD  R16,Y+0
0001bb c047      	RJMP _0x206000A
                 _0x15:
0001bc cff0      	RJMP _0x12
                 _0x14:
0001bd 91e0 0071 	LDS  R30,113
0001bf 7fe8      	ANDI R30,LOW(0xF8)
0001c0 2fae      	MOV  R26,R30
0001c1 81ea      	LDD  R30,Y+2
0001c2 17ea      	CP   R30,R26
0001c3 f021      	BREQ _0x16
0001c4 e0e2      	LDI  R30,LOW(2)
0001c5 8119      	LDD  R17,Y+1
0001c6 8108      	LDD  R16,Y+0
0001c7 c03b      	RJMP _0x206000A
                 _0x16:
0001c8 e0e0      	LDI  R30,LOW(0)
0001c9 8119      	LDD  R17,Y+1
0001ca 8108      	LDD  R16,Y+0
0001cb c037      	RJMP _0x206000A
                 _TWI_Start:
0001cc eae4      	LDI  R30,LOW(164)
0001cd 93e0 0074 	STS  116,R30
0001cf e0e8      	LDI  R30,LOW(8)
0001d0 c014      	RJMP _0x206000B
                 _TWI_Write_SLAW:
                 ;	Addr -> Y+0
0001d1 940e 0959 	CALL SUBOPT_0x6
0001d3 e1e8      	LDI  R30,LOW(24)
0001d4 93ea      	ST   -Y,R30
0001d5 dfd3      	RCALL _TWI_TransCheck_ACK
0001d6 c09d      	RJMP _0x2060009
                 _TWI_Write_Data:
                 ;	Data -> Y+0
0001d7 940e 0959 	CALL SUBOPT_0x6
0001d9 e2e8      	LDI  R30,LOW(40)
0001da 93ea      	ST   -Y,R30
0001db dfcd      	RCALL _TWI_TransCheck_ACK
0001dc c097      	RJMP _0x2060009
                 _TWI_Stop:
0001dd e9e4      	LDI  R30,LOW(148)
0001de 93e0 0074 	STS  116,R30
0001e0 9508      	RET
                 _TWI_Restart:
0001e1 eae4      	LDI  R30,LOW(164)
0001e2 93e0 0074 	STS  116,R30
0001e4 e1e0      	LDI  R30,LOW(16)
                 _0x206000B:
0001e5 93ea      	ST   -Y,R30
0001e6 dfc2      	RCALL _TWI_TransCheck_ACK
0001e7 9508      	RET
                 ;	Data -> Y+2
                 ;	Addr -> Y+1
                 ;	ret_err -> R17
                 _TWI_Write_SLAR:
                 ;	Addr -> Y+0
0001e8 81e8      	LD   R30,Y
0001e9 60e1      	ORI  R30,1
0001ea 93e0 0073 	STS  115,R30
0001ec e8e4      	LDI  R30,LOW(132)
0001ed 93e0 0074 	STS  116,R30
0001ef e4e0      	LDI  R30,LOW(64)
0001f0 93ea      	ST   -Y,R30
0001f1 dfb7      	RCALL _TWI_TransCheck_ACK
0001f2 c081      	RJMP _0x2060009
                 ;	*Data -> Y+1
                 ;	ret_err -> R17
                 _TWI_Read_Data_NACK:
0001f3 931a      	ST   -Y,R17
                 ;	*Data -> Y+1
                 ;	ret_err -> R17
0001f4 e010      	LDI  R17,0
0001f5 e8e4      	LDI  R30,LOW(132)
0001f6 93e0 0074 	STS  116,R30
0001f8 e5e8      	LDI  R30,LOW(88)
0001f9 93ea      	ST   -Y,R30
0001fa dfae      	RCALL _TWI_TransCheck_ACK
0001fb 2f1e      	MOV  R17,R30
0001fc 91e0 0073 	LDS  R30,115
0001fe 81a9      	LDD  R26,Y+1
0001ff 81ba      	LDD  R27,Y+1+1
000200 93ec      	ST   X,R30
000201 e0e0      	LDI  R30,LOW(0)
000202 8118      	LDD  R17,Y+0
                 _0x206000A:
000203 9623      	ADIW R28,3
000204 9508      	RET
                 ;	Addr -> Y+4
                 ;	*Data -> Y+2
                 ;	rec_data -> R17
                 ;	ret_err -> R16
                 ;	Slave_Addr -> Y+0
                 ;	*Data -> Y+1
                 ;	ret_err -> R17
                 ;	*Data -> Y+2
                 ;	ret_err -> R17
                 ;	rec_data -> R16
                 ;	devAddr -> Y+5
                 ;	regAddr -> Y+4
                 ;	*Data -> Y+2
                 ;	rec_data -> R17
                 ;	ret_err -> R16
                 ;#include "srf02.h"
                 _SRF02_I2C_Write:
000205 931a      	ST   -Y,R17
                 ;	address -> Y+3
                 ;	reg -> Y+2
                 ;	data -> Y+1
                 ;	ret_err -> R17
000206 e010      	LDI  R17,0
000207 dfc4      	RCALL _TWI_Start
000208 2f1e      	MOV  R17,R30
000209 81eb      	LDD  R30,Y+3
00020a 93ea      	ST   -Y,R30
00020b dfc5      	RCALL _TWI_Write_SLAW
00020c 2f1e      	MOV  R17,R30
00020d 3010      	CPI  R17,0
00020e f019      	BREQ _0x29
00020f 2fe1      	MOV  R30,R17
000210 8118      	LDD  R17,Y+0
000211 c0d5      	RJMP _0x2060007
                 _0x29:
000212 81ea      	LDD  R30,Y+2
000213 93ea      	ST   -Y,R30
000214 dfc2      	RCALL _TWI_Write_Data
000215 2f1e      	MOV  R17,R30
000216 3010      	CPI  R17,0
000217 f019      	BREQ _0x2A
000218 2fe1      	MOV  R30,R17
000219 8118      	LDD  R17,Y+0
00021a c0cc      	RJMP _0x2060007
                 _0x2A:
00021b 81e9      	LDD  R30,Y+1
00021c 93ea      	ST   -Y,R30
00021d dfb9      	RCALL _TWI_Write_Data
00021e 2f1e      	MOV  R17,R30
00021f 3010      	CPI  R17,0
000220 f019      	BREQ _0x2B
000221 2fe1      	MOV  R30,R17
000222 8118      	LDD  R17,Y+0
000223 c0c3      	RJMP _0x2060007
                 _0x2B:
000224 dfb8      	RCALL _TWI_Stop
000225 e0e0      	LDI  R30,LOW(0)
000226 8118      	LDD  R17,Y+0
000227 c0bf      	RJMP _0x2060007
                 _SRF02_I2C_Read:
000228 931a      	ST   -Y,R17
000229 930a      	ST   -Y,R16
                 ;	address -> Y+5
                 ;	reg -> Y+4
                 ;	*Data -> Y+2
                 ;	read_data -> R17
                 ;	ret_err -> R16
00022a e010      	LDI  R17,0
00022b e000      	LDI  R16,0
00022c df9f      	RCALL _TWI_Start
00022d 2f0e      	MOV  R16,R30
00022e 81ed      	LDD  R30,Y+5
00022f 93ea      	ST   -Y,R30
000230 dfa0      	RCALL _TWI_Write_SLAW
000231 2f0e      	MOV  R16,R30
000232 3000      	CPI  R16,0
000233 f021      	BREQ _0x2C
000234 2fe0      	MOV  R30,R16
000235 8119      	LDD  R17,Y+1
000236 8108      	LDD  R16,Y+0
000237 c1b0      	RJMP _0x2060005
                 _0x2C:
000238 81ec      	LDD  R30,Y+4
000239 93ea      	ST   -Y,R30
00023a df9c      	RCALL _TWI_Write_Data
00023b 2f0e      	MOV  R16,R30
00023c 3000      	CPI  R16,0
00023d f021      	BREQ _0x2D
00023e 2fe0      	MOV  R30,R16
00023f 8119      	LDD  R17,Y+1
000240 8108      	LDD  R16,Y+0
000241 c1a6      	RJMP _0x2060005
                 _0x2D:
000242 df9e      	RCALL _TWI_Restart
000243 2f0e      	MOV  R16,R30
000244 9ac3      	SBI  0x18,3
000245 3000      	CPI  R16,0
000246 f021      	BREQ _0x2E
000247 2fe0      	MOV  R30,R16
000248 8119      	LDD  R17,Y+1
000249 8108      	LDD  R16,Y+0
00024a c19d      	RJMP _0x2060005
                 _0x2E:
00024b 81ed      	LDD  R30,Y+5
00024c 93ea      	ST   -Y,R30
00024d df9a      	RCALL _TWI_Write_SLAR
00024e 2f0e      	MOV  R16,R30
00024f 9ac4      	SBI  0x18,4
000250 3000      	CPI  R16,0
000251 f021      	BREQ _0x2F
000252 2fe0      	MOV  R30,R16
000253 8119      	LDD  R17,Y+1
000254 8108      	LDD  R16,Y+0
000255 c192      	RJMP _0x2060005
                 _0x2F:
000256 b7ed      	IN   R30,SPL
000257 b7fe      	IN   R31,SPH
000258 93fa      	ST   -Y,R31
000259 93ea      	ST   -Y,R30
00025a 931f      	PUSH R17
00025b df97      	RCALL _TWI_Read_Data_NACK
00025c 911f      	POP  R17
00025d 2f0e      	MOV  R16,R30
00025e 9ac5      	SBI  0x18,5
00025f 3000      	CPI  R16,0
000260 f021      	BREQ _0x30
000261 2fe0      	MOV  R30,R16
000262 8119      	LDD  R17,Y+1
000263 8108      	LDD  R16,Y+0
000264 c183      	RJMP _0x2060005
                 _0x30:
000265 df77      	RCALL _TWI_Stop
000266 81aa      	LDD  R26,Y+2
000267 81bb      	LDD  R27,Y+2+1
000268 931c      	ST   X,R17
000269 e0e0      	LDI  R30,LOW(0)
00026a 8119      	LDD  R17,Y+1
00026b 8108      	LDD  R16,Y+0
00026c c17b      	RJMP _0x2060005
                 _startRanging:
                 ;	addr -> Y+0
00026d 81e8      	LD   R30,Y
00026e 93ea      	ST   -Y,R30
00026f e0e0      	LDI  R30,LOW(0)
000270 93ea      	ST   -Y,R30
000271 e5e1      	LDI  R30,LOW(81)
000272 93ea      	ST   -Y,R30
000273 df91      	RCALL _SRF02_I2C_Write
                 _0x2060009:
000274 9621      	ADIW R28,1
000275 9508      	RET
                 _getRange:
000276 931a      	ST   -Y,R17
000277 930a      	ST   -Y,R16
                 ;	addr -> Y+4
                 ;	*pDistance -> Y+2
                 ;	temp -> R17
                 ;	res -> R16
000278 e000      	LDI  R16,0
000279 81ec      	LDD  R30,Y+4
00027a 93ea      	ST   -Y,R30
00027b e0e2      	LDI  R30,LOW(2)
00027c 93ea      	ST   -Y,R30
00027d b7ed      	IN   R30,SPL
00027e b7fe      	IN   R31,SPH
00027f 93fa      	ST   -Y,R31
000280 93ea      	ST   -Y,R30
000281 931f      	PUSH R17
000282 dfa5      	RCALL _SRF02_I2C_Read
000283 911f      	POP  R17
000284 2f0e      	MOV  R16,R30
000285 3000      	CPI  R16,0
000286 f509      	BRNE _0x2060008
000287 2ff1      	MOV  R31,R17
000288 e0e0      	LDI  R30,LOW(0)
000289 81aa      	LDD  R26,Y+2
00028a 81bb      	LDD  R27,Y+2+1
00028b 93ed      	ST   X+,R30
00028c 93fc      	ST   X,R31
00028d 81ec      	LDD  R30,Y+4
00028e 93ea      	ST   -Y,R30
00028f e0e3      	LDI  R30,LOW(3)
000290 93ea      	ST   -Y,R30
000291 b7ed      	IN   R30,SPL
000292 b7fe      	IN   R31,SPH
000293 93fa      	ST   -Y,R31
000294 93ea      	ST   -Y,R30
000295 931f      	PUSH R17
000296 df91      	RCALL _SRF02_I2C_Read
000297 911f      	POP  R17
000298 2f0e      	MOV  R16,R30
000299 3000      	CPI  R16,0
00029a f469      	BRNE _0x2060008
00029b 81aa      	LDD  R26,Y+2
00029c 81bb      	LDD  R27,Y+2+1
00029d 010d      	MOVW R0,R26
00029e 940e 0b37 	CALL __GETW1P
0002a0 01df      	MOVW R26,R30
0002a1 2fe1      	MOV  R30,R17
0002a2 e0f0      	LDI  R31,0
0002a3 2bea      	OR   R30,R26
0002a4 2bfb      	OR   R31,R27
0002a5 01d0      	MOVW R26,R0
0002a6 93ed      	ST   X+,R30
0002a7 93fc      	ST   X,R31
                 _0x2060008:
0002a8 2fe0      	MOV  R30,R16
0002a9 e0f0      	LDI  R31,0
0002aa 8119      	LDD  R17,Y+1
0002ab 8108      	LDD  R16,Y+0
0002ac 9625      	ADIW R28,5
0002ad 9508      	RET
                 ;	ori -> Y+2
                 ;	des -> Y+1
                 ;	res -> R17
                 ;#include "Keypad.h"
                 
                 	.DSEG
                 
                 	.CSEG
                 _FND_PORT_Init:
0002ae b1e2      	IN   R30,0x2
0002af 6fe0      	ORI  R30,LOW(0xF0)
0002b0 b9e2      	OUT  0x2,R30
0002b1 91e0 0061 	LDS  R30,97
0002b3 6fef      	ORI  R30,LOW(0xFF)
0002b4 93e0 0061 	STS  97,R30
0002b6 b3e4      	IN   R30,0x14
0002b7 60ef      	ORI  R30,LOW(0xF)
0002b8 bbe4      	OUT  0x14,R30
0002b9 91e0 0064 	LDS  R30,100
0002bb 61e0      	ORI  R30,0x10
0002bc 93e0 0064 	STS  100,R30
0002be 9abd      	SBI  0x17,5
0002bf b3e5      	IN   R30,0x15
0002c0 6fef      	ORI  R30,LOW(0xFF)
0002c1 bbe5      	OUT  0x15,R30
0002c2 9508      	RET
                 _Init_Timer1:
0002c3 e8e2      	LDI  R30,LOW(130)
0002c4 bdef      	OUT  0x2F,R30
0002c5 e1ea      	LDI  R30,LOW(26)
0002c6 bdee      	OUT  0x2E,R30
0002c7 e0e0      	LDI  R30,LOW(0)
0002c8 e0f0      	LDI  R31,HIGH(0)
0002c9 bdfd      	OUT  0x2C+1,R31
0002ca bdec      	OUT  0x2C,R30
0002cb efef      	LDI  R30,LOW(36863)
0002cc e8ff      	LDI  R31,HIGH(36863)
0002cd bdf7      	OUT  0x26+1,R31
0002ce bde6      	OUT  0x26,R30
0002cf 940e 0960 	CALL SUBOPT_0x7
0002d1 b7e7      	IN   R30,0x37
0002d2 61e0      	ORI  R30,0x10
0002d3 c171      	RJMP _0x2060003
                 _compare:
0002d4 0000      	nop
0002d5 9518      	RETI
                 _myDelay_us:
0002d6 931a      	ST   -Y,R17
0002d7 930a      	ST   -Y,R16
                 ;	delay -> Y+2
                 ;	loop -> R16,R17
                +
0002d8 e000     +LDI R16 , LOW ( 0 )
0002d9 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x5D:
0002da 81ea      	LDD  R30,Y+2
0002db 81fb      	LDD  R31,Y+2+1
0002dc 170e      	CP   R16,R30
0002dd 071f      	CPC  R17,R31
0002de f430      	BRSH _0x5E
                +
0002df e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
0002e0 958a     +DEC R24
0002e1 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
                +
0002e2 5f0f     +SUBI R16 , LOW ( - 1 )
0002e3 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0002e4 cff5      	RJMP _0x5D
                 _0x5E:
0002e5 8119      	LDD  R17,Y+1
0002e6 8108      	LDD  R16,Y+0
                 _0x2060007:
0002e7 9624      	ADIW R28,4
0002e8 9508      	RET
                 _Buzzer_play:
0002e9 940e 0b51 	CALL __SAVELOCR4
                 ;	delay -> Y+4
                 ;	loop -> R16,R17
                 ;	Play_Tim -> R19
0002eb e030      	LDI  R19,0
0002ec 81ec      	LDD  R30,Y+4
0002ed 81fd      	LDD  R31,Y+4+1
0002ee e1a0      	LDI  R26,LOW(10000)
0002ef e2b7      	LDI  R27,HIGH(10000)
0002f0 940e 0b00 	CALL __DIVW21U
0002f2 2f3e      	MOV  R19,R30
                +
0002f3 e000     +LDI R16 , LOW ( 0 )
0002f4 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x60:
0002f5 2fe3      	MOV  R30,R19
0002f6 01d8      	MOVW R26,R16
0002f7 e0f0      	LDI  R31,0
0002f8 17ae      	CP   R26,R30
0002f9 07bf      	CPC  R27,R31
0002fa f468      	BRSH _0x61
0002fb 91e0 0065 	LDS  R30,101
0002fd 61e0      	ORI  R30,0x10
0002fe 940e 0965 	CALL SUBOPT_0x8
000300 91e0 0065 	LDS  R30,101
000302 7eef      	ANDI R30,0xEF
000303 940e 0965 	CALL SUBOPT_0x8
                +
000305 5f0f     +SUBI R16 , LOW ( - 1 )
000306 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000307 cfed      	RJMP _0x60
                 _0x61:
000308 c0dd      	RJMP _0x2060006
                 _KeyScan:
000309 940e 0b4f 	CALL __SAVELOCR6
                 ;	key_scan_line -> R16,R17
                 ;	key_scan_loop -> R19
                 ;	getPinData -> R18
                 ;	key_num -> R20,R21
                +
00030b ef0e     +LDI R16 , LOW ( 254 )
00030c e010     +LDI R17 , HIGH ( 254 )
                 	__GETWRN 16,17,254
00030d e030      	LDI  R19,0
00030e e020      	LDI  R18,0
                +
00030f e040     +LDI R20 , LOW ( 0 )
000310 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
000311 e030      	LDI  R19,LOW(0)
                 _0x63:
000312 3034      	CPI  R19,4
000313 f5b8      	BRSH _0x64
000314 bb05      	OUT  0x15,R16
                +
000315 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000316 958a     +DEC R24
000317 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
000318 b3e3      	IN   R30,0x13
000319 7fe0      	ANDI R30,LOW(0xF0)
00031a 2f2e      	MOV  R18,R30
00031b 3020      	CPI  R18,0
00031c f151      	BREQ _0x65
00031d 2fe2      	MOV  R30,R18
00031e e0f0      	LDI  R31,0
00031f 31e0      	CPI  R30,LOW(0x10)
000320 e0a0      	LDI  R26,HIGH(0x10)
000321 07fa      	CPC  R31,R26
000322 f429      	BRNE _0x69
000323 e0e4      	LDI  R30,LOW(4)
000324 9fe3      	MUL  R30,R19
000325 01f0      	MOVW R30,R0
000326 9631      	ADIW R30,1
000327 c01a      	RJMP _0xE3
                 _0x69:
000328 32e0      	CPI  R30,LOW(0x20)
000329 e0a0      	LDI  R26,HIGH(0x20)
00032a 07fa      	CPC  R31,R26
00032b f429      	BRNE _0x6A
00032c e0e4      	LDI  R30,LOW(4)
00032d 9fe3      	MUL  R30,R19
00032e 01f0      	MOVW R30,R0
00032f 9632      	ADIW R30,2
000330 c011      	RJMP _0xE3
                 _0x6A:
000331 34e0      	CPI  R30,LOW(0x40)
000332 e0a0      	LDI  R26,HIGH(0x40)
000333 07fa      	CPC  R31,R26
000334 f429      	BRNE _0x6B
000335 e0e4      	LDI  R30,LOW(4)
000336 9fe3      	MUL  R30,R19
000337 01f0      	MOVW R30,R0
000338 9633      	ADIW R30,3
000339 c008      	RJMP _0xE3
                 _0x6B:
00033a 38e0      	CPI  R30,LOW(0x80)
00033b e0a0      	LDI  R26,HIGH(0x80)
00033c 07fa      	CPC  R31,R26
00033d f429      	BRNE _0x68
00033e e0e4      	LDI  R30,LOW(4)
00033f 9fe3      	MUL  R30,R19
000340 01f0      	MOVW R30,R0
000341 9634      	ADIW R30,4
                 _0xE3:
000342 01af      	MOVW R20,R30
                 _0x68:
000343 2fe4      	MOV  R30,R20
000344 940e 0b56 	CALL __LOADLOCR6
000346 c0a1      	RJMP _0x2060005
                 _0x65:
000347 0f00      	LSL  R16
000348 1f11      	ROL  R17
000349 5f3f      	SUBI R19,-1
00034a cfc7      	RJMP _0x63
                 _0x64:
00034b 940e 0b56 	CALL __LOADLOCR6
00034d c09a      	RJMP _0x2060005
                 _Changenum:
00034e 931a      	ST   -Y,R17
                 ;	num -> Y+1
                 ;	return_num -> R17
00034f e010      	LDI  R17,0
000350 81e9      	LDD  R30,Y+1
000351 30e0      	CPI  R30,0
000352 f411      	BRNE _0x6D
000353 e010      	LDI  R17,LOW(0)
000354 c049      	RJMP _0x6E
                 _0x6D:
000355 940e 096d 	CALL SUBOPT_0x9
000357 9730      	SBIW R30,0
000358 f421      	BRNE _0x6F
000359 940e 0974 	CALL SUBOPT_0xA
00035b 5fe4      	SUBI R30,-LOW(12)
00035c c040      	RJMP _0xE4
                 _0x6F:
00035d 940e 0974 	CALL SUBOPT_0xA
00035f 9730      	SBIW R30,0
000360 f449      	BRNE _0x71
000361 940e 0974 	CALL SUBOPT_0xA
000363 0fee      	LSL  R30
000364 0fee      	LSL  R30
000365 2f6e      	MOV  R22,R30
000366 940e 096d 	CALL SUBOPT_0x9
000368 0fe6      	ADD  R30,R22
000369 c033      	RJMP _0xE4
                 _0x71:
00036a 940e 0974 	CALL SUBOPT_0xA
00036c 30e1      	CPI  R30,LOW(0x1)
00036d e0a0      	LDI  R26,HIGH(0x1)
00036e 07fa      	CPC  R31,R26
00036f f451      	BRNE _0x73
000370 940e 0974 	CALL SUBOPT_0xA
000372 940e 097b 	CALL SUBOPT_0xB
000374 01db      	MOVW R26,R22
000375 0fae      	ADD  R26,R30
000376 1fbf      	ADC  R27,R31
000377 e0e1      	LDI  R30,LOW(1)
000378 e0f0      	LDI  R31,HIGH(1)
000379 c01f      	RJMP _0xE5
                 _0x73:
00037a 940e 0974 	CALL SUBOPT_0xA
00037c 30e2      	CPI  R30,LOW(0x2)
00037d e0a0      	LDI  R26,HIGH(0x2)
00037e 07fa      	CPC  R31,R26
00037f f451      	BRNE _0x75
000380 940e 0974 	CALL SUBOPT_0xA
000382 940e 097b 	CALL SUBOPT_0xB
000384 01db      	MOVW R26,R22
000385 0fae      	ADD  R26,R30
000386 1fbf      	ADC  R27,R31
000387 e0e2      	LDI  R30,LOW(2)
000388 e0f0      	LDI  R31,HIGH(2)
000389 c00f      	RJMP _0xE5
                 _0x75:
00038a 940e 0974 	CALL SUBOPT_0xA
00038c 30e3      	CPI  R30,LOW(0x3)
00038d e0a0      	LDI  R26,HIGH(0x3)
00038e 07fa      	CPC  R31,R26
00038f f471      	BRNE _0x77
000390 940e 0974 	CALL SUBOPT_0xA
000392 940e 097b 	CALL SUBOPT_0xB
000394 01db      	MOVW R26,R22
000395 0fae      	ADD  R26,R30
000396 1fbf      	ADC  R27,R31
000397 e0e3      	LDI  R30,LOW(3)
000398 e0f0      	LDI  R31,HIGH(3)
                 _0xE5:
000399 940e 0b44 	CALL __SWAPW12
00039b 1bea      	SUB  R30,R26
00039c 0bfb      	SBC  R31,R27
                 _0xE4:
00039d 2f1e      	MOV  R17,R30
                 _0x77:
                 _0x6E:
00039e 301b      	CPI  R17,11
00039f f419      	BRNE _0x78
0003a0 e010      	LDI  R17,LOW(0)
0003a1 e0e1      	LDI  R30,LOW(1)
0003a2 2e5e      	MOV  R5,R30
                 _0x78:
0003a3 2fe1      	MOV  R30,R17
0003a4 8118      	LDD  R17,Y+0
0003a5 c096      	RJMP _0x2060004
                 _OUTFND:
0003a6 940e 0b51 	CALL __SAVELOCR4
                 ;	t -> Y+4
                 ;	FND0 -> R17
                 ;	FND1 -> R16
                 ;	FND2 -> R19
                 ;	FND3 -> R18
0003a8 81ac      	LDD  R26,Y+4
0003a9 81bd      	LDD  R27,Y+4+1
0003aa eee8      	LDI  R30,LOW(1000)
0003ab e0f3      	LDI  R31,HIGH(1000)
0003ac 940e 0b00 	CALL __DIVW21U
0003ae 2f2e      	MOV  R18,R30
0003af 81ac      	LDD  R26,Y+4
0003b0 81bd      	LDD  R27,Y+4+1
0003b1 eee8      	LDI  R30,LOW(1000)
0003b2 e0f3      	LDI  R31,HIGH(1000)
0003b3 940e 0b18 	CALL __MODW21U
0003b5 01df      	MOVW R26,R30
0003b6 e6e4      	LDI  R30,LOW(100)
0003b7 e0f0      	LDI  R31,HIGH(100)
0003b8 940e 0b00 	CALL __DIVW21U
0003ba 2f3e      	MOV  R19,R30
0003bb 81ac      	LDD  R26,Y+4
0003bc 81bd      	LDD  R27,Y+4+1
0003bd e6e4      	LDI  R30,LOW(100)
0003be e0f0      	LDI  R31,HIGH(100)
0003bf 940e 0b18 	CALL __MODW21U
0003c1 01df      	MOVW R26,R30
0003c2 e0ea      	LDI  R30,LOW(10)
0003c3 e0f0      	LDI  R31,HIGH(10)
0003c4 940e 0b00 	CALL __DIVW21U
0003c6 2f0e      	MOV  R16,R30
0003c7 81ac      	LDD  R26,Y+4
0003c8 81bd      	LDD  R27,Y+4+1
0003c9 e0ea      	LDI  R30,LOW(10)
0003ca e0f0      	LDI  R31,HIGH(10)
0003cb 940e 0b18 	CALL __MODW21U
0003cd 2f1e      	MOV  R17,R30
0003ce 91e0 05ba 	LDS  R30,_Port_fnd
0003d0 b9e3      	OUT  0x3,R30
0003d1 2fe1      	MOV  R30,R17
0003d2 940e 097f 	CALL SUBOPT_0xC
                +
0003d4 91e0 05bc+LDS R30 , _Port_fnd + ( 2 )
                 	__GETB1MN _Port_fnd,2
0003d6 b9e3      	OUT  0x3,R30
0003d7 2fe0      	MOV  R30,R16
0003d8 940e 097f 	CALL SUBOPT_0xC
                +
0003da 91e0 05be+LDS R30 , _Port_fnd + ( 4 )
                 	__GETB1MN _Port_fnd,4
0003dc b9e3      	OUT  0x3,R30
0003dd 2fe3      	MOV  R30,R19
0003de 940e 097f 	CALL SUBOPT_0xC
                +
0003e0 91e0 05c0+LDS R30 , _Port_fnd + ( 6 )
                 	__GETB1MN _Port_fnd,6
0003e2 b9e3      	OUT  0x3,R30
0003e3 2fe2      	MOV  R30,R18
0003e4 940e 097f 	CALL SUBOPT_0xC
                 _0x2060006:
0003e6 940e 0b58 	CALL __LOADLOCR4
                 _0x2060005:
0003e8 9626      	ADIW R28,6
0003e9 9508      	RET
                 _buzzer_play_function:
                 ;	t -> Y+0
0003ea 81e8      	LD   R30,Y
0003eb 81f9      	LDD  R31,Y+1
0003ec 30e1      	CPI  R30,LOW(0x1)
0003ed e0a0      	LDI  R26,HIGH(0x1)
0003ee 07fa      	CPC  R31,R26
0003ef f429      	BRNE _0x7C
0003f0 e7e4      	LDI  R30,LOW(1908)
0003f1 e0f7      	LDI  R31,HIGH(1908)
0003f2 940e 0986 	CALL SUBOPT_0xD
0003f4 c047      	RJMP _0x7B
                 _0x7C:
0003f5 30e2      	CPI  R30,LOW(0x2)
0003f6 e0a0      	LDI  R26,HIGH(0x2)
0003f7 07fa      	CPC  R31,R26
0003f8 f429      	BRNE _0x7D
0003f9 eae4      	LDI  R30,LOW(1700)
0003fa e0f6      	LDI  R31,HIGH(1700)
0003fb 940e 0986 	CALL SUBOPT_0xD
0003fd c03e      	RJMP _0x7B
                 _0x7D:
0003fe 30e3      	CPI  R30,LOW(0x3)
0003ff e0a0      	LDI  R26,HIGH(0x3)
000400 07fa      	CPC  R31,R26
000401 f429      	BRNE _0x7E
000402 eeeb      	LDI  R30,LOW(1515)
000403 e0f5      	LDI  R31,HIGH(1515)
000404 940e 0986 	CALL SUBOPT_0xD
000406 c035      	RJMP _0x7B
                 _0x7E:
000407 30e4      	CPI  R30,LOW(0x4)
000408 e0a0      	LDI  R26,HIGH(0x4)
000409 07fa      	CPC  R31,R26
00040a f429      	BRNE _0x7F
00040b e9e8      	LDI  R30,LOW(1432)
00040c e0f5      	LDI  R31,HIGH(1432)
00040d 940e 0986 	CALL SUBOPT_0xD
00040f c02c      	RJMP _0x7B
                 _0x7F:
000410 30e5      	CPI  R30,LOW(0x5)
000411 e0a0      	LDI  R26,HIGH(0x5)
000412 07fa      	CPC  R31,R26
000413 f429      	BRNE _0x80
000414 efeb      	LDI  R30,LOW(1275)
000415 e0f4      	LDI  R31,HIGH(1275)
000416 940e 0986 	CALL SUBOPT_0xD
000418 c023      	RJMP _0x7B
                 _0x80:
000419 30e6      	CPI  R30,LOW(0x6)
00041a e0a0      	LDI  R26,HIGH(0x6)
00041b 07fa      	CPC  R31,R26
00041c f429      	BRNE _0x81
00041d e7e0      	LDI  R30,LOW(1136)
00041e e0f4      	LDI  R31,HIGH(1136)
00041f 940e 0986 	CALL SUBOPT_0xD
000421 c01a      	RJMP _0x7B
                 _0x81:
000422 30e7      	CPI  R30,LOW(0x7)
000423 e0a0      	LDI  R26,HIGH(0x7)
000424 07fa      	CPC  R31,R26
000425 f429      	BRNE _0x82
000426 efe4      	LDI  R30,LOW(1012)
000427 e0f3      	LDI  R31,HIGH(1012)
000428 940e 0986 	CALL SUBOPT_0xD
00042a c011      	RJMP _0x7B
                 _0x82:
00042b 30e8      	CPI  R30,LOW(0x8)
00042c e0a0      	LDI  R26,HIGH(0x8)
00042d 07fa      	CPC  R31,R26
00042e f429      	BRNE _0x83
00042f ebea      	LDI  R30,LOW(954)
000430 e0f3      	LDI  R31,HIGH(954)
000431 940e 0986 	CALL SUBOPT_0xD
000433 c008      	RJMP _0x7B
                 _0x83:
000434 30e9      	CPI  R30,LOW(0x9)
000435 e0a0      	LDI  R26,HIGH(0x9)
000436 07fa      	CPC  R31,R26
000437 f421      	BRNE _0x85
000438 e5e2      	LDI  R30,LOW(850)
000439 e0f3      	LDI  R31,HIGH(850)
00043a 940e 0986 	CALL SUBOPT_0xD
                 _0x85:
                 _0x7B:
                 _0x2060004:
00043c 9622      	ADIW R28,2
00043d 9508      	RET
                 ;	num -> Y+1
                 ;	str -> R17
                 ;
                 ;#define NONE 0
                 ;#define START 1
                 ;#define INPUT_PHONE 2
                 ;#define INPUT_PHONE_INIT 3
                 ;#define CHECK_PNUM 4
                 ;#define CHECK_PNUM_INIT 5
                 ;#define EXIT_CHOOSE 6
                 ;#define CHECK_PNUM_OUT 7
                 ;#define CHECK_PNUM_OUT_INIT 8
                 ;#define INPUT_PHONE_OUT 9
                 ;#define INPUT_PHONE_OUT_INIT 10
                 ;
                 ;unsigned char ti_Cnt_1ms;
                 ;unsigned char LCD_DelCnt_1ms;
                 ;
                 ;void Timer0_Init()  //Å¸ÀÌ¸Ó ÀÎÅÍ·´Æ®
                 ; 0000 0019 {
                 _Timer0_Init:
                 ; 0000 001A     TCCR0 = (1<<WGM01)|(1<<CS00)|(1<<CS01)|(1<<CS02);
00043e e0ef      	LDI  R30,LOW(15)
00043f bfe3      	OUT  0x33,R30
                 ; 0000 001B     TCNT0 = 0x00;
000440 e0e0      	LDI  R30,LOW(0)
000441 bfe2      	OUT  0x32,R30
                 ; 0000 001C     OCR0 = 100;
000442 e6e4      	LDI  R30,LOW(100)
000443 bfe1      	OUT  0x31,R30
                 ; 0000 001D     TIMSK = (1<<OCIE0);
000444 e0e2      	LDI  R30,LOW(2)
                 _0x2060003:
000445 bfe7      	OUT  0x37,R30
                 ; 0000 001E }
000446 9508      	RET
                 ;
                 ;interrupt[TIM0_COMP] void timer0_comp(void)    //½ÇÁ¦ Ä«¿îÆ® Áõ°¡
                 ; 0000 0021 {
                 _timer0_comp:
000447 93ea      	ST   -Y,R30
000448 b7ef      	IN   R30,SREG
                 ; 0000 0022     ti_Cnt_1ms++;
000449 9443      	INC  R4
                 ; 0000 0023     LCD_DelCnt_1ms++;
00044a 9473      	INC  R7
                 ; 0000 0024 }
00044b bfef      	OUT  SREG,R30
00044c 91e9      	LD   R30,Y+
00044d 9518      	RETI
                 ;
                 ;
                 ;
                 ;int SRF_Run(char Sonar_Addr){    //SRF ÁÖ¼Ò·Î °ªÀ» ¹Þ¾Æ¿È
                 ; 0000 0028 int SRF_Run(char Sonar_Addr){
                 _SRF_Run:
                 ; 0000 0029     unsigned char res;
                 ; 0000 002A     unsigned int Sonar_range;
                 ; 0000 002B 
                 ; 0000 002C     res = getRange(Sonar_Addr, &Sonar_range);
00044e 940e 0b51 	CALL __SAVELOCR4
                 ;	Sonar_Addr -> Y+4
                 ;	res -> R17
                 ;	Sonar_range -> R18,R19
000450 81ec      	LDD  R30,Y+4
000451 93ea      	ST   -Y,R30
000452 b7ed      	IN   R30,SPL
000453 b7fe      	IN   R31,SPH
000454 9731      	SBIW R30,1
000455 93fa      	ST   -Y,R31
000456 93ea      	ST   -Y,R30
000457 933f      	PUSH R19
000458 932f      	PUSH R18
000459 de1c      	RCALL _getRange
00045a 912f      	POP  R18
00045b 913f      	POP  R19
00045c 2f1e      	MOV  R17,R30
                 ; 0000 002D         if(res)
00045d 3010      	CPI  R17,0
00045e f031      	BREQ _0x94
                 ; 0000 002E         {
                 ; 0000 002F             return 0;
00045f e0e0      	LDI  R30,LOW(0)
000460 e0f0      	LDI  R31,HIGH(0)
000461 940e 0b58 	CALL __LOADLOCR4
000463 940c 07ab 	JMP  _0x2060002
                 ; 0000 0030         }
                 ; 0000 0031         else if(LCD_DelCnt_1ms > 100)
                 _0x94:
000465 e6e4      	LDI  R30,LOW(100)
000466 15e7      	CP   R30,R7
000467 f430      	BRSH _0x96
                 ; 0000 0032         {
                 ; 0000 0033             LCD_DelCnt_1ms = 0;
000468 2477      	CLR  R7
                 ; 0000 0034             return Sonar_range;
000469 01f9      	MOVW R30,R18
00046a 940e 0b58 	CALL __LOADLOCR4
00046c 940c 07ab 	JMP  _0x2060002
                 ; 0000 0035         }
                 ; 0000 0036 }
                 _0x96:
00046e 940e 0b58 	CALL __LOADLOCR4
000470 940c 07ab 	JMP  _0x2060002
                 ;
                 ;
                 ;void main(void)
                 ; 0000 003A {
                 _main:
                 ; 0000 003B     unsigned char res;
                 ; 0000 003C     char Sonar_Addr = 0xE0;
                 ; 0000 003D     unsigned int Sonar_range_1 = 0,Sonar_range_2 = 0,Sonar_range_3 = 0;
                 ; 0000 003E     char Message[40];
                 ; 0000 003F     int readCnt = 0;
                 ; 0000 0040     int t=0; //Å°ÆÐµå·Î ¹ÞÀº ¼ýÀÚ
                 ; 0000 0041     int count =0; //count º¯¼ö
                 ; 0000 0042     int finalnum=0; //FND¿¡ Ãâ·ÂÀ¸·Î ³Ö¾îÁÙ º¯¼ö
                 ; 0000 0043     int fnd[12]={0,};
                 ; 0000 0044     signed int angle=0; // ¼­ºê¸ðÅÍ °¢µµ·Î ³ÖÀ» º¯¼ö
                 ; 0000 0045     char STATE = START;
                 ; 0000 0046     char user_state[3] = {'X','X','X'};
                 ; 0000 0047     int i = 0;
                 ; 0000 0048     char user_pnumber[3][11]; //À¯Àú ºñ¹Ð¹øÈ£ ÀúÀå
                 ; 0000 0049     char check_pnumber[11]; //ºñ¹Ð¹øÈ£ ÀÏÄ¡È®ÀÎÀ»À§ÇÑ °ø°£
                 ; 0000 004A     char user_name; //1~3¹øÁß ¾î´ÀÁÂ¼® À¯Àú¸¦ °¡¸£Å°´ÂÁö ÀúÀå
                 ; 0000 004B     char num[3][11];
                 ; 0000 004C 
                 ; 0000 004D     DDRD |= 0x03;
000472 97ef      	SBIW R28,63
000473 97ef      	SBIW R28,63
000474 97a2      	SBIW R28,34
000475 e582      	LDI  R24,82
000476 e4ae      	LDI  R26,LOW(78)
000477 e0b0      	LDI  R27,HIGH(78)
000478 ebe6      	LDI  R30,LOW(_0x97*2)
000479 e0f0      	LDI  R31,HIGH(_0x97*2)
00047a 940e 0b5d 	CALL __INITLOCB
                 ;	res -> R17
                 ;	Sonar_Addr -> R16
                 ;	Sonar_range_1 -> R18,R19
                 ;	Sonar_range_2 -> R20,R21
                 ;	Sonar_range_3 -> Y+158
                 ;	Message -> Y+118
                 ;	readCnt -> Y+116
                 ;	t -> Y+114
                 ;	count -> Y+112
                 ;	finalnum -> Y+110
                 ;	fnd -> Y+86
                 ;	angle -> Y+84
                 ;	STATE -> Y+83
                 ;	user_state -> Y+80
                 ;	i -> Y+78
                 ;	user_pnumber -> Y+45
                 ;	check_pnumber -> Y+34
                 ;	user_name -> Y+33
                 ;	num -> Y+0
00047c ee00      	LDI  R16,224
                +
00047d e020     +LDI R18 , LOW ( 0 )
00047e e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00047f e040     +LDI R20 , LOW ( 0 )
000480 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
000481 b3e1      	IN   R30,0x11
000482 60e3      	ORI  R30,LOW(0x3)
000483 bbe1      	OUT  0x11,R30
                 ; 0000 004E     LCD_Init();
000484 dd0b      	RCALL _LCD_Init
                 ; 0000 004F     Timer0_Init();
000485 dfb8      	RCALL _Timer0_Init
                 ; 0000 0050     FND_PORT_Init(); // Æ÷Æ®µé ÀÔÃâ·Â ÃÊ±â ¼³Á¤
000486 de27      	RCALL _FND_PORT_Init
                 ; 0000 0051     Init_TWI();
000487 dd17      	RCALL _Init_TWI
                 ; 0000 0052     Init_Timer1();
000488 de3a      	RCALL _Init_Timer1
                 ; 0000 0053     delay_ms(1000);
000489 940e 098a 	CALL SUBOPT_0xE
                 ; 0000 0054     SREG |= 0x80;
00048b 9478      	BSET 7
                 ; 0000 0055 
                 ; 0000 0056     OCR1A =4710;
00048c 940e 0960 	CALL SUBOPT_0x7
                 ; 0000 0057     startRanging(Sonar_Addr);
00048e 930a      	ST   -Y,R16
00048f dddd      	RCALL _startRanging
                 ; 0000 0058     ti_Cnt_1ms = 0;
000490 2444      	CLR  R4
                 ; 0000 0059     LCD_DelCnt_1ms = 0;
000491 2477      	CLR  R7
                 ; 0000 005A 
                 ; 0000 005B 
                 ; 0000 005C 
                 ; 0000 005D     while(1)
                 _0x98:
                 ; 0000 005E     {
                 ; 0000 005F         if(ti_Cnt_1ms > 100)
000492 e6e4      	LDI  R30,LOW(100)
000493 15e4      	CP   R30,R4
000494 f4c0      	BRSH _0x9B
                 ; 0000 0060         {
                 ; 0000 0061             if (Sonar_Addr == 0xE0){
000495 3e00      	CPI  R16,224
000496 f429      	BRNE _0x9C
                 ; 0000 0062                 Sonar_Addr = 0xEC;
000497 ee0c      	LDI  R16,LOW(236)
                 ; 0000 0063                 startRanging(Sonar_Addr);
000498 940e 098d 	CALL SUBOPT_0xF
                 ; 0000 0064                 Sonar_range_1 = SRF_Run(Sonar_Addr);
00049a 019f      	MOVW R18,R30
                 ; 0000 0065             }
                 ; 0000 0066             else if (Sonar_Addr == 0xEC) {
00049b c00f      	RJMP _0x9D
                 _0x9C:
00049c 3e0c      	CPI  R16,236
00049d f429      	BRNE _0x9E
                 ; 0000 0067                 Sonar_Addr = 0xE2;
00049e ee02      	LDI  R16,LOW(226)
                 ; 0000 0068                 startRanging(Sonar_Addr);
00049f 940e 098d 	CALL SUBOPT_0xF
                 ; 0000 0069                 Sonar_range_2 = SRF_Run(Sonar_Addr);
0004a1 01af      	MOVW R20,R30
                 ; 0000 006A             }
                 ; 0000 006B             else{
0004a2 c008      	RJMP _0x9F
                 _0x9E:
                 ; 0000 006C                 Sonar_Addr = 0xE0;
0004a3 ee00      	LDI  R16,LOW(224)
                 ; 0000 006D                 startRanging(Sonar_Addr);
0004a4 940e 098d 	CALL SUBOPT_0xF
                 ; 0000 006E                 Sonar_range_3 = SRF_Run(Sonar_Addr);
                +
0004a6 01de     +MOVW R26 , R28
0004a7 56a2     +SUBI R26 , LOW ( - 158 )
0004a8 4fbf     +SBCI R27 , HIGH ( - 158 )
0004a9 93ed     +ST X + , R30
0004aa 93fc     +ST X , R31
                 	__PUTW1SX 158
                 ; 0000 006F             }
                 _0x9F:
                 _0x9D:
                 ; 0000 0070 
                 ; 0000 0071 
                 ; 0000 0072             /*   ÃÊÀ½ÆÄ È® ÀÎ *//*
                 ; 0000 0073             LCD_Clear();
                 ; 0000 0074             sprintf(Message, "%03dcm", Sonar_range_1);
                 ; 0000 0075             LCD_Pos(0,0);
                 ; 0000 0076             LCD_Str(Message);
                 ; 0000 0077 
                 ; 0000 0078             sprintf(Message, "%03dcm", Sonar_range_2);
                 ; 0000 0079             LCD_Pos(1,0);
                 ; 0000 007A             LCD_Str(Message);
                 ; 0000 007B 
                 ; 0000 007C             sprintf(Message, "%03dcm", Sonar_range_3);
                 ; 0000 007D             LCD_Pos(1,5);
                 ; 0000 007E             LCD_Str(Message); */
                 ; 0000 007F 
                 ; 0000 0080             LCD_DelCnt_1ms = 0;
0004ab 2477      	CLR  R7
                 ; 0000 0081             ti_Cnt_1ms = 0;
0004ac 2444      	CLR  R4
                 ; 0000 0082         }
                 ; 0000 0083         t= Changenum(KeyScan());
                 _0x9B:
0004ad de5b      	RCALL _KeyScan
0004ae 93ea      	ST   -Y,R30
0004af de9e      	RCALL _Changenum
0004b0 e0f0      	LDI  R31,0
                +
0004b1 01de     +MOVW R26 , R28
0004b2 58ae     +SUBI R26 , LOW ( - 114 )
0004b3 4fbf     +SBCI R27 , HIGH ( - 114 )
0004b4 93ed     +ST X + , R30
0004b5 93fc     +ST X , R31
                 	__PUTW1SX 114
                 ; 0000 0084         if(t<11 & t>0 ) //¼ýÀÚ°¡ ´­¸®¸é »õ·Î¿î °ªÀ» ÀúÀåÇÏµµ·Ï count°ª ¼³Á¤
0004b6 940e 0993 	CALL SUBOPT_0x10
0004b8 e0eb      	LDI  R30,LOW(11)
0004b9 e0f0      	LDI  R31,HIGH(11)
0004ba 940e 0ae7 	CALL __LTW12
0004bc 2e1e      	MOV  R1,R30
0004bd 940e 0993 	CALL SUBOPT_0x10
0004bf e0e0      	LDI  R30,LOW(0)
0004c0 e0f0      	LDI  R31,HIGH(0)
0004c1 940e 0aed 	CALL __GTW12
0004c3 21e1      	AND  R30,R1
0004c4 f029      	BREQ _0xA0
                 ; 0000 0085             {
                 ; 0000 0086                 count++;
0004c5 940e 099a 	CALL SUBOPT_0x11
                 ; 0000 0087                 delay_ms(50);
0004c7 940e 09a3 	CALL SUBOPT_0x12
                 ; 0000 0088             }
                 ; 0000 0089         else if(t==0 & zero_flag) //zero_flag°¡ ½ÇÇàµÈ °æ¿ì¿¡¸¸ 0À¸·Î ÀÔ·Â
0004c9 c028      	RJMP _0xA1
                 _0xA0:
0004ca 940e 0993 	CALL SUBOPT_0x10
0004cc e0e0      	LDI  R30,LOW(0)
0004cd e0f0      	LDI  R31,HIGH(0)
0004ce 940e 0ae1 	CALL __EQW12
0004d0 21e5      	AND  R30,R5
0004d1 f031      	BREQ _0xA2
                 ; 0000 008A             {
                 ; 0000 008B                 count++;
0004d2 940e 099a 	CALL SUBOPT_0x11
                 ; 0000 008C                 zero_flag =0; //°è¼Ó 0À¸·Î ÀÔ·ÂµÈ »óÅÂ°¡ ¾ÈµÇ°Ô zero_flag¸¦ ´Ù½Ã 0À¸·Î
0004d4 2455      	CLR  R5
                 ; 0000 008D                 delay_ms(50);
0004d5 940e 09a3 	CALL SUBOPT_0x12
                 ; 0000 008E             }
                 ; 0000 008F         else if(t==13) // FND Ãâ·Â¼ýÀÚ ¸®¼Â¹öÆ° ±â´É
0004d7 c01a      	RJMP _0xA3
                 _0xA2:
0004d8 940e 0993 	CALL SUBOPT_0x10
0004da 971d      	SBIW R26,13
0004db f481      	BRNE _0xA4
                 ; 0000 0090             {
                 ; 0000 0091                 fnd[0]=0,fnd[1]=0,fnd[2]=0,fnd[3]=0;
0004dc 940e 09a6 	CALL SUBOPT_0x13
0004de 940e 09ad 	CALL SUBOPT_0x14
0004e0 e0e0      	LDI  R30,LOW(0)
                +
0004e1 01de     +MOVW R26 , R28
0004e2 5aa6     +SUBI R26 , LOW ( - 90 )
0004e3 4fbf     +SBCI R27 , HIGH ( - 90 )
0004e4 93ed     +ST X + , R30
0004e5 93ec     +ST X , R30
                 	__CLRW1SX 90
                +
0004e6 01de     +MOVW R26 , R28
0004e7 5aa4     +SUBI R26 , LOW ( - 92 )
0004e8 4fbf     +SBCI R27 , HIGH ( - 92 )
0004e9 93ed     +ST X + , R30
0004ea 93ec     +ST X , R30
                 	__CLRW1SX 92
                 ; 0000 0092             }
                 ; 0000 0093         else if (t ==14)
0004eb c006      	RJMP _0xA5
                 _0xA4:
0004ec 940e 0993 	CALL SUBOPT_0x10
0004ee 971e      	SBIW R26,14
0004ef f411      	BRNE _0xA6
                 ; 0000 0094             {
                 ; 0000 0095                STATE = START;
0004f0 940e 09b4 	CALL SUBOPT_0x15
                 ; 0000 0096             }
                 ; 0000 0097 
                 ; 0000 0098         if((count%2) ==0){ //count°¡ Â¦¼öÀÏ¶§ µé¾î¿Â t°ªÀ» ÀúÀåÇÏ°í
                 _0xA6:
                 _0xA5:
                 _0xA3:
                 _0xA1:
                +
0004f2 01de     +MOVW R26 , R28
0004f3 59a0     +SUBI R26 , LOW ( - 112 )
0004f4 4fbf     +SBCI R27 , HIGH ( - 112 )
0004f5 900d     +LD R0 , X +
0004f6 91bc     +LD R27 , X
0004f7 2da0     +MOV R26 , R0
                 	__GETW2SX 112
0004f8 e0e2      	LDI  R30,LOW(2)
0004f9 e0f0      	LDI  R31,HIGH(2)
0004fa 940e 0b1b 	CALL __MODW21
0004fc 9730      	SBIW R30,0
0004fd f5e1      	BRNE _0xA7
                 ; 0000 0099                             //´Ù½Ã count¸¦ È¦¼ö·Î ¸¸µë
                 ; 0000 009A             for(i=11;i>0;i--) {
0004fe e0eb      	LDI  R30,LOW(11)
0004ff e0f0      	LDI  R31,HIGH(11)
                +
000500 01de     +MOVW R26 , R28
000501 5ba2     +SUBI R26 , LOW ( - 78 )
000502 4fbf     +SBCI R27 , HIGH ( - 78 )
000503 93ed     +ST X + , R30
000504 93fc     +ST X , R31
                 	__PUTW1SX 78
                 _0xA9:
000505 940e 09ba 	CALL SUBOPT_0x16
000507 940e 0b4b 	CALL __CPW02
000509 f52c      	BRGE _0xAA
                 ; 0000 009B                 fnd[i] = fnd[i-1];
00050a 940e 09c1 	CALL SUBOPT_0x17
00050c 01de      	MOVW R26,R28
00050d 5aaa      	SUBI R26,LOW(-(86))
00050e 4fbf      	SBCI R27,HIGH(-(86))
00050f 0fee      	LSL  R30
000510 1fff      	ROL  R31
000511 0fea      	ADD  R30,R26
000512 1ffb      	ADC  R31,R27
000513 01bf      	MOVW R22,R30
000514 940e 09c1 	CALL SUBOPT_0x17
000516 9731      	SBIW R30,1
000517 01de      	MOVW R26,R28
000518 5aaa      	SUBI R26,LOW(-(86))
000519 4fbf      	SBCI R27,HIGH(-(86))
00051a 0fee      	LSL  R30
00051b 1fff      	ROL  R31
00051c 0fae      	ADD  R26,R30
00051d 1fbf      	ADC  R27,R31
00051e 940e 0b37 	CALL __GETW1P
000520 01db      	MOVW R26,R22
000521 93ed      	ST   X+,R30
000522 93fc      	ST   X,R31
                 ; 0000 009C                 delay_us(10);
                +
000523 e381     +LDI R24 , LOW ( 49 )
                +__DELAY_USB_LOOP :
000524 958a     +DEC R24
000525 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 49
                 ; 0000 009D             }
000526 01de      	MOVW R26,R28
000527 5ba2      	SUBI R26,LOW(-(78))
000528 4fbf      	SBCI R27,HIGH(-(78))
000529 91ed      	LD   R30,X+
00052a 91fd      	LD   R31,X+
00052b 9731      	SBIW R30,1
00052c 93fe      	ST   -X,R31
00052d 93ee      	ST   -X,R30
00052e cfd6      	RJMP _0xA9
                 _0xAA:
                 ; 0000 009E             fnd[0] = t;
00052f 940e 09c8 	CALL SUBOPT_0x18
                +
000531 01de     +MOVW R26 , R28
000532 5aaa     +SUBI R26 , LOW ( - 86 )
000533 4fbf     +SBCI R27 , HIGH ( - 86 )
000534 93ed     +ST X + , R30
000535 93fc     +ST X , R31
                 	__PUTW1SX 86
                 ; 0000 009F             count++;
000536 940e 099a 	CALL SUBOPT_0x11
                 ; 0000 00A0             delay_ms(50);
000538 940e 09a3 	CALL SUBOPT_0x12
                 ; 0000 00A1         }
                 ; 0000 00A2         finalnum = 1000*fnd[3] + 100*fnd[2] + 10*fnd[1] + fnd[0];
                 _0xA7:
                +
00053a 01fe     +MOVW R30 , R28
00053b 5ae4     +SUBI R30 , LOW ( - 92 )
00053c 4fff     +SBCI R31 , HIGH ( - 92 )
00053d 9001     +LD R0 , Z +
00053e 81f0     +LD R31 , Z
00053f 2de0     +MOV R30 , R0
                 	__GETW1SX 92
000540 eea8      	LDI  R26,LOW(1000)
000541 e0b3      	LDI  R27,HIGH(1000)
000542 940e 0afb 	CALL __MULW12
000544 01bf      	MOVW R22,R30
                +
000545 01fe     +MOVW R30 , R28
000546 5ae6     +SUBI R30 , LOW ( - 90 )
000547 4fff     +SBCI R31 , HIGH ( - 90 )
000548 9001     +LD R0 , Z +
000549 81f0     +LD R31 , Z
00054a 2de0     +MOV R30 , R0
                 	__GETW1SX 90
00054b e6a4      	LDI  R26,LOW(100)
00054c e0b0      	LDI  R27,HIGH(100)
00054d 940e 0afb 	CALL __MULW12
                +
00054f 0f6e     +ADD R22 , R30
000550 1f7f     +ADC R23 , R31
                 	__ADDWRR 22,23,30,31
000551 940e 09cf 	CALL SUBOPT_0x19
000553 e0aa      	LDI  R26,LOW(10)
000554 e0b0      	LDI  R27,HIGH(10)
000555 940e 0afb 	CALL __MULW12
000557 0fe6      	ADD  R30,R22
000558 1ff7      	ADC  R31,R23
000559 940e 09d6 	CALL SUBOPT_0x1A
00055b 0fea      	ADD  R30,R26
00055c 1ffb      	ADC  R31,R27
                +
00055d 01de     +MOVW R26 , R28
00055e 59a2     +SUBI R26 , LOW ( - 110 )
00055f 4fbf     +SBCI R27 , HIGH ( - 110 )
000560 93ed     +ST X + , R30
000561 93fc     +ST X , R31
                 	__PUTW1SX 110
                 ; 0000 00A3         OUTFND(finalnum); //FND Ãâ·Â
000562 93fa      	ST   -Y,R31
000563 93ea      	ST   -Y,R30
000564 de41      	RCALL _OUTFND
                 ; 0000 00A4         buzzer_play_function(t); //¼ýÀÚ¿¡ ¸Â´Â À½ Ãâ·Â
000565 940e 09c8 	CALL SUBOPT_0x18
000567 93fa      	ST   -Y,R31
000568 93ea      	ST   -Y,R30
000569 de80      	RCALL _buzzer_play_function
                 ; 0000 00A5 
                 ; 0000 00A6         switch (STATE) {
                +
00056a 01fe     +MOVW R30 , R28
00056b 5aed     +SUBI R30 , LOW ( - 83 )
00056c 4fff     +SBCI R31 , HIGH ( - 83 )
00056d 81e0     +LD R30 , Z
                 	__GETB1SX 83
00056e e0f0      	LDI  R31,0
                 ; 0000 00A7 
                 ; 0000 00A8             case NONE: //±âº» »óÅÂ
00056f 9730      	SBIW R30,0
000570 f011      	BREQ PC+3
000571 940c 05bb 	JMP _0xAE
                 ; 0000 00A9                 if (fnd[1] <=3 && fnd[1] >0 && fnd[0] == 10) {
000573 940e 09dd 	CALL SUBOPT_0x1B
000575 9714      	SBIW R26,4
000576 f44c      	BRGE _0xB0
000577 940e 09dd 	CALL SUBOPT_0x1B
000579 940e 0b4b 	CALL __CPW02
00057b f424      	BRGE _0xB0
00057c 940e 09d6 	CALL SUBOPT_0x1A
00057e 971a      	SBIW R26,10
00057f f009      	BREQ _0xB1
                 _0xB0:
000580 c007      	RJMP _0xAF
                 _0xB1:
                 ; 0000 00AA                     user_name = fnd[1]-1;
000581 940e 09cf 	CALL SUBOPT_0x19
000583 9731      	SBIW R30,1
000584 a3e9      	STD  Y+33,R30
                 ; 0000 00AB                     STATE=INPUT_PHONE_INIT ;
000585 e0e3      	LDI  R30,LOW(3)
000586 940e 09e4 	CALL SUBOPT_0x1C
                 ; 0000 00AC                 }
                 ; 0000 00AD                 if (fnd[1]==4 && fnd[0] == 10) { //Å»Ãâ ¸ðµå
                 _0xAF:
000588 940e 09dd 	CALL SUBOPT_0x1B
00058a 9714      	SBIW R26,4
00058b f421      	BRNE _0xB3
00058c 940e 09d6 	CALL SUBOPT_0x1A
00058e 971a      	SBIW R26,10
00058f f009      	BREQ _0xB4
                 _0xB3:
000590 c029      	RJMP _0xB2
                 _0xB4:
                 ; 0000 00AE                     LCD_Clear();
000591 940e 09e9 	CALL SUBOPT_0x1D
                 ; 0000 00AF                     LCD_Pos(0,0);
                 ; 0000 00B0                     LCD_Str("Choose Seat");
                +
000593 e1e5     +LDI R30 , LOW ( _0xB5 + ( 0 ) )
000594 e0f5     +LDI R31 , HIGH ( _0xB5 + ( 0 ) )
                 	__POINTW1MN _0xB5,0
000595 940e 09f0 	CALL SUBOPT_0x1E
                 ; 0000 00B1                     LCD_Pos(1,0);
000597 940e 09f4 	CALL SUBOPT_0x1F
                 ; 0000 00B2                     if (user_state[0] == 'O') LCD_Str("1  ");
                +
000599 01de     +MOVW R26 , R28
00059a 5ba0     +SUBI R26 , LOW ( - 80 )
00059b 4fbf     +SBCI R27 , HIGH ( - 80 )
00059c 91ac     +LD R26 , X
                 	__GETB2SX 80
00059d 34af      	CPI  R26,LOW(0x4F)
00059e f421      	BRNE _0xB6
                +
00059f e2e1     +LDI R30 , LOW ( _0xB5 + ( 12 ) )
0005a0 e0f5     +LDI R31 , HIGH ( _0xB5 + ( 12 ) )
                 	__POINTW1MN _0xB5,12
0005a1 940e 09f0 	CALL SUBOPT_0x1E
                 ; 0000 00B3                     if (user_state[1] == 'O') LCD_Str("2  ");
                 _0xB6:
                +
0005a3 01de     +MOVW R26 , R28
0005a4 5aaf     +SUBI R26 , LOW ( - 81 )
0005a5 4fbf     +SBCI R27 , HIGH ( - 81 )
0005a6 91ac     +LD R26 , X
                 	__GETB2SX 81
0005a7 34af      	CPI  R26,LOW(0x4F)
0005a8 f421      	BRNE _0xB7
                +
0005a9 e2e5     +LDI R30 , LOW ( _0xB5 + ( 16 ) )
0005aa e0f5     +LDI R31 , HIGH ( _0xB5 + ( 16 ) )
                 	__POINTW1MN _0xB5,16
0005ab 940e 09f0 	CALL SUBOPT_0x1E
                 ; 0000 00B4                     if (user_state[2] == 'O') LCD_Str("3  ");
                 _0xB7:
                +
0005ad 01de     +MOVW R26 , R28
0005ae 5aae     +SUBI R26 , LOW ( - 82 )
0005af 4fbf     +SBCI R27 , HIGH ( - 82 )
0005b0 91ac     +LD R26 , X
                 	__GETB2SX 82
0005b1 34af      	CPI  R26,LOW(0x4F)
0005b2 f421      	BRNE _0xB8
                +
0005b3 e2e9     +LDI R30 , LOW ( _0xB5 + ( 20 ) )
0005b4 e0f5     +LDI R31 , HIGH ( _0xB5 + ( 20 ) )
                 	__POINTW1MN _0xB5,20
0005b5 940e 09f0 	CALL SUBOPT_0x1E
                 ; 0000 00B5                     STATE=EXIT_CHOOSE ;
                 _0xB8:
0005b7 e0e6      	LDI  R30,LOW(6)
0005b8 940e 09e4 	CALL SUBOPT_0x1C
                 ; 0000 00B6                 }
                 ; 0000 00B7                 break;
                 _0xB2:
0005ba c1b8      	RJMP _0xAD
                 ; 0000 00B8 
                 ; 0000 00B9             case START: //¾÷·Îµå
                 _0xAE:
0005bb 30e1      	CPI  R30,LOW(0x1)
0005bc e0a0      	LDI  R26,HIGH(0x1)
0005bd 07fa      	CPC  R31,R26
0005be f581      	BRNE _0xB9
                 ; 0000 00BA                 LCD_Pos(0,0);
0005bf e0e0      	LDI  R30,LOW(0)
0005c0 93ea      	ST   -Y,R30
0005c1 93ea      	ST   -Y,R30
0005c2 dba8      	RCALL _LCD_Pos
                 ; 0000 00BB                 LCD_Str("StudyRoom  4:OUT");
                +
0005c3 e2ed     +LDI R30 , LOW ( _0xB5 + ( 24 ) )
0005c4 e0f5     +LDI R31 , HIGH ( _0xB5 + ( 24 ) )
                 	__POINTW1MN _0xB5,24
0005c5 940e 09f0 	CALL SUBOPT_0x1E
                 ; 0000 00BC                 sprintf(Message, "1:%c 2:%c 3:%c", user_state[0],user_state[1],user_state[2]);
0005c7 01fe      	MOVW R30,R28
0005c8 58ea      	SUBI R30,LOW(-(118))
0005c9 4fff      	SBCI R31,HIGH(-(118))
0005ca 93fa      	ST   -Y,R31
0005cb 93ea      	ST   -Y,R30
                +
0005cc e4e8     +LDI R30 , LOW ( 2 * _0x0 + ( 62 ) )
0005cd e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 62 ) )
                 	__POINTW1FN _0x0,62
0005ce 93fa      	ST   -Y,R31
0005cf 93ea      	ST   -Y,R30
                +
0005d0 01fe     +MOVW R30 , R28
0005d1 5aec     +SUBI R30 , LOW ( - 84 )
0005d2 4fff     +SBCI R31 , HIGH ( - 84 )
0005d3 81e0     +LD R30 , Z
                 	__GETB1SX 84
0005d4 940e 09fa 	CALL SUBOPT_0x20
                +
0005d6 01fe     +MOVW R30 , R28
0005d7 5ae7     +SUBI R30 , LOW ( - 89 )
0005d8 4fff     +SBCI R31 , HIGH ( - 89 )
0005d9 81e0     +LD R30 , Z
                 	__GETB1SX 89
0005da 940e 09fa 	CALL SUBOPT_0x20
                +
0005dc 01fe     +MOVW R30 , R28
0005dd 5ae2     +SUBI R30 , LOW ( - 94 )
0005de 4fff     +SBCI R31 , HIGH ( - 94 )
0005df 81e0     +LD R30 , Z
                 	__GETB1SX 94
0005e0 940e 09fa 	CALL SUBOPT_0x20
0005e2 e08c      	LDI  R24,12
0005e3 940e 08e2 	CALL _sprintf
0005e5 9660      	ADIW R28,16
                 ; 0000 00BD                 LCD_Pos(1,0);
0005e6 940e 09f4 	CALL SUBOPT_0x1F
                 ; 0000 00BE                 LCD_Str(Message);
0005e8 01fe      	MOVW R30,R28
0005e9 58ea      	SUBI R30,LOW(-(118))
0005ea 4fff      	SBCI R31,HIGH(-(118))
0005eb 940e 09f0 	CALL SUBOPT_0x1E
                 ; 0000 00BF                 STATE = NONE;
0005ed e0e0      	LDI  R30,LOW(0)
0005ee c180      	RJMP _0xE6
                 ; 0000 00C0                 break;
                 ; 0000 00C1 
                 ; 0000 00C2             case INPUT_PHONE: //ÀÔÀå : Æù¹øÈ£ ÀÔ·Â
                 _0xB9:
0005ef 30e2      	CPI  R30,LOW(0x2)
0005f0 e0a0      	LDI  R26,HIGH(0x2)
0005f1 07fa      	CPC  R31,R26
0005f2 f5d9      	BRNE _0xBA
                 ; 0000 00C3 
                 ; 0000 00C4                 if (fnd[0] == 10){
0005f3 940e 09d6 	CALL SUBOPT_0x1A
0005f5 971a      	SBIW R26,10
0005f6 f591      	BRNE _0xBB
                 ; 0000 00C5                     sprintf(user_pnumber[user_name], "%d%d%d%d%d%d%d%d%d%d%d", fnd[11],fnd[10],fnd[9],fnd[8],fnd[7],fnd[6],fnd[5],fnd[4],fnd[3],fnd[2],fnd[1]);
0005f7 940e 0a00 	CALL SUBOPT_0x21
0005f9 940e 0a05 	CALL SUBOPT_0x22
0005fb 940e 0a0a 	CALL SUBOPT_0x23
                 ; 0000 00C6                     user_state[user_name] ='X';
0005fd 940e 0a7e 	CALL SUBOPT_0x24
0005ff e5e8      	LDI  R30,LOW(88)
000600 93ec      	ST   X,R30
                 ; 0000 00C7                     for(i=0;i<11;i++){
000601 e0e0      	LDI  R30,LOW(0)
                +
000602 01de     +MOVW R26 , R28
000603 5ba2     +SUBI R26 , LOW ( - 78 )
000604 4fbf     +SBCI R27 , HIGH ( - 78 )
000605 93ed     +ST X + , R30
000606 93ec     +ST X , R30
                 	__CLRW1SX 78
                 _0xBD:
000607 940e 09ba 	CALL SUBOPT_0x16
000609 971b      	SBIW R26,11
00060a f4dc      	BRGE _0xBE
                 ; 0000 00C8                         num[user_name][i] = user_pnumber[user_name][i];
00060b 940e 0a00 	CALL SUBOPT_0x21
00060d 01cf      	MOVW R24,R30
00060e 01de      	MOVW R26,R28
00060f 0fea      	ADD  R30,R26
000610 1ffb      	ADC  R31,R27
000611 940e 09ba 	CALL SUBOPT_0x16
000613 0fea      	ADD  R30,R26
000614 1ffb      	ADC  R31,R27
000615 01bf      	MOVW R22,R30
000616 01fc      	MOVW R30,R24
000617 940e 0a05 	CALL SUBOPT_0x22
000619 940e 09ba 	CALL SUBOPT_0x16
00061b 0fae      	ADD  R26,R30
00061c 1fbf      	ADC  R27,R31
00061d 91ec      	LD   R30,X
00061e 01db      	MOVW R26,R22
00061f 93ec      	ST   X,R30
                 ; 0000 00C9                     }
000620 01de      	MOVW R26,R28
000621 5ba2      	SUBI R26,LOW(-(78))
000622 4fbf      	SBCI R27,HIGH(-(78))
000623 940e 0a86 	CALL SUBOPT_0x25
000625 cfe1      	RJMP _0xBD
                 _0xBE:
                 ; 0000 00CA                     STATE = CHECK_PNUM_INIT;
000626 e0e5      	LDI  R30,LOW(5)
000627 940e 09e4 	CALL SUBOPT_0x1C
                 ; 0000 00CB                 }
                 ; 0000 00CC                 delay_ms(10);
                 _0xBB:
000629 e0ea      	LDI  R30,LOW(10)
00062a e0f0      	LDI  R31,HIGH(10)
00062b 940e 0943 	CALL SUBOPT_0x2
                 ; 0000 00CD                 break;
00062d c145      	RJMP _0xAD
                 ; 0000 00CE 
                 ; 0000 00CF             case INPUT_PHONE_INIT:
                 _0xBA:
00062e 30e3      	CPI  R30,LOW(0x3)
00062f e0a0      	LDI  R26,HIGH(0x3)
000630 07fa      	CPC  R31,R26
000631 f4d9      	BRNE _0xBF
                 ; 0000 00D0                 fnd[0]=0;
000632 940e 09a6 	CALL SUBOPT_0x13
                 ; 0000 00D1                 LCD_Clear();
000634 940e 09e9 	CALL SUBOPT_0x1D
                 ; 0000 00D2                 LCD_Pos(0,0);
                 ; 0000 00D3                 LCD_Str("Input PhoneNum") ;
                +
000636 e3ee     +LDI R30 , LOW ( _0xB5 + ( 41 ) )
000637 e0f5     +LDI R31 , HIGH ( _0xB5 + ( 41 ) )
                 	__POINTW1MN _0xB5,41
000638 940e 09f0 	CALL SUBOPT_0x1E
                 ; 0000 00D4                 STATE = INPUT_PHONE;
00063a e0e2      	LDI  R30,LOW(2)
00063b 940e 09e4 	CALL SUBOPT_0x1C
                 ; 0000 00D5 
                 ; 0000 00D6                 if (user_state[user_name] == 'O'){
00063d 940e 0a7e 	CALL SUBOPT_0x24
00063f 91ac      	LD   R26,X
000640 34af      	CPI  R26,LOW(0x4F)
000641 f451      	BRNE _0xC0
                 ; 0000 00D7                     LCD_Clear();
000642 940e 09e9 	CALL SUBOPT_0x1D
                 ; 0000 00D8                     LCD_Pos(0,0);
                 ; 0000 00D9                     LCD_Str("Someone Used");
                +
000644 e4ed     +LDI R30 , LOW ( _0xB5 + ( 56 ) )
000645 e0f5     +LDI R31 , HIGH ( _0xB5 + ( 56 ) )
                 	__POINTW1MN _0xB5,56
000646 940e 09f0 	CALL SUBOPT_0x1E
                 ; 0000 00DA                     delay_ms(1000);
000648 940e 098a 	CALL SUBOPT_0xE
                 ; 0000 00DB                     STATE = START;
00064a 940e 09b4 	CALL SUBOPT_0x15
                 ; 0000 00DC                 }
                 ; 0000 00DD 
                 ; 0000 00DE                 break;
                 _0xC0:
00064c c126      	RJMP _0xAD
                 ; 0000 00DF             case CHECK_PNUM:
                 _0xBF:
00064d 30e4      	CPI  R30,LOW(0x4)
00064e e0a0      	LDI  R26,HIGH(0x4)
00064f 07fa      	CPC  R31,R26
000650 f509      	BRNE _0xC1
                 ; 0000 00E0 
                 ; 0000 00E1                 if (fnd[1] == 1 && fnd[0] == 10){
000651 940e 09dd 	CALL SUBOPT_0x1B
000653 9711      	SBIW R26,1
000654 f421      	BRNE _0xC3
000655 940e 09d6 	CALL SUBOPT_0x1A
000657 971a      	SBIW R26,10
000658 f009      	BREQ _0xC4
                 _0xC3:
000659 c00b      	RJMP _0xC2
                 _0xC4:
                 ; 0000 00E2                     user_state[user_name] = 'O';
00065a 940e 0a7e 	CALL SUBOPT_0x24
00065c e4ef      	LDI  R30,LOW(79)
00065d 93ec      	ST   X,R30
                 ; 0000 00E3                     /*OCR1A = 3000;
                 ; 0000 00E4                     LCD_Clear();
                 ; 0000 00E5                     LCD_Pos(0,0);
                 ; 0000 00E6                     LCD_Str("Door Open") ;
                 ; 0000 00E7                     delay_ms(5000);
                 ; 0000 00E8                     OCR1A = 4710;*/
                 ; 0000 00E9                     STATE = START;
00065e 940e 09b4 	CALL SUBOPT_0x15
                 ; 0000 00EA                     fnd[0]=0;
000660 940e 09a6 	CALL SUBOPT_0x13
                 ; 0000 00EB                     user_name = 4;
000662 e0e4      	LDI  R30,LOW(4)
000663 a3e9      	STD  Y+33,R30
                 ; 0000 00EC                 }
                 ; 0000 00ED                 else if (fnd[1] == 2 && fnd[0] == 10) STATE = INPUT_PHONE_INIT;
000664 c00c      	RJMP _0xC5
                 _0xC2:
000665 940e 09dd 	CALL SUBOPT_0x1B
000667 9712      	SBIW R26,2
000668 f421      	BRNE _0xC7
000669 940e 09d6 	CALL SUBOPT_0x1A
00066b 971a      	SBIW R26,10
00066c f009      	BREQ _0xC8
                 _0xC7:
00066d c003      	RJMP _0xC6
                 _0xC8:
00066e e0e3      	LDI  R30,LOW(3)
00066f 940e 09e4 	CALL SUBOPT_0x1C
                 ; 0000 00EE             break;
                 _0xC6:
                 _0xC5:
000671 c101      	RJMP _0xAD
                 ; 0000 00EF             case CHECK_PNUM_INIT:
                 _0xC1:
000672 30e5      	CPI  R30,LOW(0x5)
000673 e0a0      	LDI  R26,HIGH(0x5)
000674 07fa      	CPC  R31,R26
000675 f4a1      	BRNE _0xC9
                 ; 0000 00F0                 fnd[0]=0;
000676 940e 09a6 	CALL SUBOPT_0x13
                 ; 0000 00F1                 LCD_Clear();
000678 940e 09e9 	CALL SUBOPT_0x1D
                 ; 0000 00F2                 LCD_Pos(0,0);
                 ; 0000 00F3                 LCD_Str(user_pnumber[user_name]);
00067a 940e 0a00 	CALL SUBOPT_0x21
00067c 940e 0a05 	CALL SUBOPT_0x22
00067e 940e 09f0 	CALL SUBOPT_0x1E
                 ; 0000 00F4                 LCD_Pos(1,0);
000680 940e 09f4 	CALL SUBOPT_0x1F
                 ; 0000 00F5                 LCD_Str("1:Yes  2:No");
                +
000682 e5ea     +LDI R30 , LOW ( _0xB5 + ( 69 ) )
000683 e0f5     +LDI R31 , HIGH ( _0xB5 + ( 69 ) )
                 	__POINTW1MN _0xB5,69
000684 940e 09f0 	CALL SUBOPT_0x1E
                 ; 0000 00F6                 fnd[1] = 0;
000686 940e 09ad 	CALL SUBOPT_0x14
                 ; 0000 00F7                 STATE = CHECK_PNUM;
000688 e0e4      	LDI  R30,LOW(4)
000689 c0e5      	RJMP _0xE6
                 ; 0000 00F8             break;
                 ; 0000 00F9 
                 ; 0000 00FA             case EXIT_CHOOSE:
                 _0xC9:
00068a 30e6      	CPI  R30,LOW(0x6)
00068b e0a0      	LDI  R26,HIGH(0x6)
00068c 07fa      	CPC  R31,R26
00068d f539      	BRNE _0xCA
                 ; 0000 00FB 
                 ; 0000 00FC                 user_name = fnd[1]-1;
00068e 940e 09cf 	CALL SUBOPT_0x19
000690 9731      	SBIW R30,1
000691 a3e9      	STD  Y+33,R30
                 ; 0000 00FD                 if (fnd[1] <=3 && fnd[1] >0 && fnd[0] == 10){
000692 940e 09dd 	CALL SUBOPT_0x1B
000694 9714      	SBIW R26,4
000695 f44c      	BRGE _0xCC
000696 940e 09dd 	CALL SUBOPT_0x1B
000698 940e 0b4b 	CALL __CPW02
00069a f424      	BRGE _0xCC
00069b 940e 09d6 	CALL SUBOPT_0x1A
00069d 971a      	SBIW R26,10
00069e f009      	BREQ _0xCD
                 _0xCC:
00069f c014      	RJMP _0xCB
                 _0xCD:
                 ; 0000 00FE 
                 ; 0000 00FF                     STATE = INPUT_PHONE_OUT_INIT;
0006a0 e0ea      	LDI  R30,LOW(10)
0006a1 940e 09e4 	CALL SUBOPT_0x1C
                 ; 0000 0100 
                 ; 0000 0101                     if (user_state[user_name] == 'X'){
0006a3 940e 0a7e 	CALL SUBOPT_0x24
0006a5 91ac      	LD   R26,X
0006a6 35a8      	CPI  R26,LOW(0x58)
0006a7 f461      	BRNE _0xCE
                 ; 0000 0102                         LCD_Clear();
0006a8 940e 09e9 	CALL SUBOPT_0x1D
                 ; 0000 0103                         LCD_Pos(0,0);
                 ; 0000 0104                         LCD_Str("Empty Seat");
                +
0006aa e6e6     +LDI R30 , LOW ( _0xB5 + ( 81 ) )
0006ab e0f5     +LDI R31 , HIGH ( _0xB5 + ( 81 ) )
                 	__POINTW1MN _0xB5,81
0006ac 940e 09f0 	CALL SUBOPT_0x1E
                 ; 0000 0105                         delay_ms(1000);
0006ae 940e 098a 	CALL SUBOPT_0xE
                 ; 0000 0106                         fnd[0]=0;
0006b0 940e 09a6 	CALL SUBOPT_0x13
                 ; 0000 0107                         STATE = START;
0006b2 940e 09b4 	CALL SUBOPT_0x15
                 ; 0000 0108                     }
                 ; 0000 0109                 }
                 _0xCE:
                 ; 0000 010A 
                 ; 0000 010B 
                 ; 0000 010C 
                 ; 0000 010D             break;
                 _0xCB:
0006b4 c0be      	RJMP _0xAD
                 ; 0000 010E              case CHECK_PNUM_OUT_INIT:
                 _0xCA:
0006b5 30e8      	CPI  R30,LOW(0x8)
0006b6 e0a0      	LDI  R26,HIGH(0x8)
0006b7 07fa      	CPC  R31,R26
0006b8 f491      	BRNE _0xCF
                 ; 0000 010F                  fnd[0]=0;
0006b9 940e 09a6 	CALL SUBOPT_0x13
                 ; 0000 0110                  fnd[1] = 0;
0006bb 940e 09ad 	CALL SUBOPT_0x14
                 ; 0000 0111                  LCD_Clear();
0006bd 940e 09e9 	CALL SUBOPT_0x1D
                 ; 0000 0112                  LCD_Pos(0,0);
                 ; 0000 0113                  LCD_Str(check_pnumber);
0006bf 01fe      	MOVW R30,R28
0006c0 96b2      	ADIW R30,34
0006c1 940e 09f0 	CALL SUBOPT_0x1E
                 ; 0000 0114                  LCD_Pos(1,0);
0006c3 940e 09f4 	CALL SUBOPT_0x1F
                 ; 0000 0115 
                 ; 0000 0116                  LCD_Str("1:Yes  2:No");
                +
0006c5 e7e1     +LDI R30 , LOW ( _0xB5 + ( 92 ) )
0006c6 e0f5     +LDI R31 , HIGH ( _0xB5 + ( 92 ) )
                 	__POINTW1MN _0xB5,92
0006c7 940e 09f0 	CALL SUBOPT_0x1E
                 ; 0000 0117                  STATE = CHECK_PNUM_OUT;
0006c9 e0e7      	LDI  R30,LOW(7)
0006ca c0a4      	RJMP _0xE6
                 ; 0000 0118 
                 ; 0000 0119 
                 ; 0000 011A             break;
                 ; 0000 011B             case CHECK_PNUM_OUT:
                 _0xCF:
0006cb 30e7      	CPI  R30,LOW(0x7)
0006cc e0a0      	LDI  R26,HIGH(0x7)
0006cd 07fa      	CPC  R31,R26
0006ce f011      	BREQ PC+3
0006cf 940c 074e 	JMP _0xD0
                 ; 0000 011C 
                 ; 0000 011D                  if (fnd[1] == 1 && fnd[0] == 10){
0006d1 940e 09dd 	CALL SUBOPT_0x1B
0006d3 9711      	SBIW R26,1
0006d4 f421      	BRNE _0xD2
0006d5 940e 09d6 	CALL SUBOPT_0x1A
0006d7 971a      	SBIW R26,10
0006d8 f009      	BREQ _0xD3
                 _0xD2:
0006d9 c067      	RJMP _0xD1
                 _0xD3:
                 ; 0000 011E                    int cnt=0;
                 ; 0000 011F                    LCD_Clear();
0006da 9722      	SBIW R28,2
0006db e0e0      	LDI  R30,LOW(0)
0006dc 83e8      	ST   Y,R30
0006dd 83e9      	STD  Y+1,R30
                 ;	Sonar_range_3 -> Y+160
                 ;	Message -> Y+120
                 ;	readCnt -> Y+118
                 ;	t -> Y+116
                 ;	count -> Y+114
                 ;	finalnum -> Y+112
                 ;	fnd -> Y+88
                 ;	angle -> Y+86
                 ;	STATE -> Y+85
                 ;	user_state -> Y+82
                 ;	i -> Y+80
                 ;	user_pnumber -> Y+47
                 ;	check_pnumber -> Y+36
                 ;	user_name -> Y+35
                 ;	num -> Y+2
                 ;	cnt -> Y+0
0006de 940e 09e9 	CALL SUBOPT_0x1D
                 ; 0000 0120                    LCD_Pos(0,0);
                 ; 0000 0121                    for(i=0;i<11;i++){
0006e0 e0e0      	LDI  R30,LOW(0)
                +
0006e1 01de     +MOVW R26 , R28
0006e2 5ba0     +SUBI R26 , LOW ( - 80 )
0006e3 4fbf     +SBCI R27 , HIGH ( - 80 )
0006e4 93ed     +ST X + , R30
0006e5 93ec     +ST X , R30
                 	__CLRW1SX 80
                 _0xD5:
0006e6 940e 0a8c 	CALL SUBOPT_0x26
0006e8 971b      	SBIW R26,11
0006e9 f52c      	BRGE _0xD6
                 ; 0000 0122                       if(num[user_name][i] == check_pnumber[i] ) cnt ++;  }
0006ea a1eb      	LDD  R30,Y+35
0006eb e0ab      	LDI  R26,LOW(11)
0006ec 9fea      	MUL  R30,R26
0006ed 01f0      	MOVW R30,R0
0006ee 01de      	MOVW R26,R28
0006ef 9612      	ADIW R26,2
0006f0 0fea      	ADD  R30,R26
0006f1 1ffb      	ADC  R31,R27
0006f2 940e 0a8c 	CALL SUBOPT_0x26
0006f4 0fae      	ADD  R26,R30
0006f5 1fbf      	ADC  R27,R31
0006f6 901c      	LD   R1,X
                +
0006f7 01fe     +MOVW R30 , R28
0006f8 5be0     +SUBI R30 , LOW ( - 80 )
0006f9 4fff     +SBCI R31 , HIGH ( - 80 )
0006fa 9001     +LD R0 , Z +
0006fb 81f0     +LD R31 , Z
0006fc 2de0     +MOV R30 , R0
                 	__GETW1SX 80
0006fd 01de      	MOVW R26,R28
0006fe 9694      	ADIW R26,36
0006ff 0fae      	ADD  R26,R30
000700 1fbf      	ADC  R27,R31
000701 91ec      	LD   R30,X
000702 15e1      	CP   R30,R1
000703 f429      	BRNE _0xD7
000704 81e8      	LD   R30,Y
000705 81f9      	LDD  R31,Y+1
000706 9631      	ADIW R30,1
000707 83e8      	ST   Y,R30
000708 83f9      	STD  Y+1,R31
                 _0xD7:
000709 01de      	MOVW R26,R28
00070a 5ba0      	SUBI R26,LOW(-(80))
00070b 4fbf      	SBCI R27,HIGH(-(80))
00070c 940e 0a86 	CALL SUBOPT_0x25
00070e cfd7      	RJMP _0xD5
                 _0xD6:
                 ; 0000 0123 
                 ; 0000 0124                     if (cnt == 11 ){
00070f 81a8      	LD   R26,Y
000710 81b9      	LDD  R27,Y+1
000711 971b      	SBIW R26,11
000712 f561      	BRNE _0xD8
                 ; 0000 0125                        LCD_Clear();
000713 940e 09e9 	CALL SUBOPT_0x1D
                 ; 0000 0126                        LCD_Pos(0,0);
                 ; 0000 0127                        LCD_Str("User Check") ;
                +
000715 e7ed     +LDI R30 , LOW ( _0xB5 + ( 104 ) )
000716 e0f5     +LDI R31 , HIGH ( _0xB5 + ( 104 ) )
                 	__POINTW1MN _0xB5,104
000717 940e 09f0 	CALL SUBOPT_0x1E
                 ; 0000 0128                        LCD_Pos(1,0);
000719 940e 09f4 	CALL SUBOPT_0x1F
                 ; 0000 0129                        LCD_Str("Good Bye") ;
                +
00071b e8e8     +LDI R30 , LOW ( _0xB5 + ( 115 ) )
00071c e0f5     +LDI R31 , HIGH ( _0xB5 + ( 115 ) )
                 	__POINTW1MN _0xB5,115
00071d 940e 09f0 	CALL SUBOPT_0x1E
                 ; 0000 012A                        OCR1A = 3000;
00071f ebe8      	LDI  R30,LOW(3000)
000720 e0fb      	LDI  R31,HIGH(3000)
000721 bdfb      	OUT  0x2A+1,R31
000722 bdea      	OUT  0x2A,R30
                 ; 0000 012B                         LCD_Clear();
000723 940e 09e9 	CALL SUBOPT_0x1D
                 ; 0000 012C                         LCD_Pos(0,0);
                 ; 0000 012D                         LCD_Str("Door Open") ;
                +
000725 e9e1     +LDI R30 , LOW ( _0xB5 + ( 124 ) )
000726 e0f5     +LDI R31 , HIGH ( _0xB5 + ( 124 ) )
                 	__POINTW1MN _0xB5,124
000727 940e 09f0 	CALL SUBOPT_0x1E
                 ; 0000 012E                         delay_ms(5000);
000729 e8e8      	LDI  R30,LOW(5000)
00072a e1f3      	LDI  R31,HIGH(5000)
00072b 940e 0943 	CALL SUBOPT_0x2
                 ; 0000 012F                         OCR1A = 4710;
00072d 940e 0960 	CALL SUBOPT_0x7
                 ; 0000 0130                       user_state[user_name] ='X';
00072f a1eb      	LDD  R30,Y+35
000730 e0f0      	LDI  R31,0
000731 01de      	MOVW R26,R28
000732 5aae      	SUBI R26,LOW(-(82))
000733 4fbf      	SBCI R27,HIGH(-(82))
000734 0fae      	ADD  R26,R30
000735 1fbf      	ADC  R27,R31
000736 e5e8      	LDI  R30,LOW(88)
000737 93ec      	ST   X,R30
                 ; 0000 0131                       STATE = START;
000738 e0e1      	LDI  R30,LOW(1)
                +
000739 01de     +MOVW R26 , R28
00073a 5aab     +SUBI R26 , LOW ( - 85 )
00073b 4fbf     +SBCI R27 , HIGH ( - 85 )
00073c 93ec     +ST X , R30
                 	__PUTB1SX 85
                 ; 0000 0132                       fnd[0] = 0;
00073d 940e 09ad 	CALL SUBOPT_0x14
                 ; 0000 0133                     }
                 ; 0000 0134                 }
                 _0xD8:
00073f 9622      	ADIW R28,2
                 ; 0000 0135                 else if (fnd[1] == 2 && fnd[0] == 10) STATE = INPUT_PHONE_OUT_INIT;
000740 c00c      	RJMP _0xD9
                 _0xD1:
000741 940e 09dd 	CALL SUBOPT_0x1B
000743 9712      	SBIW R26,2
000744 f421      	BRNE _0xDB
000745 940e 09d6 	CALL SUBOPT_0x1A
000747 971a      	SBIW R26,10
000748 f009      	BREQ _0xDC
                 _0xDB:
000749 c003      	RJMP _0xDA
                 _0xDC:
00074a e0ea      	LDI  R30,LOW(10)
00074b 940e 09e4 	CALL SUBOPT_0x1C
                 ; 0000 0136 
                 ; 0000 0137 
                 ; 0000 0138             break;
                 _0xDA:
                 _0xD9:
00074d c025      	RJMP _0xAD
                 ; 0000 0139             case INPUT_PHONE_OUT: //ÀÔÀå : Æù¹øÈ£ ÀÔ·Â
                 _0xD0:
00074e 30e9      	CPI  R30,LOW(0x9)
00074f e0a0      	LDI  R26,HIGH(0x9)
000750 07fa      	CPC  R31,R26
000751 f481      	BRNE _0xDD
                 ; 0000 013A 
                 ; 0000 013B                 if (fnd[0] == 10){
000752 940e 09d6 	CALL SUBOPT_0x1A
000754 971a      	SBIW R26,10
000755 f439      	BRNE _0xDE
                 ; 0000 013C                     sprintf(check_pnumber, "%d%d%d%d%d%d%d%d%d%d%d", fnd[11],fnd[10],fnd[9],fnd[8],fnd[7],fnd[6],fnd[5],fnd[4],fnd[3],fnd[2],fnd[1]);
000756 01fe      	MOVW R30,R28
000757 96b2      	ADIW R30,34
000758 940e 0a0a 	CALL SUBOPT_0x23
                 ; 0000 013D 
                 ; 0000 013E                     STATE = CHECK_PNUM_OUT_INIT;
00075a e0e8      	LDI  R30,LOW(8)
00075b 940e 09e4 	CALL SUBOPT_0x1C
                 ; 0000 013F                 }
                 ; 0000 0140                 delay_ms(10);
                 _0xDE:
00075d e0ea      	LDI  R30,LOW(10)
00075e e0f0      	LDI  R31,HIGH(10)
00075f 940e 0943 	CALL SUBOPT_0x2
                 ; 0000 0141                 break;
000761 c011      	RJMP _0xAD
                 ; 0000 0142 
                 ; 0000 0143              case INPUT_PHONE_OUT_INIT: //ÀÔÀå : Æù¹øÈ£ ÀÔ·Â
                 _0xDD:
000762 30ea      	CPI  R30,LOW(0xA)
000763 e0a0      	LDI  R26,HIGH(0xA)
000764 07fa      	CPC  R31,R26
000765 f469      	BRNE _0xAD
                 ; 0000 0144 
                 ; 0000 0145 
                 ; 0000 0146                 fnd[0]=0;
000766 940e 09a6 	CALL SUBOPT_0x13
                 ; 0000 0147                 LCD_Clear();
000768 940e 09e9 	CALL SUBOPT_0x1D
                 ; 0000 0148                 LCD_Pos(0,0);
                 ; 0000 0149                 LCD_Str("Input PhoneNum") ;
                +
00076a e9eb     +LDI R30 , LOW ( _0xB5 + ( 134 ) )
00076b e0f5     +LDI R31 , HIGH ( _0xB5 + ( 134 ) )
                 	__POINTW1MN _0xB5,134
00076c 940e 09f0 	CALL SUBOPT_0x1E
                 ; 0000 014A                 STATE = INPUT_PHONE_OUT;
00076e e0e9      	LDI  R30,LOW(9)
                 _0xE6:
                +
00076f 01de     +MOVW R26 , R28
000770 5aad     +SUBI R26 , LOW ( - 83 )
000771 4fbf     +SBCI R27 , HIGH ( - 83 )
000772 93ec     +ST X , R30
                 	__PUTB1SX 83
                 ; 0000 014B                 break;
                 ; 0000 014C 
                 ; 0000 014D 
                 ; 0000 014E         }
                 _0xAD:
                 ; 0000 014F 
                 ; 0000 0150     }
000773 cd1e      	RJMP _0x98
                 ; 0000 0151 }
                 _0xE0:
000774 cfff      	RJMP _0xE0
                 
                 	.DSEG
                 _0xB5:
000515           	.BYTE 0x95
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
000775 931a      	ST   -Y,R17
000776 930a      	ST   -Y,R16
000777 81aa      	LDD  R26,Y+2
000778 81bb      	LDD  R27,Y+2+1
000779 9612      	ADIW R26,2
00077a 940e 0b37 	CALL __GETW1P
00077c 9730      	SBIW R30,0
00077d f129      	BREQ _0x2000010
00077e 81aa      	LDD  R26,Y+2
00077f 81bb      	LDD  R27,Y+2+1
000780 9614      	ADIW R26,4
000781 940e 0b37 	CALL __GETW1P
000783 018f      	MOVW R16,R30
000784 9730      	SBIW R30,0
000785 f061      	BREQ _0x2000012
                +
000786 3002     +CPI R16 , LOW ( 2 )
000787 e0e0     +LDI R30 , HIGH ( 2 )
000788 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000789 f0c0      	BRLO _0x2000013
00078a 01f8      	MOVW R30,R16
00078b 9731      	SBIW R30,1
00078c 018f      	MOVW R16,R30
                +
00078d 81aa     +LDD R26 , Y + 2
00078e 81bb     +LDD R27 , Y + 2 + 1
00078f 9614     +ADIW R26 , 4
000790 93ed     +ST X + , R30
000791 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000792 81aa      	LDD  R26,Y+2
000793 81bb      	LDD  R27,Y+2+1
000794 9612      	ADIW R26,2
000795 940e 0a86 	CALL SUBOPT_0x25
000797 9731      	SBIW R30,1
000798 81ac      	LDD  R26,Y+4
000799 83a0      	STD  Z+0,R26
00079a 81aa      	LDD  R26,Y+2
00079b 81bb      	LDD  R27,Y+2+1
00079c 940e 0b37 	CALL __GETW1P
00079e 23ff      	TST  R31
00079f f012      	BRMI _0x2000014
0007a0 940e 0a86 	CALL SUBOPT_0x25
                 _0x2000014:
                 _0x2000013:
0007a2 c006      	RJMP _0x2000015
                 _0x2000010:
0007a3 81aa      	LDD  R26,Y+2
0007a4 81bb      	LDD  R27,Y+2+1
0007a5 efef      	LDI  R30,LOW(65535)
0007a6 efff      	LDI  R31,HIGH(65535)
0007a7 93ed      	ST   X+,R30
0007a8 93fc      	ST   X,R31
                 _0x2000015:
0007a9 8119      	LDD  R17,Y+1
0007aa 8108      	LDD  R16,Y+0
                 _0x2060002:
0007ab 9625      	ADIW R28,5
0007ac 9508      	RET
                 __print_G100:
0007ad 9726      	SBIW R28,6
0007ae 940e 0b4f 	CALL __SAVELOCR6
0007b0 e010      	LDI  R17,0
0007b1 85ac      	LDD  R26,Y+12
0007b2 85bd      	LDD  R27,Y+12+1
0007b3 e0e0      	LDI  R30,LOW(0)
0007b4 e0f0      	LDI  R31,HIGH(0)
0007b5 93ed      	ST   X+,R30
0007b6 93fc      	ST   X,R31
                 _0x2000016:
0007b7 89ea      	LDD  R30,Y+18
0007b8 89fb      	LDD  R31,Y+18+1
0007b9 9631      	ADIW R30,1
0007ba 8bea      	STD  Y+18,R30
0007bb 8bfb      	STD  Y+18+1,R31
0007bc 9731      	SBIW R30,1
0007bd 91e4      	LPM  R30,Z
0007be 2f2e      	MOV  R18,R30
0007bf 30e0      	CPI  R30,0
0007c0 f411      	BRNE PC+3
0007c1 940c 08da 	JMP _0x2000018
0007c3 2fe1      	MOV  R30,R17
0007c4 30e0      	CPI  R30,0
0007c5 f439      	BRNE _0x200001C
0007c6 3225      	CPI  R18,37
0007c7 f411      	BRNE _0x200001D
0007c8 e011      	LDI  R17,LOW(1)
0007c9 c002      	RJMP _0x200001E
                 _0x200001D:
0007ca 940e 0a93 	CALL SUBOPT_0x27
                 _0x200001E:
0007cc c10c      	RJMP _0x200001B
                 _0x200001C:
0007cd 30e1      	CPI  R30,LOW(0x1)
0007ce f4a9      	BRNE _0x200001F
0007cf 3225      	CPI  R18,37
0007d0 f419      	BRNE _0x2000020
0007d1 940e 0a93 	CALL SUBOPT_0x27
0007d3 c104      	RJMP _0x20000C9
                 _0x2000020:
0007d4 e012      	LDI  R17,LOW(2)
0007d5 e040      	LDI  R20,LOW(0)
0007d6 e000      	LDI  R16,LOW(0)
0007d7 322d      	CPI  R18,45
0007d8 f411      	BRNE _0x2000021
0007d9 e001      	LDI  R16,LOW(1)
0007da c0fe      	RJMP _0x200001B
                 _0x2000021:
0007db 322b      	CPI  R18,43
0007dc f411      	BRNE _0x2000022
0007dd e24b      	LDI  R20,LOW(43)
0007de c0fa      	RJMP _0x200001B
                 _0x2000022:
0007df 3220      	CPI  R18,32
0007e0 f411      	BRNE _0x2000023
0007e1 e240      	LDI  R20,LOW(32)
0007e2 c0f6      	RJMP _0x200001B
                 _0x2000023:
0007e3 c002      	RJMP _0x2000024
                 _0x200001F:
0007e4 30e2      	CPI  R30,LOW(0x2)
0007e5 f439      	BRNE _0x2000025
                 _0x2000024:
0007e6 e050      	LDI  R21,LOW(0)
0007e7 e013      	LDI  R17,LOW(3)
0007e8 3320      	CPI  R18,48
0007e9 f411      	BRNE _0x2000026
0007ea 6800      	ORI  R16,LOW(128)
0007eb c0ed      	RJMP _0x200001B
                 _0x2000026:
0007ec c004      	RJMP _0x2000027
                 _0x2000025:
0007ed 30e3      	CPI  R30,LOW(0x3)
0007ee f011      	BREQ PC+3
0007ef 940c 08d9 	JMP _0x200001B
                 _0x2000027:
0007f1 3320      	CPI  R18,48
0007f2 f010      	BRLO _0x200002A
0007f3 332a      	CPI  R18,58
0007f4 f008      	BRLO _0x200002B
                 _0x200002A:
0007f5 c007      	RJMP _0x2000029
                 _0x200002B:
0007f6 e0aa      	LDI  R26,LOW(10)
0007f7 9f5a      	MUL  R21,R26
0007f8 2d50      	MOV  R21,R0
0007f9 2fe2      	MOV  R30,R18
0007fa 53e0      	SUBI R30,LOW(48)
0007fb 0f5e      	ADD  R21,R30
0007fc c0dc      	RJMP _0x200001B
                 _0x2000029:
0007fd 2fe2      	MOV  R30,R18
0007fe 36e3      	CPI  R30,LOW(0x63)
0007ff f449      	BRNE _0x200002F
000800 940e 0a9c 	CALL SUBOPT_0x28
000802 89e8      	LDD  R30,Y+16
000803 89f9      	LDD  R31,Y+16+1
000804 81a4      	LDD  R26,Z+4
000805 93aa      	ST   -Y,R26
000806 940e 0aa2 	CALL SUBOPT_0x29
000808 c0cf      	RJMP _0x2000030
                 _0x200002F:
000809 37e3      	CPI  R30,LOW(0x73)
00080a f441      	BRNE _0x2000032
00080b 940e 0a9c 	CALL SUBOPT_0x28
00080d 940e 0aaa 	CALL SUBOPT_0x2A
00080f 940e 0918 	CALL _strlen
000811 2f1e      	MOV  R17,R30
000812 c00a      	RJMP _0x2000033
                 _0x2000032:
000813 37e0      	CPI  R30,LOW(0x70)
000814 f461      	BRNE _0x2000035
000815 940e 0a9c 	CALL SUBOPT_0x28
000817 940e 0aaa 	CALL SUBOPT_0x2A
000819 940e 0922 	CALL _strlenf
00081b 2f1e      	MOV  R17,R30
00081c 6008      	ORI  R16,LOW(8)
                 _0x2000033:
00081d 6002      	ORI  R16,LOW(2)
00081e 770f      	ANDI R16,LOW(127)
00081f e030      	LDI  R19,LOW(0)
000820 c035      	RJMP _0x2000036
                 _0x2000035:
000821 36e4      	CPI  R30,LOW(0x64)
000822 f011      	BREQ _0x2000039
000823 36e9      	CPI  R30,LOW(0x69)
000824 f411      	BRNE _0x200003A
                 _0x2000039:
000825 6004      	ORI  R16,LOW(4)
000826 c002      	RJMP _0x200003B
                 _0x200003A:
000827 37e5      	CPI  R30,LOW(0x75)
000828 f431      	BRNE _0x200003C
                 _0x200003B:
000829 e8ec      	LDI  R30,LOW(_tbl10_G100*2)
00082a e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
00082b 83ee      	STD  Y+6,R30
00082c 83ff      	STD  Y+6+1,R31
00082d e015      	LDI  R17,LOW(5)
00082e c00d      	RJMP _0x200003D
                 _0x200003C:
00082f 35e8      	CPI  R30,LOW(0x58)
000830 f411      	BRNE _0x200003F
000831 6008      	ORI  R16,LOW(8)
000832 c004      	RJMP _0x2000040
                 _0x200003F:
000833 37e8      	CPI  R30,LOW(0x78)
000834 f011      	BREQ PC+3
000835 940c 08d8 	JMP _0x2000071
                 _0x2000040:
000837 e9e6      	LDI  R30,LOW(_tbl16_G100*2)
000838 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000839 83ee      	STD  Y+6,R30
00083a 83ff      	STD  Y+6+1,R31
00083b e014      	LDI  R17,LOW(4)
                 _0x200003D:
00083c ff02      	SBRS R16,2
00083d c014      	RJMP _0x2000042
00083e 940e 0a9c 	CALL SUBOPT_0x28
000840 940e 0ab4 	CALL SUBOPT_0x2B
000842 85ab      	LDD  R26,Y+11
000843 23aa      	TST  R26
000844 f43a      	BRPL _0x2000043
000845 85ea      	LDD  R30,Y+10
000846 85fb      	LDD  R31,Y+10+1
000847 940e 0ad3 	CALL __ANEGW1
000849 87ea      	STD  Y+10,R30
00084a 87fb      	STD  Y+10+1,R31
00084b e24d      	LDI  R20,LOW(45)
                 _0x2000043:
00084c 3040      	CPI  R20,0
00084d f011      	BREQ _0x2000044
00084e 5f1f      	SUBI R17,-LOW(1)
00084f c001      	RJMP _0x2000045
                 _0x2000044:
000850 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
000851 c004      	RJMP _0x2000046
                 _0x2000042:
000852 940e 0a9c 	CALL SUBOPT_0x28
000854 940e 0ab4 	CALL SUBOPT_0x2B
                 _0x2000046:
                 _0x2000036:
000856 fd00      	SBRC R16,0
000857 c011      	RJMP _0x2000047
                 _0x2000048:
000858 1715      	CP   R17,R21
000859 f478      	BRSH _0x200004A
00085a ff07      	SBRS R16,7
00085b c008      	RJMP _0x200004B
00085c ff02      	SBRS R16,2
00085d c004      	RJMP _0x200004C
00085e 7f0b      	ANDI R16,LOW(251)
00085f 2f24      	MOV  R18,R20
000860 5011      	SUBI R17,LOW(1)
000861 c001      	RJMP _0x200004D
                 _0x200004C:
000862 e320      	LDI  R18,LOW(48)
                 _0x200004D:
000863 c001      	RJMP _0x200004E
                 _0x200004B:
000864 e220      	LDI  R18,LOW(32)
                 _0x200004E:
000865 940e 0a93 	CALL SUBOPT_0x27
000867 5051      	SUBI R21,LOW(1)
000868 cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
000869 2f31      	MOV  R19,R17
00086a ff01      	SBRS R16,1
00086b c017      	RJMP _0x200004F
                 _0x2000050:
00086c 3030      	CPI  R19,0
00086d f0a1      	BREQ _0x2000052
00086e ff03      	SBRS R16,3
00086f c006      	RJMP _0x2000053
000870 81ee      	LDD  R30,Y+6
000871 81ff      	LDD  R31,Y+6+1
000872 9125      	LPM  R18,Z+
000873 83ee      	STD  Y+6,R30
000874 83ff      	STD  Y+6+1,R31
000875 c005      	RJMP _0x2000054
                 _0x2000053:
000876 81ae      	LDD  R26,Y+6
000877 81bf      	LDD  R27,Y+6+1
000878 912d      	LD   R18,X+
000879 83ae      	STD  Y+6,R26
00087a 83bf      	STD  Y+6+1,R27
                 _0x2000054:
00087b 940e 0a93 	CALL SUBOPT_0x27
00087d 3050      	CPI  R21,0
00087e f009      	BREQ _0x2000055
00087f 5051      	SUBI R21,LOW(1)
                 _0x2000055:
000880 5031      	SUBI R19,LOW(1)
000881 cfea      	RJMP _0x2000050
                 _0x2000052:
000882 c04b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
000883 e320      	LDI  R18,LOW(48)
000884 81ee      	LDD  R30,Y+6
000885 81ff      	LDD  R31,Y+6+1
000886 940e 0b3b 	CALL __GETW1PF
000888 87e8      	STD  Y+8,R30
000889 87f9      	STD  Y+8+1,R31
00088a 81ee      	LDD  R30,Y+6
00088b 81ff      	LDD  R31,Y+6+1
00088c 9632      	ADIW R30,2
00088d 83ee      	STD  Y+6,R30
00088e 83ff      	STD  Y+6+1,R31
                 _0x200005A:
00088f 85e8      	LDD  R30,Y+8
000890 85f9      	LDD  R31,Y+8+1
000891 85aa      	LDD  R26,Y+10
000892 85bb      	LDD  R27,Y+10+1
000893 17ae      	CP   R26,R30
000894 07bf      	CPC  R27,R31
000895 f050      	BRLO _0x200005C
000896 5f2f      	SUBI R18,-LOW(1)
000897 85a8      	LDD  R26,Y+8
000898 85b9      	LDD  R27,Y+8+1
000899 85ea      	LDD  R30,Y+10
00089a 85fb      	LDD  R31,Y+10+1
00089b 1bea      	SUB  R30,R26
00089c 0bfb      	SBC  R31,R27
00089d 87ea      	STD  Y+10,R30
00089e 87fb      	STD  Y+10+1,R31
00089f cfef      	RJMP _0x200005A
                 _0x200005C:
0008a0 332a      	CPI  R18,58
0008a1 f028      	BRLO _0x200005D
0008a2 ff03      	SBRS R16,3
0008a3 c002      	RJMP _0x200005E
0008a4 5f29      	SUBI R18,-LOW(7)
0008a5 c001      	RJMP _0x200005F
                 _0x200005E:
0008a6 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
0008a7 fd04      	SBRC R16,4
0008a8 c01a      	RJMP _0x2000061
0008a9 3321      	CPI  R18,49
0008aa f420      	BRSH _0x2000063
0008ab 85a8      	LDD  R26,Y+8
0008ac 85b9      	LDD  R27,Y+8+1
0008ad 9711      	SBIW R26,1
0008ae f409      	BRNE _0x2000062
                 _0x2000063:
0008af c009      	RJMP _0x20000CA
                 _0x2000062:
0008b0 1753      	CP   R21,R19
0008b1 f010      	BRLO _0x2000067
0008b2 ff00      	SBRS R16,0
0008b3 c001      	RJMP _0x2000068
                 _0x2000067:
0008b4 c013      	RJMP _0x2000066
                 _0x2000068:
0008b5 e220      	LDI  R18,LOW(32)
0008b6 ff07      	SBRS R16,7
0008b7 c00b      	RJMP _0x2000069
0008b8 e320      	LDI  R18,LOW(48)
                 _0x20000CA:
0008b9 6100      	ORI  R16,LOW(16)
0008ba ff02      	SBRS R16,2
0008bb c007      	RJMP _0x200006A
0008bc 7f0b      	ANDI R16,LOW(251)
0008bd 934a      	ST   -Y,R20
0008be 940e 0aa2 	CALL SUBOPT_0x29
0008c0 3050      	CPI  R21,0
0008c1 f009      	BREQ _0x200006B
0008c2 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
0008c3 940e 0a93 	CALL SUBOPT_0x27
0008c5 3050      	CPI  R21,0
0008c6 f009      	BREQ _0x200006C
0008c7 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
0008c8 5031      	SUBI R19,LOW(1)
0008c9 85a8      	LDD  R26,Y+8
0008ca 85b9      	LDD  R27,Y+8+1
0008cb 9712      	SBIW R26,2
0008cc f008      	BRLO _0x2000059
0008cd cfb5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
0008ce ff00      	SBRS R16,0
0008cf c008      	RJMP _0x200006D
                 _0x200006E:
0008d0 3050      	CPI  R21,0
0008d1 f031      	BREQ _0x2000070
0008d2 5051      	SUBI R21,LOW(1)
0008d3 e2e0      	LDI  R30,LOW(32)
0008d4 93ea      	ST   -Y,R30
0008d5 940e 0aa2 	CALL SUBOPT_0x29
0008d7 cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000C9:
0008d8 e010      	LDI  R17,LOW(0)
                 _0x200001B:
0008d9 cedd      	RJMP _0x2000016
                 _0x2000018:
0008da 85ac      	LDD  R26,Y+12
0008db 85bd      	LDD  R27,Y+12+1
0008dc 940e 0b37 	CALL __GETW1P
0008de 940e 0b56 	CALL __LOADLOCR6
0008e0 9664      	ADIW R28,20
0008e1 9508      	RET
                 _sprintf:
0008e2 92ff      	PUSH R15
0008e3 2ef8      	MOV  R15,R24
0008e4 9726      	SBIW R28,6
0008e5 940e 0b51 	CALL __SAVELOCR4
0008e7 940e 0abc 	CALL SUBOPT_0x2C
0008e9 9730      	SBIW R30,0
0008ea f419      	BRNE _0x2000072
0008eb efef      	LDI  R30,LOW(65535)
0008ec efff      	LDI  R31,HIGH(65535)
0008ed c025      	RJMP _0x2060001
                 _0x2000072:
0008ee 01de      	MOVW R26,R28
0008ef 9616      	ADIW R26,6
0008f0 940e 0acf 	CALL __ADDW2R15
0008f2 018d      	MOVW R16,R26
0008f3 940e 0abc 	CALL SUBOPT_0x2C
0008f5 83ee      	STD  Y+6,R30
0008f6 83ff      	STD  Y+6+1,R31
0008f7 e0e0      	LDI  R30,LOW(0)
0008f8 87e8      	STD  Y+8,R30
0008f9 87e9      	STD  Y+8+1,R30
0008fa 01de      	MOVW R26,R28
0008fb 961a      	ADIW R26,10
0008fc 940e 0acf 	CALL __ADDW2R15
0008fe 940e 0b37 	CALL __GETW1P
000900 93fa      	ST   -Y,R31
000901 93ea      	ST   -Y,R30
000902 931a      	ST   -Y,R17
000903 930a      	ST   -Y,R16
000904 e7e5      	LDI  R30,LOW(_put_buff_G100)
000905 e0f7      	LDI  R31,HIGH(_put_buff_G100)
000906 93fa      	ST   -Y,R31
000907 93ea      	ST   -Y,R30
000908 01fe      	MOVW R30,R28
000909 963a      	ADIW R30,10
00090a 93fa      	ST   -Y,R31
00090b 93ea      	ST   -Y,R30
00090c dea0      	RCALL __print_G100
00090d 019f      	MOVW R18,R30
00090e 81ae      	LDD  R26,Y+6
00090f 81bf      	LDD  R27,Y+6+1
000910 e0e0      	LDI  R30,LOW(0)
000911 93ec      	ST   X,R30
000912 01f9      	MOVW R30,R18
                 _0x2060001:
000913 940e 0b58 	CALL __LOADLOCR4
000915 962a      	ADIW R28,10
000916 90ff      	POP  R15
000917 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
000918 91a9          ld   r26,y+
000919 91b9          ld   r27,y+
00091a 27ee          clr  r30
00091b 27ff          clr  r31
                 strlen0:
00091c 916d          ld   r22,x+
00091d 2366          tst  r22
00091e f011          breq strlen1
00091f 9631          adiw r30,1
000920 cffb          rjmp strlen0
                 strlen1:
000921 9508          ret
                 _strlenf:
000922 27aa          clr  r26
000923 27bb          clr  r27
000924 91e9          ld   r30,y+
000925 91f9          ld   r31,y+
                 strlenf0:
000926 9005      	lpm  r0,z+
000927 2000          tst  r0
000928 f011          breq strlenf1
000929 9611          adiw r26,1
00092a cffb          rjmp strlenf0
                 strlenf1:
00092b 01fd          movw r30,r26
00092c 9508          ret
                 
                 	.DSEG
                 _Port_char:
0005aa           	.BYTE 0x10
                 _Port_fnd:
0005ba           	.BYTE 0x8
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
00092d 93e0 0065 	STS  101,R30
00092f 91e0 0065 	LDS  R30,101
000931 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1:
000932 60e1      	ORI  R30,1
000933 93e0 0065 	STS  101,R30
                +
000935 ef86     +LDI R24 , LOW ( 246 )
                +__DELAY_USB_LOOP :
000936 958a     +DEC R24
000937 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 246
000938 81e8      	LD   R30,Y
000939 bbeb      	OUT  0x1B,R30
                +
00093a ef86     +LDI R24 , LOW ( 246 )
                +__DELAY_USB_LOOP :
00093b 958a     +DEC R24
00093c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 246
00093d 91e0 0065 	LDS  R30,101
00093f 7fee      	ANDI R30,0xFE
000940 93e0 0065 	STS  101,R30
000942 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2:
000943 93fa      	ST   -Y,R31
000944 93ea      	ST   -Y,R30
000945 940c 0ac3 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3:
000947 e0e1      	LDI  R30,LOW(1)
000948 e0f0      	LDI  R31,HIGH(1)
000949 cff9      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
00094a e3e8      	LDI  R30,LOW(56)
00094b 93ea      	ST   -Y,R30
00094c 940e 015b 	CALL _LCD_Comm
00094e e0e4      	LDI  R30,LOW(4)
00094f 93ea      	ST   -Y,R30
000950 940c 0166 	JMP  _LCD_delay
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5:
000952 93ea      	ST   -Y,R30
000953 940e 015b 	CALL _LCD_Comm
000955 e0e4      	LDI  R30,LOW(4)
000956 93ea      	ST   -Y,R30
000957 940c 0166 	JMP  _LCD_delay
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000959 81e8      	LD   R30,Y
00095a 93e0 0073 	STS  115,R30
00095c e8e4      	LDI  R30,LOW(132)
00095d 93e0 0074 	STS  116,R30
00095f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000960 e6e6      	LDI  R30,LOW(4710)
000961 e1f2      	LDI  R31,HIGH(4710)
000962 bdfb      	OUT  0x2A+1,R31
000963 bdea      	OUT  0x2A,R30
000964 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8:
000965 93e0 0065 	STS  101,R30
000967 81ec      	LDD  R30,Y+4
000968 81fd      	LDD  R31,Y+4+1
000969 93fa      	ST   -Y,R31
00096a 93ea      	ST   -Y,R30
00096b 940c 02d6 	JMP  _myDelay_us
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x9:
00096d 81a9      	LDD  R26,Y+1
00096e 27bb      	CLR  R27
00096f e0e4      	LDI  R30,LOW(4)
000970 e0f0      	LDI  R31,HIGH(4)
000971 940e 0b1b 	CALL __MODW21
000973 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0xA:
000974 81a9      	LDD  R26,Y+1
000975 e0b0      	LDI  R27,0
000976 e0e4      	LDI  R30,LOW(4)
000977 e0f0      	LDI  R31,HIGH(4)
000978 940e 0b13 	CALL __DIVW21
00097a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB:
00097b 940e 0ad7 	CALL __LSLW2
00097d 01bf      	MOVW R22,R30
00097e cfee      	RJMP SUBOPT_0x9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xC:
00097f e0f0      	LDI  R31,0
000980 55e6      	SUBI R30,LOW(-_Port_char)
000981 4ffa      	SBCI R31,HIGH(-_Port_char)
000982 81e0      	LD   R30,Z
000983 93e0 0062 	STS  98,R30
000985 cfc1      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xD:
000986 93fa      	ST   -Y,R31
000987 93ea      	ST   -Y,R30
000988 940c 02e9 	JMP  _Buzzer_play
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
00098a eee8      	LDI  R30,LOW(1000)
00098b e0f3      	LDI  R31,HIGH(1000)
00098c cfb6      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xF:
00098d 930a      	ST   -Y,R16
00098e 940e 026d 	CALL _startRanging
000990 930a      	ST   -Y,R16
000991 940c 044e 	JMP  _SRF_Run
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x10:
                +
000993 01de     +MOVW R26 , R28
000994 58ae     +SUBI R26 , LOW ( - 114 )
000995 4fbf     +SBCI R27 , HIGH ( - 114 )
000996 900d     +LD R0 , X +
000997 91bc     +LD R27 , X
000998 2da0     +MOV R26 , R0
                 	__GETW2SX 114
000999 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x11:
00099a 01de      	MOVW R26,R28
00099b 59a0      	SUBI R26,LOW(-(112))
00099c 4fbf      	SBCI R27,HIGH(-(112))
00099d 91ed      	LD   R30,X+
00099e 91fd      	LD   R31,X+
00099f 9631      	ADIW R30,1
0009a0 93fe      	ST   -X,R31
0009a1 93ee      	ST   -X,R30
0009a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
0009a3 e3e2      	LDI  R30,LOW(50)
0009a4 e0f0      	LDI  R31,HIGH(50)
0009a5 cf9d      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x13:
0009a6 e0e0      	LDI  R30,LOW(0)
                +
0009a7 01de     +MOVW R26 , R28
0009a8 5aaa     +SUBI R26 , LOW ( - 86 )
0009a9 4fbf     +SBCI R27 , HIGH ( - 86 )
0009aa 93ed     +ST X + , R30
0009ab 93ec     +ST X , R30
                 	__CLRW1SX 86
0009ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x14:
0009ad e0e0      	LDI  R30,LOW(0)
                +
0009ae 01de     +MOVW R26 , R28
0009af 5aa8     +SUBI R26 , LOW ( - 88 )
0009b0 4fbf     +SBCI R27 , HIGH ( - 88 )
0009b1 93ed     +ST X + , R30
0009b2 93ec     +ST X , R30
                 	__CLRW1SX 88
0009b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x15:
0009b4 e0e1      	LDI  R30,LOW(1)
                +
0009b5 01de     +MOVW R26 , R28
0009b6 5aad     +SUBI R26 , LOW ( - 83 )
0009b7 4fbf     +SBCI R27 , HIGH ( - 83 )
0009b8 93ec     +ST X , R30
                 	__PUTB1SX 83
0009b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x16:
                +
0009ba 01de     +MOVW R26 , R28
0009bb 5ba2     +SUBI R26 , LOW ( - 78 )
0009bc 4fbf     +SBCI R27 , HIGH ( - 78 )
0009bd 900d     +LD R0 , X +
0009be 91bc     +LD R27 , X
0009bf 2da0     +MOV R26 , R0
                 	__GETW2SX 78
0009c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
                +
0009c1 01fe     +MOVW R30 , R28
0009c2 5be2     +SUBI R30 , LOW ( - 78 )
0009c3 4fff     +SBCI R31 , HIGH ( - 78 )
0009c4 9001     +LD R0 , Z +
0009c5 81f0     +LD R31 , Z
0009c6 2de0     +MOV R30 , R0
                 	__GETW1SX 78
0009c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x18:
                +
0009c8 01fe     +MOVW R30 , R28
0009c9 58ee     +SUBI R30 , LOW ( - 114 )
0009ca 4fff     +SBCI R31 , HIGH ( - 114 )
0009cb 9001     +LD R0 , Z +
0009cc 81f0     +LD R31 , Z
0009cd 2de0     +MOV R30 , R0
                 	__GETW1SX 114
0009ce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19:
                +
0009cf 01fe     +MOVW R30 , R28
0009d0 5ae8     +SUBI R30 , LOW ( - 88 )
0009d1 4fff     +SBCI R31 , HIGH ( - 88 )
0009d2 9001     +LD R0 , Z +
0009d3 81f0     +LD R31 , Z
0009d4 2de0     +MOV R30 , R0
                 	__GETW1SX 88
0009d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x1A:
                +
0009d6 01de     +MOVW R26 , R28
0009d7 5aaa     +SUBI R26 , LOW ( - 86 )
0009d8 4fbf     +SBCI R27 , HIGH ( - 86 )
0009d9 900d     +LD R0 , X +
0009da 91bc     +LD R27 , X
0009db 2da0     +MOV R26 , R0
                 	__GETW2SX 86
0009dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x1B:
                +
0009dd 01de     +MOVW R26 , R28
0009de 5aa8     +SUBI R26 , LOW ( - 88 )
0009df 4fbf     +SBCI R27 , HIGH ( - 88 )
0009e0 900d     +LD R0 , X +
0009e1 91bc     +LD R27 , X
0009e2 2da0     +MOV R26 , R0
                 	__GETW2SX 88
0009e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1C:
                +
0009e4 01de     +MOVW R26 , R28
0009e5 5aad     +SUBI R26 , LOW ( - 83 )
0009e6 4fbf     +SBCI R27 , HIGH ( - 83 )
0009e7 93ec     +ST X , R30
                 	__PUTB1SX 83
0009e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x1D:
0009e9 940e 0189 	CALL _LCD_Clear
0009eb e0e0      	LDI  R30,LOW(0)
0009ec 93ea      	ST   -Y,R30
0009ed 93ea      	ST   -Y,R30
0009ee 940c 016b 	JMP  _LCD_Pos
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x1E:
0009f0 93fa      	ST   -Y,R31
0009f1 93ea      	ST   -Y,R30
0009f2 940c 017b 	JMP  _LCD_Str
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1F:
0009f4 e0e1      	LDI  R30,LOW(1)
0009f5 93ea      	ST   -Y,R30
0009f6 e0e0      	LDI  R30,LOW(0)
0009f7 93ea      	ST   -Y,R30
0009f8 940c 016b 	JMP  _LCD_Pos
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x20:
0009fa 27ff      	CLR  R31
0009fb 2766      	CLR  R22
0009fc 2777      	CLR  R23
0009fd 940e 0b3f 	CALL __PUTPARD1
0009ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
000a00 a1e9      	LDD  R30,Y+33
000a01 e0ab      	LDI  R26,LOW(11)
000a02 9fea      	MUL  R30,R26
000a03 01f0      	MOVW R30,R0
000a04 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22:
000a05 01de      	MOVW R26,R28
000a06 969d      	ADIW R26,45
000a07 0fea      	ADD  R30,R26
000a08 1ffb      	ADC  R31,R27
000a09 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:111 WORDS
                 SUBOPT_0x23:
000a0a 93fa      	ST   -Y,R31
000a0b 93ea      	ST   -Y,R30
                +
000a0c e5e7     +LDI R30 , LOW ( 2 * _0x0 + ( 77 ) )
000a0d e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 77 ) )
                 	__POINTW1FN _0x0,77
000a0e 93fa      	ST   -Y,R31
000a0f 93ea      	ST   -Y,R30
                +
000a10 01fe     +MOVW R30 , R28
000a11 59e0     +SUBI R30 , LOW ( - 112 )
000a12 4fff     +SBCI R31 , HIGH ( - 112 )
000a13 9001     +LD R0 , Z +
000a14 81f0     +LD R31 , Z
000a15 2de0     +MOV R30 , R0
                 	__GETW1SX 112
000a16 940e 0adc 	CALL __CWD1
000a18 940e 0b3f 	CALL __PUTPARD1
000a1a dfad      	RCALL SUBOPT_0x18
000a1b 940e 0adc 	CALL __CWD1
000a1d 940e 0b3f 	CALL __PUTPARD1
                +
000a1f 01fe     +MOVW R30 , R28
000a20 58ec     +SUBI R30 , LOW ( - 116 )
000a21 4fff     +SBCI R31 , HIGH ( - 116 )
000a22 9001     +LD R0 , Z +
000a23 81f0     +LD R31 , Z
000a24 2de0     +MOV R30 , R0
                 	__GETW1SX 116
000a25 940e 0adc 	CALL __CWD1
000a27 940e 0b3f 	CALL __PUTPARD1
                +
000a29 01fe     +MOVW R30 , R28
000a2a 58ea     +SUBI R30 , LOW ( - 118 )
000a2b 4fff     +SBCI R31 , HIGH ( - 118 )
000a2c 9001     +LD R0 , Z +
000a2d 81f0     +LD R31 , Z
000a2e 2de0     +MOV R30 , R0
                 	__GETW1SX 118
000a2f 940e 0adc 	CALL __CWD1
000a31 940e 0b3f 	CALL __PUTPARD1
                +
000a33 01fe     +MOVW R30 , R28
000a34 58e8     +SUBI R30 , LOW ( - 120 )
000a35 4fff     +SBCI R31 , HIGH ( - 120 )
000a36 9001     +LD R0 , Z +
000a37 81f0     +LD R31 , Z
000a38 2de0     +MOV R30 , R0
                 	__GETW1SX 120
000a39 940e 0adc 	CALL __CWD1
000a3b 940e 0b3f 	CALL __PUTPARD1
                +
000a3d 01fe     +MOVW R30 , R28
000a3e 58e6     +SUBI R30 , LOW ( - 122 )
000a3f 4fff     +SBCI R31 , HIGH ( - 122 )
000a40 9001     +LD R0 , Z +
000a41 81f0     +LD R31 , Z
000a42 2de0     +MOV R30 , R0
                 	__GETW1SX 122
000a43 940e 0adc 	CALL __CWD1
000a45 940e 0b3f 	CALL __PUTPARD1
                +
000a47 01fe     +MOVW R30 , R28
000a48 58e4     +SUBI R30 , LOW ( - 124 )
000a49 4fff     +SBCI R31 , HIGH ( - 124 )
000a4a 9001     +LD R0 , Z +
000a4b 81f0     +LD R31 , Z
000a4c 2de0     +MOV R30 , R0
                 	__GETW1SX 124
000a4d 940e 0adc 	CALL __CWD1
000a4f 940e 0b3f 	CALL __PUTPARD1
                +
000a51 01fe     +MOVW R30 , R28
000a52 58e2     +SUBI R30 , LOW ( - 126 )
000a53 4fff     +SBCI R31 , HIGH ( - 126 )
000a54 9001     +LD R0 , Z +
000a55 81f0     +LD R31 , Z
000a56 2de0     +MOV R30 , R0
                 	__GETW1SX 126
000a57 940e 0adc 	CALL __CWD1
000a59 940e 0b3f 	CALL __PUTPARD1
                +
000a5b 01fe     +MOVW R30 , R28
000a5c 58e0     +SUBI R30 , LOW ( - 128 )
000a5d 4fff     +SBCI R31 , HIGH ( - 128 )
000a5e 9001     +LD R0 , Z +
000a5f 81f0     +LD R31 , Z
000a60 2de0     +MOV R30 , R0
                 	__GETW1SX 128
000a61 940e 0adc 	CALL __CWD1
000a63 940e 0b3f 	CALL __PUTPARD1
                +
000a65 01fe     +MOVW R30 , R28
000a66 57ee     +SUBI R30 , LOW ( - 130 )
000a67 4fff     +SBCI R31 , HIGH ( - 130 )
000a68 9001     +LD R0 , Z +
000a69 81f0     +LD R31 , Z
000a6a 2de0     +MOV R30 , R0
                 	__GETW1SX 130
000a6b 940e 0adc 	CALL __CWD1
000a6d 940e 0b3f 	CALL __PUTPARD1
                +
000a6f 01fe     +MOVW R30 , R28
000a70 57ec     +SUBI R30 , LOW ( - 132 )
000a71 4fff     +SBCI R31 , HIGH ( - 132 )
000a72 9001     +LD R0 , Z +
000a73 81f0     +LD R31 , Z
000a74 2de0     +MOV R30 , R0
                 	__GETW1SX 132
000a75 940e 0adc 	CALL __CWD1
000a77 940e 0b3f 	CALL __PUTPARD1
000a79 e28c      	LDI  R24,44
000a7a 940e 08e2 	CALL _sprintf
000a7c 96e0      	ADIW R28,48
000a7d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x24:
000a7e a1e9      	LDD  R30,Y+33
000a7f e0f0      	LDI  R31,0
000a80 01de      	MOVW R26,R28
000a81 5ba0      	SUBI R26,LOW(-(80))
000a82 4fbf      	SBCI R27,HIGH(-(80))
000a83 0fae      	ADD  R26,R30
000a84 1fbf      	ADC  R27,R31
000a85 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x25:
000a86 91ed      	LD   R30,X+
000a87 91fd      	LD   R31,X+
000a88 9631      	ADIW R30,1
000a89 93fe      	ST   -X,R31
000a8a 93ee      	ST   -X,R30
000a8b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26:
                +
000a8c 01de     +MOVW R26 , R28
000a8d 5ba0     +SUBI R26 , LOW ( - 80 )
000a8e 4fbf     +SBCI R27 , HIGH ( - 80 )
000a8f 900d     +LD R0 , X +
000a90 91bc     +LD R27 , X
000a91 2da0     +MOV R26 , R0
                 	__GETW2SX 80
000a92 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x27:
000a93 932a      	ST   -Y,R18
000a94 85ed      	LDD  R30,Y+13
000a95 85fe      	LDD  R31,Y+13+1
000a96 93fa      	ST   -Y,R31
000a97 93ea      	ST   -Y,R30
000a98 89e9      	LDD  R30,Y+17
000a99 89fa      	LDD  R31,Y+17+1
000a9a 9509      	ICALL
000a9b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x28:
000a9c 89e8      	LDD  R30,Y+16
000a9d 89f9      	LDD  R31,Y+16+1
000a9e 9734      	SBIW R30,4
000a9f 8be8      	STD  Y+16,R30
000aa0 8bf9      	STD  Y+16+1,R31
000aa1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x29:
000aa2 85ed      	LDD  R30,Y+13
000aa3 85fe      	LDD  R31,Y+13+1
000aa4 93fa      	ST   -Y,R31
000aa5 93ea      	ST   -Y,R30
000aa6 89e9      	LDD  R30,Y+17
000aa7 89fa      	LDD  R31,Y+17+1
000aa8 9509      	ICALL
000aa9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2A:
000aaa 89a8      	LDD  R26,Y+16
000aab 89b9      	LDD  R27,Y+16+1
000aac 9614      	ADIW R26,4
000aad 940e 0b37 	CALL __GETW1P
000aaf 83ee      	STD  Y+6,R30
000ab0 83ff      	STD  Y+6+1,R31
000ab1 93fa      	ST   -Y,R31
000ab2 93ea      	ST   -Y,R30
000ab3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2B:
000ab4 89a8      	LDD  R26,Y+16
000ab5 89b9      	LDD  R27,Y+16+1
000ab6 9614      	ADIW R26,4
000ab7 940e 0b37 	CALL __GETW1P
000ab9 87ea      	STD  Y+10,R30
000aba 87fb      	STD  Y+10+1,R31
000abb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
000abc 01de      	MOVW R26,R28
000abd 961c      	ADIW R26,12
000abe 940e 0acf 	CALL __ADDW2R15
000ac0 940e 0b37 	CALL __GETW1P
000ac2 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000ac3 91e9      	ld   r30,y+
000ac4 91f9      	ld   r31,y+
000ac5 9630      	adiw r30,0
000ac6 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000ac7 e686     +LDI R24 , LOW ( 0xE66 )
000ac8 e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
000ac9 9701     +SBIW R24 , 1
000aca f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
000acb 95a8      	wdr
000acc 9731      	sbiw r30,1
000acd f7c9      	brne __delay_ms0
                 __delay_ms1:
000ace 9508      	ret
                 
                 __ADDW2R15:
000acf 2400      	CLR  R0
000ad0 0daf      	ADD  R26,R15
000ad1 1db0      	ADC  R27,R0
000ad2 9508      	RET
                 
                 __ANEGW1:
000ad3 95f1      	NEG  R31
000ad4 95e1      	NEG  R30
000ad5 40f0      	SBCI R31,0
000ad6 9508      	RET
                 
                 __LSLW2:
000ad7 0fee      	LSL  R30
000ad8 1fff      	ROL  R31
000ad9 0fee      	LSL  R30
000ada 1fff      	ROL  R31
000adb 9508      	RET
                 
                 __CWD1:
000adc 2f6f      	MOV  R22,R31
000add 0f66      	ADD  R22,R22
000ade 0b66      	SBC  R22,R22
000adf 2f76      	MOV  R23,R22
000ae0 9508      	RET
                 
                 __EQW12:
000ae1 17ea      	CP   R30,R26
000ae2 07fb      	CPC  R31,R27
000ae3 e0e1      	LDI  R30,1
000ae4 f009      	BREQ __EQW12T
000ae5 27ee      	CLR  R30
                 __EQW12T:
000ae6 9508      	RET
                 
                 __LTW12:
000ae7 17ae      	CP   R26,R30
000ae8 07bf      	CPC  R27,R31
000ae9 e0e1      	LDI  R30,1
000aea f00c      	BRLT __LTW12T
000aeb 27ee      	CLR  R30
                 __LTW12T:
000aec 9508      	RET
                 
                 __GTW12:
000aed 17ea      	CP   R30,R26
000aee 07fb      	CPC  R31,R27
000aef e0e1      	LDI  R30,1
000af0 f00c      	BRLT __GTW12T
000af1 27ee      	CLR  R30
                 __GTW12T:
000af2 9508      	RET
                 
                 __MULW12U:
000af3 9ffa      	MUL  R31,R26
000af4 2df0      	MOV  R31,R0
000af5 9feb      	MUL  R30,R27
000af6 0df0      	ADD  R31,R0
000af7 9fea      	MUL  R30,R26
000af8 2de0      	MOV  R30,R0
000af9 0df1      	ADD  R31,R1
000afa 9508      	RET
                 
                 __MULW12:
000afb d02d      	RCALL __CHKSIGNW
000afc dff6      	RCALL __MULW12U
000afd f40e      	BRTC __MULW121
000afe dfd4      	RCALL __ANEGW1
                 __MULW121:
000aff 9508      	RET
                 
                 __DIVW21U:
000b00 2400      	CLR  R0
000b01 2411      	CLR  R1
000b02 e190      	LDI  R25,16
                 __DIVW21U1:
000b03 0faa      	LSL  R26
000b04 1fbb      	ROL  R27
000b05 1c00      	ROL  R0
000b06 1c11      	ROL  R1
000b07 1a0e      	SUB  R0,R30
000b08 0a1f      	SBC  R1,R31
000b09 f418      	BRCC __DIVW21U2
000b0a 0e0e      	ADD  R0,R30
000b0b 1e1f      	ADC  R1,R31
000b0c c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000b0d 60a1      	SBR  R26,1
                 __DIVW21U3:
000b0e 959a      	DEC  R25
000b0f f799      	BRNE __DIVW21U1
000b10 01fd      	MOVW R30,R26
000b11 01d0      	MOVW R26,R0
000b12 9508      	RET
                 
                 __DIVW21:
000b13 d015      	RCALL __CHKSIGNW
000b14 dfeb      	RCALL __DIVW21U
000b15 f40e      	BRTC __DIVW211
000b16 dfbc      	RCALL __ANEGW1
                 __DIVW211:
000b17 9508      	RET
                 
                 __MODW21U:
000b18 dfe7      	RCALL __DIVW21U
000b19 01fd      	MOVW R30,R26
000b1a 9508      	RET
                 
                 __MODW21:
000b1b 94e8      	CLT
000b1c ffb7      	SBRS R27,7
000b1d c004      	RJMP __MODW211
000b1e 95a0      	COM  R26
000b1f 95b0      	COM  R27
000b20 9611      	ADIW R26,1
000b21 9468      	SET
                 __MODW211:
000b22 fdf7      	SBRC R31,7
000b23 dfaf      	RCALL __ANEGW1
000b24 dfdb      	RCALL __DIVW21U
000b25 01fd      	MOVW R30,R26
000b26 f40e      	BRTC __MODW212
000b27 dfab      	RCALL __ANEGW1
                 __MODW212:
000b28 9508      	RET
                 
                 __CHKSIGNW:
000b29 94e8      	CLT
000b2a fff7      	SBRS R31,7
000b2b c002      	RJMP __CHKSW1
000b2c dfa6      	RCALL __ANEGW1
000b2d 9468      	SET
                 __CHKSW1:
000b2e ffb7      	SBRS R27,7
000b2f c006      	RJMP __CHKSW2
000b30 95a0      	COM  R26
000b31 95b0      	COM  R27
000b32 9611      	ADIW R26,1
000b33 f800      	BLD  R0,0
000b34 9403      	INC  R0
000b35 fa00      	BST  R0,0
                 __CHKSW2:
000b36 9508      	RET
                 
                 __GETW1P:
000b37 91ed      	LD   R30,X+
000b38 91fc      	LD   R31,X
000b39 9711      	SBIW R26,1
000b3a 9508      	RET
                 
                 __GETW1PF:
000b3b 9005      	LPM  R0,Z+
000b3c 91f4      	LPM  R31,Z
000b3d 2de0      	MOV  R30,R0
000b3e 9508      	RET
                 
                 __PUTPARD1:
000b3f 937a      	ST   -Y,R23
000b40 936a      	ST   -Y,R22
000b41 93fa      	ST   -Y,R31
000b42 93ea      	ST   -Y,R30
000b43 9508      	RET
                 
                 __SWAPW12:
000b44 2e1b      	MOV  R1,R27
000b45 2fbf      	MOV  R27,R31
000b46 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000b47 2e1a      	MOV  R1,R26
000b48 2fae      	MOV  R26,R30
000b49 2de1      	MOV  R30,R1
000b4a 9508      	RET
                 
                 __CPW02:
000b4b 2400      	CLR  R0
000b4c 160a      	CP   R0,R26
000b4d 060b      	CPC  R0,R27
000b4e 9508      	RET
                 
                 __SAVELOCR6:
000b4f 935a      	ST   -Y,R21
                 __SAVELOCR5:
000b50 934a      	ST   -Y,R20
                 __SAVELOCR4:
000b51 933a      	ST   -Y,R19
                 __SAVELOCR3:
000b52 932a      	ST   -Y,R18
                 __SAVELOCR2:
000b53 931a      	ST   -Y,R17
000b54 930a      	ST   -Y,R16
000b55 9508      	RET
                 
                 __LOADLOCR6:
000b56 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000b57 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000b58 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000b59 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000b5a 8119      	LDD  R17,Y+1
000b5b 8108      	LD   R16,Y
000b5c 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
000b5d 0fac      	ADD  R26,R28
000b5e 1fbd      	ADC  R27,R29
                 __INITLOC0:
000b5f 9005      	LPM  R0,Z+
000b60 920d      	ST   X+,R0
000b61 958a      	DEC  R24
000b62 f7e1      	BRNE __INITLOC0
000b63 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  80 r1 :  14 r2 :   0 r3 :   0 r4 :   4 r5 :   3 r6 :   0 r7 :   5 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  95 r17:  86 r18:  40 r19:  24 r20:  14 r21:  19 r22:  25 r23:   5 
r24:  27 r25:   5 r26: 288 r27: 112 r28:  84 r29:   2 r30: 696 r31: 269 
x  :  86 y  : 305 z  :  52 
Registers used: 25 out of 35 (71.4%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  20 add   :  26 
adiw  :  42 and   :   2 andi  :  12 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  39 
brge  :   7 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   2 brmi  :   1 brne  :  81 brpl  :   1 brsh  :   7 brtc  :   3 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   1 bst   :   1 call  : 274 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  23 cls   :   0 clt   :   2 clv   :   0 clz   :   0 com   :   4 
cp    :  13 cpc   :  35 cpi   :  80 cpse  :   0 dec   :   8 des   :   0 
elpm  :   0 eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 
ijmp  :   0 in    :  15 inc   :   3 jmp   :  53 ld    :  88 ldd   : 141 
ldi   : 328 lds   :  15 lpm   :  15 lsl   :   8 lsr   :   0 mov   :  87 
movw  : 107 mul   :  10 muls  :   1 mulsu :   0 neg   :   2 nop   :   1 
or    :   2 ori   :  18 out   :  34 pop   :   6 push  :   6 rcall :  52 
ret   :  73 reti  :   2 rjmp  : 136 rol   :   8 ror   :   0 sbc   :   4 
sbci  :  59 sbi   :   4 sbic  :   0 sbis  :   0 sbiw  :  51 sbr   :   1 
sbrc  :   3 sbrs  :  13 sec   :   0 seh   :   0 sei   :   0 sen   :   0 
ser   :   0 ses   :   0 set   :   2 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    : 166 std   :  35 sts   :  20 sub   :   3 subi  :  73 
swap  :   0 tst   :   4 wdr   :   1 
Instructions used: 68 out of 117 (58.1%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0016c8   5414    418   5832  131072   4.4%
[.dseg] 0x000100 0x0005c2      0    194    194    4351   4.5%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 6 warnings
