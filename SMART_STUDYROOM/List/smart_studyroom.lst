
AVRASM ver. 2.1.30  C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm Wed Dec 08 13:04:50 2021

C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1061): warning: Register r5 already defined by the .DEF directive
C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1062): warning: Register r4 already defined by the .DEF directive
C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1063): warning: Register r7 already defined by the .DEF directive
C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1064): warning: Register r6 already defined by the .DEF directive
C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1065): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 14.745600 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _zero_flag=R5
                 	.DEF _ti_Cnt_1ms=R4
                 	.DEF _LCD_DelCnt_1ms=R7
                 	.DEF _Distance_cnt_1ms=R6
                 	.DEF _ch=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0165 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 031e 	JMP  _compare
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0582 	JMP  _timer0_comp
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 04cf 	JMP  _usart1_receive
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
000046 2710
000047 03e8
000048 0064
000049 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00004a 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00004b 1000
00004c 0100
00004d 0010
00004e 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x5A:
00004f f9c0
000050 b0a4
000051 9299
000052 d882      	.DB  0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xD8
000053 9080
000054 8388
000055 a1c4
000056 8e84      	.DB  0x80,0x90,0x88,0x83,0xC4,0xA1,0x84,0x8E
                 _0x5B:
000057 001f
000058 002f
000059 004f
C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1120): warning: .cseg .db misalignment - padding zero byte
00005a 008f      	.DB  0x1F,0x0,0x2F,0x0,0x4F,0x0,0x8F
                 _0xAF:
00005b 6d31
00005c 6e69
00005d 7967
C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1122): warning: .cseg .db misalignment - padding zero byte
00005e 0075      	.DB  0x31,0x6D,0x69,0x6E,0x67,0x79,0x75
                 _0xCE:
00005f 0000
000060 0000
000061 0000
000062 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000063 0000
000064 0000
000065 0000
000066 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000067 0000
000068 0000
000069 0000
00006a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006b 0000
00006c 0000
00006d 0000
00006e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006f 0000
000070 0000
000071 0000
000072 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000073 0000
000074 0000
000075 0000
000076 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000077 0000
000078 5858
000079 0158
00007a 0000      	.DB  0x0,0x0,0x58,0x58,0x58,0x1,0x0,0x0
00007b 0000
00007c 0000
00007d 0000
00007e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007f 0000
000080 0000
000081 0000
000082 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000083 0000
000084 0000
000085 0000
000086 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000087 0000
000088 0000
000089 0000
00008a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008b 0000
00008c 0000
00008d 0000
00008e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008f 0000
000090 0000
000091 0000
000092 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000093 0000
000094 0000
000095 0000
000096 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000097 0000
000098 0000
000099 0000
00009a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009b 0000
00009c 0000
00009d 0000
00009e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009f 0000      	.DB  0x0,0x0
                 _0x12D:
0000a0 0000
0000a1 0000
C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1142): warning: .cseg .db misalignment - padding zero byte
0000a2 0000      	.DB  0x0,0x0,0x0,0x0,0x0
                 _0x0:
0000a3 2020
0000a4 2020
0000a5 2020
0000a6 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0000a7 2020
0000a8 2020
0000a9 2020
0000aa 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0000ab 2020
0000ac 2020
0000ad 0a00
0000ae 6620      	.DB  0x20,0x20,0x20,0x20,0x0,0xA,0x20,0x66
0000af 7269
0000b0 7473
0000b1 7320
0000b2 6165      	.DB  0x69,0x72,0x73,0x74,0x20,0x73,0x65,0x61
0000b3 2074
0000b4 203a
0000b5 000a
0000b6 200a      	.DB  0x74,0x20,0x3A,0x20,0xA,0x0,0xA,0x20
0000b7 6553
0000b8 6f63
0000b9 646e
0000ba 7320      	.DB  0x53,0x65,0x63,0x6F,0x6E,0x64,0x20,0x73
0000bb 6165
0000bc 2074
0000bd 203a
0000be 000a      	.DB  0x65,0x61,0x74,0x20,0x3A,0x20,0xA,0x0
0000bf 200a
0000c0 6854
0000c1 7269
0000c2 2064      	.DB  0xA,0x20,0x54,0x68,0x69,0x72,0x64,0x20
0000c3 6573
0000c4 7461
0000c5 3a20
0000c6 0a20      	.DB  0x73,0x65,0x61,0x74,0x20,0x3A,0x20,0xA
0000c7 4300
0000c8 6f68
0000c9 736f
0000ca 2065      	.DB  0x0,0x43,0x68,0x6F,0x6F,0x73,0x65,0x20
0000cb 6553
0000cc 7461
0000cd 3100
0000ce 2020      	.DB  0x53,0x65,0x61,0x74,0x0,0x31,0x20,0x20
0000cf 3200
0000d0 2020
0000d1 3300
0000d2 2020      	.DB  0x0,0x32,0x20,0x20,0x0,0x33,0x20,0x20
0000d3 5300
0000d4 7574
0000d5 7964
0000d6 6f52      	.DB  0x0,0x53,0x74,0x75,0x64,0x79,0x52,0x6F
0000d7 6d6f
0000d8 2020
0000d9 3a34
0000da 554f      	.DB  0x6F,0x6D,0x20,0x20,0x34,0x3A,0x4F,0x55
0000db 0054
0000dc 3a31
0000dd 6325
0000de 3220      	.DB  0x54,0x0,0x31,0x3A,0x25,0x63,0x20,0x32
0000df 253a
0000e0 2063
0000e1 3a33
0000e2 6325      	.DB  0x3A,0x25,0x63,0x20,0x33,0x3A,0x25,0x63
0000e3 2500
0000e4 2564
0000e5 2564
0000e6 2564      	.DB  0x0,0x25,0x64,0x25,0x64,0x25,0x64,0x25
0000e7 2564
0000e8 2564
0000e9 2564
0000ea 2564      	.DB  0x64,0x25,0x64,0x25,0x64,0x25,0x64,0x25
0000eb 2564
0000ec 2564
0000ed 2564
0000ee 0064      	.DB  0x64,0x25,0x64,0x25,0x64,0x25,0x64,0x0
0000ef 6e49
0000f0 7570
0000f1 2074
0000f2 6850      	.DB  0x49,0x6E,0x70,0x75,0x74,0x20,0x50,0x68
0000f3 6e6f
0000f4 4e65
0000f5 6d75
0000f6 5300      	.DB  0x6F,0x6E,0x65,0x4E,0x75,0x6D,0x0,0x53
0000f7 6d6f
0000f8 6f65
0000f9 656e
0000fa 5520      	.DB  0x6F,0x6D,0x65,0x6F,0x6E,0x65,0x20,0x55
0000fb 6573
0000fc 0064
0000fd 6f44
0000fe 726f      	.DB  0x73,0x65,0x64,0x0,0x44,0x6F,0x6F,0x72
0000ff 4f20
000100 6570
000101 006e
000102 3a31      	.DB  0x20,0x4F,0x70,0x65,0x6E,0x0,0x31,0x3A
000103 6559
000104 2073
000105 3220
000106 4e3a      	.DB  0x59,0x65,0x73,0x20,0x20,0x32,0x3A,0x4E
000107 006f
000108 6d45
000109 7470
00010a 2079      	.DB  0x6F,0x0,0x45,0x6D,0x70,0x74,0x79,0x20
00010b 6553
00010c 7461
00010d 5500
00010e 6573      	.DB  0x53,0x65,0x61,0x74,0x0,0x55,0x73,0x65
00010f 2072
000110 6843
000111 6365
000112 006b      	.DB  0x72,0x20,0x43,0x68,0x65,0x63,0x6B,0x0
000113 6f47
000114 646f
000115 4220
000116 6579      	.DB  0x47,0x6F,0x6F,0x64,0x20,0x42,0x79,0x65
000117 5700
000118 6f72
000119 676e
00011a 5020      	.DB  0x0,0x57,0x72,0x6F,0x6E,0x67,0x20,0x50
00011b 7361
00011c 7773
00011d 726f
00011e 0064      	.DB  0x61,0x73,0x73,0x77,0x6F,0x72,0x64,0x0
                 
                 __GLOBAL_INI_TBL:
00011f 0015      	.DW  0x15
000120 0500      	.DW  _0xA
000121 0146      	.DW  _0x0*2
                 
000122 0010      	.DW  0x10
000123 05ed      	.DW  _Port_char
000124 009e      	.DW  _0x5A*2
                 
000125 0007      	.DW  0x07
000126 05fd      	.DW  _Port_fnd
000127 00ae      	.DW  _0x5B*2
                 
000128 0007      	.DW  0x07
000129 0627      	.DW  _master_password
00012a 00b6      	.DW  _0xAF*2
                 
00012b 0011      	.DW  0x11
00012c 0515      	.DW  _0xBC
00012d 015b      	.DW  _0x0*2+21
                 
00012e 0012      	.DW  0x12
00012f 0526      	.DW  _0xBC+17
000130 016c      	.DW  _0x0*2+38
                 
000131 0011      	.DW  0x11
000132 0538      	.DW  _0xBC+35
000133 017e      	.DW  _0x0*2+56
                 
000134 000c      	.DW  0x0C
000135 0549      	.DW  _0xF7
000136 018f      	.DW  _0x0*2+73
                 
000137 0004      	.DW  0x04
000138 0555      	.DW  _0xF7+12
000139 019b      	.DW  _0x0*2+85
                 
00013a 0004      	.DW  0x04
00013b 0559      	.DW  _0xF7+16
00013c 019f      	.DW  _0x0*2+89
                 
00013d 0004      	.DW  0x04
00013e 055d      	.DW  _0xF7+20
00013f 01a3      	.DW  _0x0*2+93
                 
000140 0011      	.DW  0x11
000141 0561      	.DW  _0xF7+24
000142 01a7      	.DW  _0x0*2+97
                 
000143 000f      	.DW  0x0F
000144 0572      	.DW  _0xF7+41
000145 01de      	.DW  _0x0*2+152
                 
000146 000d      	.DW  0x0D
000147 0581      	.DW  _0xF7+56
000148 01ed      	.DW  _0x0*2+167
                 
000149 000a      	.DW  0x0A
00014a 058e      	.DW  _0xF7+69
00014b 01fa      	.DW  _0x0*2+180
                 
00014c 000c      	.DW  0x0C
00014d 0598      	.DW  _0xF7+79
00014e 0204      	.DW  _0x0*2+190
                 
00014f 000b      	.DW  0x0B
000150 05a4      	.DW  _0xF7+91
000151 0210      	.DW  _0x0*2+202
                 
000152 000c      	.DW  0x0C
000153 05af      	.DW  _0xF7+102
000154 0204      	.DW  _0x0*2+190
                 
000155 000b      	.DW  0x0B
000156 05bb      	.DW  _0xF7+114
000157 021b      	.DW  _0x0*2+213
                 
000158 0009      	.DW  0x09
000159 05c6      	.DW  _0xF7+125
00015a 0226      	.DW  _0x0*2+224
                 
00015b 000f      	.DW  0x0F
00015c 05cf      	.DW  _0xF7+134
00015d 022f      	.DW  _0x0*2+233
                 
00015e 000f      	.DW  0x0F
00015f 05de      	.DW  _0xF7+149
000160 01de      	.DW  _0x0*2+152
                 
000161 0005      	.DW  0x05
000162 0005      	.DW  0x05
000163 0140      	.DW  _0x12D*2
                 
                 _0xFFFFFFFF:
000164 0000      	.DW  0
                 
                 __RESET:
000165 94f8      	CLI
000166 27ee      	CLR  R30
000167 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000168 e0f1      	LDI  R31,1
000169 bff5      	OUT  MCUCR,R31
00016a bfe5      	OUT  MCUCR,R30
00016b 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
00016d e1f8      	LDI  R31,0x18
00016e bdf1      	OUT  WDTCR,R31
00016f bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000170 e08d      	LDI  R24,(14-2)+1
000171 e0a2      	LDI  R26,2
000172 27bb      	CLR  R27
                 __CLEAR_REG:
000173 93ed      	ST   X+,R30
000174 958a      	DEC  R24
000175 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000176 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000177 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000178 e0a0      	LDI  R26,LOW(__SRAM_START)
000179 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00017a 93ed      	ST   X+,R30
00017b 9701      	SBIW R24,1
00017c f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00017d e3ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00017e e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00017f 9185      	LPM  R24,Z+
000180 9195      	LPM  R25,Z+
000181 9700      	SBIW R24,0
000182 f061      	BREQ __GLOBAL_INI_END
000183 91a5      	LPM  R26,Z+
000184 91b5      	LPM  R27,Z+
000185 9005      	LPM  R0,Z+
000186 9015      	LPM  R1,Z+
000187 01bf      	MOVW R22,R30
000188 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000189 9005      	LPM  R0,Z+
00018a 920d      	ST   X+,R0
00018b 9701      	SBIW R24,1
00018c f7e1      	BRNE __GLOBAL_INI_LOOP
00018d 01fb      	MOVW R30,R22
00018e cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
00018f bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000190 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000191 bfed      	OUT  SPL,R30
000192 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000193 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000194 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000195 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000196 940c 05ad 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include "lcd.h"
                 
                 	.CSEG
                 _LCD_PORT_Init:
000198 efef      	LDI  R30,LOW(255)
000199 bbea      	OUT  0x1A,R30
00019a e1ef      	LDI  R30,LOW(31)
00019b 93e0 0064 	STS  100,R30
00019d 9508      	RET
                 _LCD_Data:
                 ;	ch -> Y+0
00019e 91e0 0065 	LDS  R30,101
0001a0 60e4      	ORI  R30,4
0001a1 940e 0a72 	CALL SUBOPT_0x0
0001a3 7fed      	ANDI R30,0xFD
0001a4 940e 0a72 	CALL SUBOPT_0x0
0001a6 940e 0a77 	CALL SUBOPT_0x1
0001a8 c318      	RJMP _0x2060005
                 _LCD_Comm:
                 ;	ch -> Y+0
0001a9 91e0 0065 	LDS  R30,101
0001ab 7feb      	ANDI R30,0xFB
0001ac 940e 0a72 	CALL SUBOPT_0x0
0001ae 7fed      	ANDI R30,0xFD
0001af 940e 0a72 	CALL SUBOPT_0x0
0001b1 940e 0a77 	CALL SUBOPT_0x1
0001b3 c30d      	RJMP _0x2060005
                 _LCD_delay:
                 ;	ms -> Y+0
0001b4 81e8      	LD   R30,Y
0001b5 e0f0      	LDI  R31,0
0001b6 940e 0a88 	CALL SUBOPT_0x2
0001b8 c308      	RJMP _0x2060005
                 _LCD_Pos:
                 ;	col -> Y+1
                 ;	row -> Y+0
0001b9 81e9      	LDD  R30,Y+1
0001ba e4a0      	LDI  R26,LOW(64)
0001bb 02ea      	MULS R30,R26
0001bc 01f0      	MOVW R30,R0
0001bd 81a8      	LD   R26,Y
0001be 0fea      	ADD  R30,R26
0001bf 68e0      	ORI  R30,0x80
0001c0 93ea      	ST   -Y,R30
0001c1 dfe7      	RCALL _LCD_Comm
0001c2 c30a      	RJMP _0x2060004
                 _LCD_Char:
                 ;	c -> Y+0
0001c3 81e8      	LD   R30,Y
0001c4 93ea      	ST   -Y,R30
0001c5 dfd8      	RCALL _LCD_Data
0001c6 940e 0a8c 	CALL SUBOPT_0x3
0001c8 c2f8      	RJMP _0x2060005
                 _LCD_Str:
                 ;	*str -> Y+0
                 _0x3:
0001c9 81a8      	LD   R26,Y
0001ca 81b9      	LDD  R27,Y+1
0001cb 91ec      	LD   R30,X
0001cc 30e0      	CPI  R30,0
0001cd f029      	BREQ _0x5
0001ce 93ea      	ST   -Y,R30
0001cf dff3      	RCALL _LCD_Char
0001d0 940e 0a8f 	CALL SUBOPT_0x4
0001d2 cff6      	RJMP _0x3
                 _0x5:
0001d3 c2f9      	RJMP _0x2060004
                 ;	*str -> Y+1
                 ;	loop_count -> R17
                 
                 	.DSEG
                 _0xA:
000500           	.BYTE 0x15
                 
                 	.CSEG
                 _LCD_Clear:
0001d4 e0e1      	LDI  R30,LOW(1)
0001d5 93ea      	ST   -Y,R30
0001d6 dfd2      	RCALL _LCD_Comm
0001d7 e0e2      	LDI  R30,LOW(2)
0001d8 93ea      	ST   -Y,R30
0001d9 dfda      	RCALL _LCD_delay
0001da 9508      	RET
                 _LCD_Init:
0001db dfbc      	RCALL _LCD_PORT_Init
0001dc 940e 0a95 	CALL SUBOPT_0x5
0001de 940e 0a95 	CALL SUBOPT_0x5
0001e0 940e 0a95 	CALL SUBOPT_0x5
0001e2 e0ee      	LDI  R30,LOW(14)
0001e3 940e 0a9d 	CALL SUBOPT_0x6
0001e5 e0e6      	LDI  R30,LOW(6)
0001e6 940e 0a9d 	CALL SUBOPT_0x6
0001e8 dfeb      	RCALL _LCD_Clear
0001e9 9508      	RET
                 ;	p -> Y+0
                 ;	p -> Y+0
                 ;#include "twi.h"
                 _Init_TWI:
0001ea e3e2      	LDI  R30,LOW(50)
0001eb 93e0 0070 	STS  112,R30
0001ed e0e4      	LDI  R30,LOW(4)
0001ee 93e0 0074 	STS  116,R30
0001f0 e0e0      	LDI  R30,LOW(0)
0001f1 93e0 0071 	STS  113,R30
0001f3 9508      	RET
                 _TWI_TransCheck_ACK:
0001f4 931a      	ST   -Y,R17
0001f5 930a      	ST   -Y,R16
                 ;	Stat -> Y+2
                 ;	ExtDev_ErrCnt -> R16,R17
                +
0001f6 e000     +LDI R16 , LOW ( 0 )
0001f7 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x12:
0001f8 91e0 0074 	LDS  R30,116
0001fa 78e0      	ANDI R30,LOW(0x80)
0001fb f461      	BRNE _0x14
0001fc 01d8      	MOVW R26,R16
                +
0001fd 5f0f     +SUBI R16 , LOW ( - 1 )
0001fe 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0001ff 3da1      	CPI  R26,LOW(0x7D1)
000200 e0e7      	LDI  R30,HIGH(0x7D1)
000201 07be      	CPC  R27,R30
000202 f020      	BRLO _0x15
000203 e0e1      	LDI  R30,LOW(1)
000204 8119      	LDD  R17,Y+1
000205 8108      	LDD  R16,Y+0
000206 c047      	RJMP _0x206000A
                 _0x15:
000207 cff0      	RJMP _0x12
                 _0x14:
000208 91e0 0071 	LDS  R30,113
00020a 7fe8      	ANDI R30,LOW(0xF8)
00020b 2fae      	MOV  R26,R30
00020c 81ea      	LDD  R30,Y+2
00020d 17ea      	CP   R30,R26
00020e f021      	BREQ _0x16
00020f e0e2      	LDI  R30,LOW(2)
000210 8119      	LDD  R17,Y+1
000211 8108      	LDD  R16,Y+0
000212 c03b      	RJMP _0x206000A
                 _0x16:
000213 e0e0      	LDI  R30,LOW(0)
000214 8119      	LDD  R17,Y+1
000215 8108      	LDD  R16,Y+0
000216 c037      	RJMP _0x206000A
                 _TWI_Start:
000217 eae4      	LDI  R30,LOW(164)
000218 93e0 0074 	STS  116,R30
00021a e0e8      	LDI  R30,LOW(8)
00021b c014      	RJMP _0x206000B
                 _TWI_Write_SLAW:
                 ;	Addr -> Y+0
00021c 940e 0aa4 	CALL SUBOPT_0x7
00021e e1e8      	LDI  R30,LOW(24)
00021f 93ea      	ST   -Y,R30
000220 dfd3      	RCALL _TWI_TransCheck_ACK
000221 c29f      	RJMP _0x2060005
                 _TWI_Write_Data:
                 ;	Data -> Y+0
000222 940e 0aa4 	CALL SUBOPT_0x7
000224 e2e8      	LDI  R30,LOW(40)
000225 93ea      	ST   -Y,R30
000226 dfcd      	RCALL _TWI_TransCheck_ACK
000227 c299      	RJMP _0x2060005
                 _TWI_Stop:
000228 e9e4      	LDI  R30,LOW(148)
000229 93e0 0074 	STS  116,R30
00022b 9508      	RET
                 _TWI_Restart:
00022c eae4      	LDI  R30,LOW(164)
00022d 93e0 0074 	STS  116,R30
00022f e1e0      	LDI  R30,LOW(16)
                 _0x206000B:
000230 93ea      	ST   -Y,R30
000231 dfc2      	RCALL _TWI_TransCheck_ACK
000232 9508      	RET
                 ;	Data -> Y+2
                 ;	Addr -> Y+1
                 ;	ret_err -> R17
                 _TWI_Write_SLAR:
                 ;	Addr -> Y+0
000233 81e8      	LD   R30,Y
000234 60e1      	ORI  R30,1
000235 93e0 0073 	STS  115,R30
000237 e8e4      	LDI  R30,LOW(132)
000238 93e0 0074 	STS  116,R30
00023a e4e0      	LDI  R30,LOW(64)
00023b 93ea      	ST   -Y,R30
00023c dfb7      	RCALL _TWI_TransCheck_ACK
00023d c283      	RJMP _0x2060005
                 ;	*Data -> Y+1
                 ;	ret_err -> R17
                 _TWI_Read_Data_NACK:
00023e 931a      	ST   -Y,R17
                 ;	*Data -> Y+1
                 ;	ret_err -> R17
00023f e010      	LDI  R17,0
000240 e8e4      	LDI  R30,LOW(132)
000241 93e0 0074 	STS  116,R30
000243 e5e8      	LDI  R30,LOW(88)
000244 93ea      	ST   -Y,R30
000245 dfae      	RCALL _TWI_TransCheck_ACK
000246 2f1e      	MOV  R17,R30
000247 91e0 0073 	LDS  R30,115
000249 81a9      	LDD  R26,Y+1
00024a 81ba      	LDD  R27,Y+1+1
00024b 93ec      	ST   X,R30
00024c e0e0      	LDI  R30,LOW(0)
00024d 8118      	LDD  R17,Y+0
                 _0x206000A:
00024e 9623      	ADIW R28,3
00024f 9508      	RET
                 ;	Addr -> Y+4
                 ;	*Data -> Y+2
                 ;	rec_data -> R17
                 ;	ret_err -> R16
                 ;	Slave_Addr -> Y+0
                 ;	*Data -> Y+1
                 ;	ret_err -> R17
                 ;	*Data -> Y+2
                 ;	ret_err -> R17
                 ;	rec_data -> R16
                 ;	devAddr -> Y+5
                 ;	regAddr -> Y+4
                 ;	*Data -> Y+2
                 ;	rec_data -> R17
                 ;	ret_err -> R16
                 ;#include "srf02.h"
                 _SRF02_I2C_Write:
000250 931a      	ST   -Y,R17
                 ;	address -> Y+3
                 ;	reg -> Y+2
                 ;	data -> Y+1
                 ;	ret_err -> R17
000251 e010      	LDI  R17,0
000252 dfc4      	RCALL _TWI_Start
000253 2f1e      	MOV  R17,R30
000254 81eb      	LDD  R30,Y+3
000255 93ea      	ST   -Y,R30
000256 dfc5      	RCALL _TWI_Write_SLAW
000257 2f1e      	MOV  R17,R30
000258 3010      	CPI  R17,0
000259 f019      	BREQ _0x29
00025a 2fe1      	MOV  R30,R17
00025b 8118      	LDD  R17,Y+0
00025c c0d4      	RJMP _0x2060008
                 _0x29:
00025d 81ea      	LDD  R30,Y+2
00025e 93ea      	ST   -Y,R30
00025f dfc2      	RCALL _TWI_Write_Data
000260 2f1e      	MOV  R17,R30
000261 3010      	CPI  R17,0
000262 f019      	BREQ _0x2A
000263 2fe1      	MOV  R30,R17
000264 8118      	LDD  R17,Y+0
000265 c0cb      	RJMP _0x2060008
                 _0x2A:
000266 81e9      	LDD  R30,Y+1
000267 93ea      	ST   -Y,R30
000268 dfb9      	RCALL _TWI_Write_Data
000269 2f1e      	MOV  R17,R30
00026a 3010      	CPI  R17,0
00026b f019      	BREQ _0x2B
00026c 2fe1      	MOV  R30,R17
00026d 8118      	LDD  R17,Y+0
00026e c0c2      	RJMP _0x2060008
                 _0x2B:
00026f dfb8      	RCALL _TWI_Stop
000270 e0e0      	LDI  R30,LOW(0)
000271 8118      	LDD  R17,Y+0
000272 c0be      	RJMP _0x2060008
                 _SRF02_I2C_Read:
000273 931a      	ST   -Y,R17
000274 930a      	ST   -Y,R16
                 ;	address -> Y+5
                 ;	reg -> Y+4
                 ;	*Data -> Y+2
                 ;	read_data -> R17
                 ;	ret_err -> R16
000275 e010      	LDI  R17,0
000276 e000      	LDI  R16,0
000277 df9f      	RCALL _TWI_Start
000278 2f0e      	MOV  R16,R30
000279 81ed      	LDD  R30,Y+5
00027a 93ea      	ST   -Y,R30
00027b dfa0      	RCALL _TWI_Write_SLAW
00027c 2f0e      	MOV  R16,R30
00027d 3000      	CPI  R16,0
00027e f021      	BREQ _0x2C
00027f 2fe0      	MOV  R30,R16
000280 8119      	LDD  R17,Y+1
000281 8108      	LDD  R16,Y+0
000282 c1b0      	RJMP _0x2060006
                 _0x2C:
000283 81ec      	LDD  R30,Y+4
000284 93ea      	ST   -Y,R30
000285 df9c      	RCALL _TWI_Write_Data
000286 2f0e      	MOV  R16,R30
000287 3000      	CPI  R16,0
000288 f021      	BREQ _0x2D
000289 2fe0      	MOV  R30,R16
00028a 8119      	LDD  R17,Y+1
00028b 8108      	LDD  R16,Y+0
00028c c1a6      	RJMP _0x2060006
                 _0x2D:
00028d df9e      	RCALL _TWI_Restart
00028e 2f0e      	MOV  R16,R30
00028f 9ac3      	SBI  0x18,3
000290 3000      	CPI  R16,0
000291 f021      	BREQ _0x2E
000292 2fe0      	MOV  R30,R16
000293 8119      	LDD  R17,Y+1
000294 8108      	LDD  R16,Y+0
000295 c19d      	RJMP _0x2060006
                 _0x2E:
000296 81ed      	LDD  R30,Y+5
000297 93ea      	ST   -Y,R30
000298 df9a      	RCALL _TWI_Write_SLAR
000299 2f0e      	MOV  R16,R30
00029a 9ac4      	SBI  0x18,4
00029b 3000      	CPI  R16,0
00029c f021      	BREQ _0x2F
00029d 2fe0      	MOV  R30,R16
00029e 8119      	LDD  R17,Y+1
00029f 8108      	LDD  R16,Y+0
0002a0 c192      	RJMP _0x2060006
                 _0x2F:
0002a1 b7ed      	IN   R30,SPL
0002a2 b7fe      	IN   R31,SPH
0002a3 93fa      	ST   -Y,R31
0002a4 93ea      	ST   -Y,R30
0002a5 931f      	PUSH R17
0002a6 df97      	RCALL _TWI_Read_Data_NACK
0002a7 911f      	POP  R17
0002a8 2f0e      	MOV  R16,R30
0002a9 9ac5      	SBI  0x18,5
0002aa 3000      	CPI  R16,0
0002ab f021      	BREQ _0x30
0002ac 2fe0      	MOV  R30,R16
0002ad 8119      	LDD  R17,Y+1
0002ae 8108      	LDD  R16,Y+0
0002af c183      	RJMP _0x2060006
                 _0x30:
0002b0 df77      	RCALL _TWI_Stop
0002b1 81aa      	LDD  R26,Y+2
0002b2 81bb      	LDD  R27,Y+2+1
0002b3 931c      	ST   X,R17
0002b4 e0e0      	LDI  R30,LOW(0)
0002b5 8119      	LDD  R17,Y+1
0002b6 8108      	LDD  R16,Y+0
0002b7 c17b      	RJMP _0x2060006
                 _startRanging:
                 ;	addr -> Y+0
0002b8 81e8      	LD   R30,Y
0002b9 93ea      	ST   -Y,R30
0002ba e0e0      	LDI  R30,LOW(0)
0002bb 93ea      	ST   -Y,R30
0002bc e5e1      	LDI  R30,LOW(81)
0002bd 93ea      	ST   -Y,R30
0002be df91      	RCALL _SRF02_I2C_Write
0002bf c201      	RJMP _0x2060005
                 _getRange:
0002c0 931a      	ST   -Y,R17
0002c1 930a      	ST   -Y,R16
                 ;	addr -> Y+4
                 ;	*pDistance -> Y+2
                 ;	temp -> R17
                 ;	res -> R16
0002c2 e000      	LDI  R16,0
0002c3 81ec      	LDD  R30,Y+4
0002c4 93ea      	ST   -Y,R30
0002c5 e0e2      	LDI  R30,LOW(2)
0002c6 93ea      	ST   -Y,R30
0002c7 b7ed      	IN   R30,SPL
0002c8 b7fe      	IN   R31,SPH
0002c9 93fa      	ST   -Y,R31
0002ca 93ea      	ST   -Y,R30
0002cb 931f      	PUSH R17
0002cc dfa6      	RCALL _SRF02_I2C_Read
0002cd 911f      	POP  R17
0002ce 2f0e      	MOV  R16,R30
0002cf 3000      	CPI  R16,0
0002d0 f509      	BRNE _0x2060009
0002d1 2ff1      	MOV  R31,R17
0002d2 e0e0      	LDI  R30,LOW(0)
0002d3 81aa      	LDD  R26,Y+2
0002d4 81bb      	LDD  R27,Y+2+1
0002d5 93ed      	ST   X+,R30
0002d6 93fc      	ST   X,R31
0002d7 81ec      	LDD  R30,Y+4
0002d8 93ea      	ST   -Y,R30
0002d9 e0e3      	LDI  R30,LOW(3)
0002da 93ea      	ST   -Y,R30
0002db b7ed      	IN   R30,SPL
0002dc b7fe      	IN   R31,SPH
0002dd 93fa      	ST   -Y,R31
0002de 93ea      	ST   -Y,R30
0002df 931f      	PUSH R17
0002e0 df92      	RCALL _SRF02_I2C_Read
0002e1 911f      	POP  R17
0002e2 2f0e      	MOV  R16,R30
0002e3 3000      	CPI  R16,0
0002e4 f469      	BRNE _0x2060009
0002e5 81aa      	LDD  R26,Y+2
0002e6 81bb      	LDD  R27,Y+2+1
0002e7 010d      	MOVW R0,R26
0002e8 940e 0c62 	CALL __GETW1P
0002ea 01df      	MOVW R26,R30
0002eb 940e 0aab 	CALL SUBOPT_0x8
0002ed 2bea      	OR   R30,R26
0002ee 2bfb      	OR   R31,R27
0002ef 01d0      	MOVW R26,R0
0002f0 93ed      	ST   X+,R30
0002f1 93fc      	ST   X,R31
                 _0x2060009:
0002f2 2fe0      	MOV  R30,R16
0002f3 e0f0      	LDI  R31,0
0002f4 8119      	LDD  R17,Y+1
0002f5 8108      	LDD  R16,Y+0
0002f6 9625      	ADIW R28,5
0002f7 9508      	RET
                 ;	ori -> Y+2
                 ;	des -> Y+1
                 ;	res -> R17
                 ;#include "Keypad.h"
                 
                 	.DSEG
                 
                 	.CSEG
                 _FND_PORT_Init:
0002f8 b1e2      	IN   R30,0x2
0002f9 6fe0      	ORI  R30,LOW(0xF0)
0002fa b9e2      	OUT  0x2,R30
0002fb 91e0 0061 	LDS  R30,97
0002fd 6fef      	ORI  R30,LOW(0xFF)
0002fe 93e0 0061 	STS  97,R30
000300 b3e4      	IN   R30,0x14
000301 60ef      	ORI  R30,LOW(0xF)
000302 bbe4      	OUT  0x14,R30
000303 91e0 0064 	LDS  R30,100
000305 61e0      	ORI  R30,0x10
000306 93e0 0064 	STS  100,R30
000308 9abd      	SBI  0x17,5
000309 b3e5      	IN   R30,0x15
00030a 6fef      	ORI  R30,LOW(0xFF)
00030b bbe5      	OUT  0x15,R30
00030c 9508      	RET
                 _Init_Timer1:
00030d e8e2      	LDI  R30,LOW(130)
00030e bdef      	OUT  0x2F,R30
00030f e1ea      	LDI  R30,LOW(26)
000310 bdee      	OUT  0x2E,R30
000311 e0e0      	LDI  R30,LOW(0)
000312 e0f0      	LDI  R31,HIGH(0)
000313 bdfd      	OUT  0x2C+1,R31
000314 bdec      	OUT  0x2C,R30
000315 efef      	LDI  R30,LOW(36863)
000316 e8ff      	LDI  R31,HIGH(36863)
000317 bdf7      	OUT  0x26+1,R31
000318 bde6      	OUT  0x26,R30
000319 940e 0aae 	CALL SUBOPT_0x9
00031b b7e7      	IN   R30,0x37
00031c 61e0      	ORI  R30,0x10
00031d c262      	RJMP _0x2060003
                 _compare:
00031e 0000      	nop
00031f 9518      	RETI
                 _myDelay_us:
000320 931a      	ST   -Y,R17
000321 930a      	ST   -Y,R16
                 ;	delay -> Y+2
                 ;	loop -> R16,R17
                +
000322 e000     +LDI R16 , LOW ( 0 )
000323 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x5D:
000324 81ea      	LDD  R30,Y+2
000325 81fb      	LDD  R31,Y+2+1
000326 170e      	CP   R16,R30
000327 071f      	CPC  R17,R31
000328 f430      	BRSH _0x5E
                +
000329 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
00032a 958a     +DEC R24
00032b f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
                +
00032c 5f0f     +SUBI R16 , LOW ( - 1 )
00032d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00032e cff5      	RJMP _0x5D
                 _0x5E:
00032f 8119      	LDD  R17,Y+1
000330 8108      	LDD  R16,Y+0
                 _0x2060008:
000331 9624      	ADIW R28,4
000332 9508      	RET
                 _Buzzer_play:
000333 940e 0c7c 	CALL __SAVELOCR4
                 ;	delay -> Y+4
                 ;	loop -> R16,R17
                 ;	Play_Tim -> R19
000335 e030      	LDI  R19,0
000336 81ec      	LDD  R30,Y+4
000337 81fd      	LDD  R31,Y+4+1
000338 e1a0      	LDI  R26,LOW(10000)
000339 e2b7      	LDI  R27,HIGH(10000)
00033a 940e 0c2b 	CALL __DIVW21U
00033c 2f3e      	MOV  R19,R30
                +
00033d e000     +LDI R16 , LOW ( 0 )
00033e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x60:
00033f 2fe3      	MOV  R30,R19
000340 01d8      	MOVW R26,R16
000341 e0f0      	LDI  R31,0
000342 17ae      	CP   R26,R30
000343 07bf      	CPC  R27,R31
000344 f468      	BRSH _0x61
000345 91e0 0065 	LDS  R30,101
000347 61e0      	ORI  R30,0x10
000348 940e 0ab3 	CALL SUBOPT_0xA
00034a 91e0 0065 	LDS  R30,101
00034c 7eef      	ANDI R30,0xEF
00034d 940e 0ab3 	CALL SUBOPT_0xA
                +
00034f 5f0f     +SUBI R16 , LOW ( - 1 )
000350 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000351 cfed      	RJMP _0x60
                 _0x61:
000352 c0de      	RJMP _0x2060007
                 _KeyScan:
000353 940e 0c7a 	CALL __SAVELOCR6
                 ;	key_scan_line -> R16,R17
                 ;	key_scan_loop -> R19
                 ;	getPinData -> R18
                 ;	key_num -> R20,R21
                +
000355 ef0e     +LDI R16 , LOW ( 254 )
000356 e010     +LDI R17 , HIGH ( 254 )
                 	__GETWRN 16,17,254
000357 e030      	LDI  R19,0
000358 e020      	LDI  R18,0
                +
000359 e040     +LDI R20 , LOW ( 0 )
00035a e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
00035b e030      	LDI  R19,LOW(0)
                 _0x63:
00035c 3034      	CPI  R19,4
00035d f5b8      	BRSH _0x64
00035e bb05      	OUT  0x15,R16
                +
00035f e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000360 958a     +DEC R24
000361 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
000362 b3e3      	IN   R30,0x13
000363 7fe0      	ANDI R30,LOW(0xF0)
000364 2f2e      	MOV  R18,R30
000365 3020      	CPI  R18,0
000366 f151      	BREQ _0x65
000367 2fe2      	MOV  R30,R18
000368 e0f0      	LDI  R31,0
000369 31e0      	CPI  R30,LOW(0x10)
00036a e0a0      	LDI  R26,HIGH(0x10)
00036b 07fa      	CPC  R31,R26
00036c f429      	BRNE _0x69
00036d e0e4      	LDI  R30,LOW(4)
00036e 9fe3      	MUL  R30,R19
00036f 01f0      	MOVW R30,R0
000370 9631      	ADIW R30,1
000371 c01a      	RJMP _0x126
                 _0x69:
000372 32e0      	CPI  R30,LOW(0x20)
000373 e0a0      	LDI  R26,HIGH(0x20)
000374 07fa      	CPC  R31,R26
000375 f429      	BRNE _0x6A
000376 e0e4      	LDI  R30,LOW(4)
000377 9fe3      	MUL  R30,R19
000378 01f0      	MOVW R30,R0
000379 9632      	ADIW R30,2
00037a c011      	RJMP _0x126
                 _0x6A:
00037b 34e0      	CPI  R30,LOW(0x40)
00037c e0a0      	LDI  R26,HIGH(0x40)
00037d 07fa      	CPC  R31,R26
00037e f429      	BRNE _0x6B
00037f e0e4      	LDI  R30,LOW(4)
000380 9fe3      	MUL  R30,R19
000381 01f0      	MOVW R30,R0
000382 9633      	ADIW R30,3
000383 c008      	RJMP _0x126
                 _0x6B:
000384 38e0      	CPI  R30,LOW(0x80)
000385 e0a0      	LDI  R26,HIGH(0x80)
000386 07fa      	CPC  R31,R26
000387 f429      	BRNE _0x68
000388 e0e4      	LDI  R30,LOW(4)
000389 9fe3      	MUL  R30,R19
00038a 01f0      	MOVW R30,R0
00038b 9634      	ADIW R30,4
                 _0x126:
00038c 01af      	MOVW R20,R30
                 _0x68:
00038d 2fe4      	MOV  R30,R20
00038e 940e 0c81 	CALL __LOADLOCR6
000390 c0a2      	RJMP _0x2060006
                 _0x65:
000391 0f00      	LSL  R16
000392 1f11      	ROL  R17
000393 5f3f      	SUBI R19,-1
000394 cfc7      	RJMP _0x63
                 _0x64:
000395 940e 0c81 	CALL __LOADLOCR6
000397 c09b      	RJMP _0x2060006
                 _Changenum:
000398 931a      	ST   -Y,R17
                 ;	num -> Y+1
                 ;	return_num -> R17
000399 e010      	LDI  R17,0
00039a 81e9      	LDD  R30,Y+1
00039b 30e0      	CPI  R30,0
00039c f411      	BRNE _0x6D
00039d e010      	LDI  R17,LOW(0)
00039e c049      	RJMP _0x6E
                 _0x6D:
00039f 940e 0abb 	CALL SUBOPT_0xB
0003a1 9730      	SBIW R30,0
0003a2 f421      	BRNE _0x6F
0003a3 940e 0ac2 	CALL SUBOPT_0xC
0003a5 5fe4      	SUBI R30,-LOW(12)
0003a6 c040      	RJMP _0x127
                 _0x6F:
0003a7 940e 0ac2 	CALL SUBOPT_0xC
0003a9 9730      	SBIW R30,0
0003aa f449      	BRNE _0x71
0003ab 940e 0ac2 	CALL SUBOPT_0xC
0003ad 0fee      	LSL  R30
0003ae 0fee      	LSL  R30
0003af 2f6e      	MOV  R22,R30
0003b0 940e 0abb 	CALL SUBOPT_0xB
0003b2 0fe6      	ADD  R30,R22
0003b3 c033      	RJMP _0x127
                 _0x71:
0003b4 940e 0ac2 	CALL SUBOPT_0xC
0003b6 30e1      	CPI  R30,LOW(0x1)
0003b7 e0a0      	LDI  R26,HIGH(0x1)
0003b8 07fa      	CPC  R31,R26
0003b9 f451      	BRNE _0x73
0003ba 940e 0ac2 	CALL SUBOPT_0xC
0003bc 940e 0ac9 	CALL SUBOPT_0xD
0003be 01db      	MOVW R26,R22
0003bf 0fae      	ADD  R26,R30
0003c0 1fbf      	ADC  R27,R31
0003c1 e0e1      	LDI  R30,LOW(1)
0003c2 e0f0      	LDI  R31,HIGH(1)
0003c3 c01f      	RJMP _0x128
                 _0x73:
0003c4 940e 0ac2 	CALL SUBOPT_0xC
0003c6 30e2      	CPI  R30,LOW(0x2)
0003c7 e0a0      	LDI  R26,HIGH(0x2)
0003c8 07fa      	CPC  R31,R26
0003c9 f451      	BRNE _0x75
0003ca 940e 0ac2 	CALL SUBOPT_0xC
0003cc 940e 0ac9 	CALL SUBOPT_0xD
0003ce 01db      	MOVW R26,R22
0003cf 0fae      	ADD  R26,R30
0003d0 1fbf      	ADC  R27,R31
0003d1 e0e2      	LDI  R30,LOW(2)
0003d2 e0f0      	LDI  R31,HIGH(2)
0003d3 c00f      	RJMP _0x128
                 _0x75:
0003d4 940e 0ac2 	CALL SUBOPT_0xC
0003d6 30e3      	CPI  R30,LOW(0x3)
0003d7 e0a0      	LDI  R26,HIGH(0x3)
0003d8 07fa      	CPC  R31,R26
0003d9 f471      	BRNE _0x77
0003da 940e 0ac2 	CALL SUBOPT_0xC
0003dc 940e 0ac9 	CALL SUBOPT_0xD
0003de 01db      	MOVW R26,R22
0003df 0fae      	ADD  R26,R30
0003e0 1fbf      	ADC  R27,R31
0003e1 e0e3      	LDI  R30,LOW(3)
0003e2 e0f0      	LDI  R31,HIGH(3)
                 _0x128:
0003e3 940e 0c6f 	CALL __SWAPW12
0003e5 1bea      	SUB  R30,R26
0003e6 0bfb      	SBC  R31,R27
                 _0x127:
0003e7 2f1e      	MOV  R17,R30
                 _0x77:
                 _0x6E:
0003e8 301b      	CPI  R17,11
0003e9 f419      	BRNE _0x78
0003ea e010      	LDI  R17,LOW(0)
0003eb e0e1      	LDI  R30,LOW(1)
0003ec 2e5e      	MOV  R5,R30
                 _0x78:
0003ed 2fe1      	MOV  R30,R17
0003ee 8118      	LDD  R17,Y+0
0003ef c0dd      	RJMP _0x2060004
                 _OUTFND:
0003f0 940e 0c7c 	CALL __SAVELOCR4
                 ;	t -> Y+4
                 ;	FND0 -> R17
                 ;	FND1 -> R16
                 ;	FND2 -> R19
                 ;	FND3 -> R18
0003f2 81ac      	LDD  R26,Y+4
0003f3 81bd      	LDD  R27,Y+4+1
0003f4 eee8      	LDI  R30,LOW(1000)
0003f5 e0f3      	LDI  R31,HIGH(1000)
0003f6 940e 0c2b 	CALL __DIVW21U
0003f8 2f2e      	MOV  R18,R30
0003f9 81ac      	LDD  R26,Y+4
0003fa 81bd      	LDD  R27,Y+4+1
0003fb eee8      	LDI  R30,LOW(1000)
0003fc e0f3      	LDI  R31,HIGH(1000)
0003fd 940e 0c43 	CALL __MODW21U
0003ff 01df      	MOVW R26,R30
000400 e6e4      	LDI  R30,LOW(100)
000401 e0f0      	LDI  R31,HIGH(100)
000402 940e 0c2b 	CALL __DIVW21U
000404 2f3e      	MOV  R19,R30
000405 81ac      	LDD  R26,Y+4
000406 81bd      	LDD  R27,Y+4+1
000407 e6e4      	LDI  R30,LOW(100)
000408 e0f0      	LDI  R31,HIGH(100)
000409 940e 0c43 	CALL __MODW21U
00040b 01df      	MOVW R26,R30
00040c e0ea      	LDI  R30,LOW(10)
00040d e0f0      	LDI  R31,HIGH(10)
00040e 940e 0c2b 	CALL __DIVW21U
000410 2f0e      	MOV  R16,R30
000411 81ac      	LDD  R26,Y+4
000412 81bd      	LDD  R27,Y+4+1
000413 e0ea      	LDI  R30,LOW(10)
000414 e0f0      	LDI  R31,HIGH(10)
000415 940e 0c43 	CALL __MODW21U
000417 2f1e      	MOV  R17,R30
000418 91e0 05fd 	LDS  R30,_Port_fnd
00041a b9e3      	OUT  0x3,R30
00041b 940e 0aab 	CALL SUBOPT_0x8
00041d 940e 0acd 	CALL SUBOPT_0xE
                +
00041f 91e0 05ff+LDS R30 , _Port_fnd + ( 2 )
                 	__GETB1MN _Port_fnd,2
000421 b9e3      	OUT  0x3,R30
000422 2fe0      	MOV  R30,R16
000423 940e 0ad3 	CALL SUBOPT_0xF
                +
000425 91e0 0601+LDS R30 , _Port_fnd + ( 4 )
                 	__GETB1MN _Port_fnd,4
000427 b9e3      	OUT  0x3,R30
000428 2fe3      	MOV  R30,R19
000429 940e 0ad3 	CALL SUBOPT_0xF
                +
00042b 91e0 0603+LDS R30 , _Port_fnd + ( 6 )
                 	__GETB1MN _Port_fnd,6
00042d b9e3      	OUT  0x3,R30
00042e 2fe2      	MOV  R30,R18
00042f 940e 0ad3 	CALL SUBOPT_0xF
                 _0x2060007:
000431 940e 0c83 	CALL __LOADLOCR4
                 _0x2060006:
000433 9626      	ADIW R28,6
000434 9508      	RET
                 _buzzer_play_function:
                 ;	t -> Y+0
000435 81e8      	LD   R30,Y
000436 81f9      	LDD  R31,Y+1
000437 30e1      	CPI  R30,LOW(0x1)
000438 e0a0      	LDI  R26,HIGH(0x1)
000439 07fa      	CPC  R31,R26
00043a f429      	BRNE _0x7C
00043b e7e4      	LDI  R30,LOW(1908)
00043c e0f7      	LDI  R31,HIGH(1908)
00043d 940e 0ad5 	CALL SUBOPT_0x10
00043f c047      	RJMP _0x7B
                 _0x7C:
000440 30e2      	CPI  R30,LOW(0x2)
000441 e0a0      	LDI  R26,HIGH(0x2)
000442 07fa      	CPC  R31,R26
000443 f429      	BRNE _0x7D
000444 eae4      	LDI  R30,LOW(1700)
000445 e0f6      	LDI  R31,HIGH(1700)
000446 940e 0ad5 	CALL SUBOPT_0x10
000448 c03e      	RJMP _0x7B
                 _0x7D:
000449 30e3      	CPI  R30,LOW(0x3)
00044a e0a0      	LDI  R26,HIGH(0x3)
00044b 07fa      	CPC  R31,R26
00044c f429      	BRNE _0x7E
00044d eeeb      	LDI  R30,LOW(1515)
00044e e0f5      	LDI  R31,HIGH(1515)
00044f 940e 0ad5 	CALL SUBOPT_0x10
000451 c035      	RJMP _0x7B
                 _0x7E:
000452 30e4      	CPI  R30,LOW(0x4)
000453 e0a0      	LDI  R26,HIGH(0x4)
000454 07fa      	CPC  R31,R26
000455 f429      	BRNE _0x7F
000456 e9e8      	LDI  R30,LOW(1432)
000457 e0f5      	LDI  R31,HIGH(1432)
000458 940e 0ad5 	CALL SUBOPT_0x10
00045a c02c      	RJMP _0x7B
                 _0x7F:
00045b 30e5      	CPI  R30,LOW(0x5)
00045c e0a0      	LDI  R26,HIGH(0x5)
00045d 07fa      	CPC  R31,R26
00045e f429      	BRNE _0x80
00045f efeb      	LDI  R30,LOW(1275)
000460 e0f4      	LDI  R31,HIGH(1275)
000461 940e 0ad5 	CALL SUBOPT_0x10
000463 c023      	RJMP _0x7B
                 _0x80:
000464 30e6      	CPI  R30,LOW(0x6)
000465 e0a0      	LDI  R26,HIGH(0x6)
000466 07fa      	CPC  R31,R26
000467 f429      	BRNE _0x81
000468 e7e0      	LDI  R30,LOW(1136)
000469 e0f4      	LDI  R31,HIGH(1136)
00046a 940e 0ad5 	CALL SUBOPT_0x10
00046c c01a      	RJMP _0x7B
                 _0x81:
00046d 30e7      	CPI  R30,LOW(0x7)
00046e e0a0      	LDI  R26,HIGH(0x7)
00046f 07fa      	CPC  R31,R26
000470 f429      	BRNE _0x82
000471 efe4      	LDI  R30,LOW(1012)
000472 e0f3      	LDI  R31,HIGH(1012)
000473 940e 0ad5 	CALL SUBOPT_0x10
000475 c011      	RJMP _0x7B
                 _0x82:
000476 30e8      	CPI  R30,LOW(0x8)
000477 e0a0      	LDI  R26,HIGH(0x8)
000478 07fa      	CPC  R31,R26
000479 f429      	BRNE _0x83
00047a ebea      	LDI  R30,LOW(954)
00047b e0f3      	LDI  R31,HIGH(954)
00047c 940e 0ad5 	CALL SUBOPT_0x10
00047e c008      	RJMP _0x7B
                 _0x83:
00047f 30e9      	CPI  R30,LOW(0x9)
000480 e0a0      	LDI  R26,HIGH(0x9)
000481 07fa      	CPC  R31,R26
000482 f421      	BRNE _0x85
000483 e5e2      	LDI  R30,LOW(850)
000484 e0f3      	LDI  R31,HIGH(850)
000485 940e 0ad5 	CALL SUBOPT_0x10
                 _0x85:
                 _0x7B:
000487 c045      	RJMP _0x2060004
                 ;	num -> Y+1
                 ;	str -> R17
                 ;#include "usart.h"
                 ;	baud -> Y+0
                 _Init_USART1_IntCon:
                 ;	baud -> Y+1
                 ;	Int_type -> Y+0
000488 e0e0      	LDI  R30,LOW(0)
000489 93e0 009b 	STS  155,R30
00048b e9e8      	LDI  R30,LOW(152)
00048c 93e0 009a 	STS  154,R30
00048e 81e9      	LDD  R30,Y+1
00048f 940e 0ad9 	CALL SUBOPT_0x11
000491 f439      	BRNE _0x9D
000492 e0e0      	LDI  R30,LOW(0)
000493 93e0 0098 	STS  152,R30
000495 e5ef      	LDI  R30,LOW(95)
000496 93e0 0099 	STS  153,R30
000498 c00a      	RJMP _0x9C
                 _0x9D:
000499 30e1      	CPI  R30,LOW(0x1)
00049a e0a0      	LDI  R26,HIGH(0x1)
00049b 07fa      	CPC  R31,R26
00049c f431      	BRNE _0x9F
00049d e0e0      	LDI  R30,LOW(0)
00049e 93e0 0098 	STS  152,R30
0004a0 e0e7      	LDI  R30,LOW(7)
0004a1 93e0 0099 	STS  153,R30
                 _0x9F:
                 _0x9C:
0004a3 81e8      	LD   R30,Y
0004a4 940e 0ad9 	CALL SUBOPT_0x11
0004a6 f411      	BRNE _0xA3
0004a7 e9e8      	LDI  R30,LOW(152)
0004a8 c00b      	RJMP _0x129
                 _0xA3:
0004a9 30e1      	CPI  R30,LOW(0x1)
0004aa e0a0      	LDI  R26,HIGH(0x1)
0004ab 07fa      	CPC  R31,R26
0004ac f411      	BRNE _0xA4
0004ad e3e8      	LDI  R30,LOW(56)
0004ae c005      	RJMP _0x129
                 _0xA4:
0004af 30e2      	CPI  R30,LOW(0x2)
0004b0 e0a0      	LDI  R26,HIGH(0x2)
0004b1 07fa      	CPC  R31,R26
0004b2 f419      	BRNE _0xA2
0004b3 ebe8      	LDI  R30,LOW(184)
                 _0x129:
0004b4 93e0 009a 	STS  154,R30
                 _0xA2:
0004b6 e0e6      	LDI  R30,LOW(6)
0004b7 93e0 009d 	STS  157,R30
0004b9 c013      	RJMP _0x2060004
                 _putch_USART1:
                 ;	data -> Y+0
                 _0xA6:
0004ba 91e0 009b 	LDS  R30,155
0004bc 72e0      	ANDI R30,LOW(0x20)
0004bd f3e1      	BREQ _0xA6
0004be 81e8      	LD   R30,Y
0004bf 93e0 009c 	STS  156,R30
                 _0x2060005:
0004c1 9621      	ADIW R28,1
0004c2 9508      	RET
                 _puts_USART1:
                 ;	*str -> Y+0
                 _0xA9:
0004c3 81a8      	LD   R26,Y
0004c4 81b9      	LDD  R27,Y+1
0004c5 91ec      	LD   R30,X
0004c6 30e0      	CPI  R30,0
0004c7 f029      	BREQ _0xAB
0004c8 940e 0adc 	CALL SUBOPT_0x12
0004ca 940e 0a8f 	CALL SUBOPT_0x4
0004cc cff6      	RJMP _0xA9
                 _0xAB:
                 _0x2060004:
0004cd 9622      	ADIW R28,2
0004ce 9508      	RET
                 ;
                 ;/*»óÅÂ Á¤ÀÇ*/
                 ;#define NONE 0
                 ;#define START 1
                 ;#define INPUT_PHONE 2
                 ;#define INPUT_PHONE_INIT 3
                 ;#define CHECK_PNUM 4
                 ;#define CHECK_PNUM_INIT 5
                 ;#define EXIT_CHOOSE 6
                 ;#define CHECK_PNUM_OUT 7
                 ;#define CHECK_PNUM_OUT_INIT 8
                 ;#define INPUT_PHONE_OUT 9
                 ;#define INPUT_PHONE_OUT_INIT 10
                 ;
                 ;/*usart Á¤ÀÇ*/
                 ;#define ENTER '\r'
                 ;#define MAXLEN 17
                 ;unsigned char str[MAXLEN], str2[MAXLEN];
                 ;unsigned char master_password[] = "1mingyu";
                 
                 	.DSEG
                 ;char num[3][11];
                 ;
                 ;unsigned char ti_Cnt_1ms;  //ÃÊÀ½ÆÄ ¼¾¼­±¸µ¿À»À§ÇÑ cnt
                 ;unsigned char LCD_DelCnt_1ms;
                 ;unsigned char Distance_cnt_1ms; // ½Ã°£Áö³ª¸é ÀÚ¸®ºñ¿òÃ³¸®¸¦ À§ÇÑ cnt
                 ;unsigned char ch=0;
                 ;
                 ;interrupt [USART1_RXC] void usart1_receive(void)
                 ; 0000 0024 {
                 
                 	.CSEG
                 _usart1_receive:
0004cf 920a      	ST   -Y,R0
0004d0 921a      	ST   -Y,R1
0004d1 92fa      	ST   -Y,R15
0004d2 936a      	ST   -Y,R22
0004d3 937a      	ST   -Y,R23
0004d4 938a      	ST   -Y,R24
0004d5 939a      	ST   -Y,R25
0004d6 93aa      	ST   -Y,R26
0004d7 93ba      	ST   -Y,R27
0004d8 93ea      	ST   -Y,R30
0004d9 93fa      	ST   -Y,R31
0004da b7ef      	IN   R30,SREG
0004db 93ea      	ST   -Y,R30
                 ; 0000 0025     unsigned char i;
                 ; 0000 0026 
                 ; 0000 0027     str[ch] = UDR1;          //ÀÎÅÍ·´Æ® ¹ß»ý ½Ã ¼ö½ÅµÈ ¹®ÀÚ¸¦ str[ch]¿¡ ÀúÀå
0004dc 931a      	ST   -Y,R17
                 ;	i -> R17
0004dd 2da9      	MOV  R26,R9
0004de e0b0      	LDI  R27,0
0004df 5fab      	SUBI R26,LOW(-_str)
0004e0 4fb9      	SBCI R27,HIGH(-_str)
0004e1 91e0 009c 	LDS  R30,156
0004e3 93ec      	ST   X,R30
                 ; 0000 0028 
                 ; 0000 0029 
                 ; 0000 002A      if(str[ch] == ENTER){
0004e4 2de9      	MOV  R30,R9
0004e5 e0f0      	LDI  R31,0
0004e6 5feb      	SUBI R30,LOW(-_str)
0004e7 4ff9      	SBCI R31,HIGH(-_str)
0004e8 81a0      	LD   R26,Z
0004e9 30ad      	CPI  R26,LOW(0xD)
0004ea f011      	BREQ PC+3
0004eb 940c 0563 	JMP _0xB0
                 ; 0000 002B         char access_cnt = 0;
                 ; 0000 002C         for(i=0;i<MAXLEN;i++) str2[i] = 'a';
0004ed 9721      	SBIW R28,1
0004ee e0e0      	LDI  R30,LOW(0)
0004ef 83e8      	ST   Y,R30
                 ;	access_cnt -> Y+0
0004f0 e010      	LDI  R17,LOW(0)
                 _0xB2:
0004f1 3111      	CPI  R17,17
0004f2 f440      	BRSH _0xB3
0004f3 940e 0aab 	CALL SUBOPT_0x8
0004f5 5eea      	SUBI R30,LOW(-_str2)
0004f6 4ff9      	SBCI R31,HIGH(-_str2)
0004f7 e6a1      	LDI  R26,LOW(97)
0004f8 83a0      	STD  Z+0,R26
0004f9 5f1f      	SUBI R17,-1
0004fa cff6      	RJMP _0xB2
                 _0xB3:
                 ; 0000 002D for(i=0;i<17;i++) str2[i] = str[i];
0004fb e010      	LDI  R17,LOW(0)
                 _0xB5:
0004fc 3111      	CPI  R17,17
0004fd f460      	BRSH _0xB6
0004fe 2fa1      	MOV  R26,R17
0004ff e0b0      	LDI  R27,0
000500 5eaa      	SUBI R26,LOW(-_str2)
000501 4fb9      	SBCI R27,HIGH(-_str2)
000502 940e 0aab 	CALL SUBOPT_0x8
000504 5feb      	SUBI R30,LOW(-_str)
000505 4ff9      	SBCI R31,HIGH(-_str)
000506 81e0      	LD   R30,Z
000507 93ec      	ST   X,R30
000508 5f1f      	SUBI R17,-1
000509 cff2      	RJMP _0xB5
                 _0xB6:
                 ; 0000 002F str[ch-1] = 0x00;
00050a 2de9      	MOV  R30,R9
00050b e0f0      	LDI  R31,0
00050c 9731      	SBIW R30,1
00050d 5feb      	SUBI R30,LOW(-_str)
00050e 4ff9      	SBCI R31,HIGH(-_str)
00050f e0a0      	LDI  R26,LOW(0)
000510 83a0      	STD  Z+0,R26
                 ; 0000 0030         ch = 0;             //¹®ÀÚ¿­ ÃÊ±âÈ­
000511 2499      	CLR  R9
                 ; 0000 0031 
                 ; 0000 0032         for (i=1;i<7;i++) {
000512 e011      	LDI  R17,LOW(1)
                 _0xB8:
000513 3017      	CPI  R17,7
000514 f488      	BRSH _0xB9
                 ; 0000 0033             if (master_password[i] == str2[i]) access_cnt ++;
000515 940e 0aab 	CALL SUBOPT_0x8
000517 010f      	MOVW R0,R30
000518 5de9      	SUBI R30,LOW(-_master_password)
000519 4ff9      	SBCI R31,HIGH(-_master_password)
00051a 81a0      	LD   R26,Z
00051b 01f0      	MOVW R30,R0
00051c 5eea      	SUBI R30,LOW(-_str2)
00051d 4ff9      	SBCI R31,HIGH(-_str2)
00051e 81e0      	LD   R30,Z
00051f 17ea      	CP   R30,R26
000520 f419      	BRNE _0xBA
000521 81e8      	LD   R30,Y
000522 5fef      	SUBI R30,-LOW(1)
000523 83e8      	ST   Y,R30
                 ; 0000 0034         }
                 _0xBA:
000524 5f1f      	SUBI R17,-1
000525 cfed      	RJMP _0xB8
                 _0xB9:
                 ; 0000 0035         if (access_cnt == 6) {
000526 81a8      	LD   R26,Y
000527 30a6      	CPI  R26,LOW(0x6)
000528 f569      	BRNE _0xBB
                 ; 0000 0036             puts_USART1("\n first seat : \n");
                +
000529 e1e5     +LDI R30 , LOW ( _0xBC + ( 0 ) )
00052a e0f5     +LDI R31 , HIGH ( _0xBC + ( 0 ) )
                 	__POINTW1MN _0xBC,0
00052b 940e 0ae0 	CALL SUBOPT_0x13
                 ; 0000 0037             for(i=0;i<11;i++)  putch_USART1(num[0][i]);
                 _0xBE:
00052d 301b      	CPI  R17,11
00052e f448      	BRSH _0xBF
00052f 940e 0aab 	CALL SUBOPT_0x8
000531 5de1      	SUBI R30,LOW(-_num)
000532 4ff9      	SBCI R31,HIGH(-_num)
000533 81e0      	LD   R30,Z
000534 93ea      	ST   -Y,R30
000535 df84      	RCALL _putch_USART1
000536 5f1f      	SUBI R17,-1
000537 cff5      	RJMP _0xBE
                 _0xBF:
                 ; 0000 0038 puts_USART1("\n Second seat : \n");
                +
000538 e2e6     +LDI R30 , LOW ( _0xBC + ( 17 ) )
000539 e0f5     +LDI R31 , HIGH ( _0xBC + ( 17 ) )
                 	__POINTW1MN _0xBC,17
00053a 940e 0ae0 	CALL SUBOPT_0x13
                 ; 0000 0039             for(i=0;i<11;i++)  putch_USART1(num[1][i]);
                 _0xC1:
00053c 301b      	CPI  R17,11
00053d f448      	BRSH _0xC2
                +
00053e e3aa     +LDI R26 , LOW ( _num + ( 11 ) )
00053f e0b6     +LDI R27 , HIGH ( _num + ( 11 ) )
                 	__POINTW2MN _num,11
000540 27ee      	CLR  R30
000541 0fa1      	ADD  R26,R17
000542 1fbe      	ADC  R27,R30
000543 940e 0adc 	CALL SUBOPT_0x12
000545 5f1f      	SUBI R17,-1
000546 cff5      	RJMP _0xC1
                 _0xC2:
                 ; 0000 003A puts_USART1("\n Third seat : \n");
                +
000547 e3e8     +LDI R30 , LOW ( _0xBC + ( 35 ) )
000548 e0f5     +LDI R31 , HIGH ( _0xBC + ( 35 ) )
                 	__POINTW1MN _0xBC,35
000549 940e 0ae0 	CALL SUBOPT_0x13
                 ; 0000 003B             for(i=0;i<11;i++)  putch_USART1(num[2][i]);
                 _0xC4:
00054b 301b      	CPI  R17,11
00054c f448      	BRSH _0xC5
                +
00054d e4a5     +LDI R26 , LOW ( _num + ( 22 ) )
00054e e0b6     +LDI R27 , HIGH ( _num + ( 22 ) )
                 	__POINTW2MN _num,22
00054f 27ee      	CLR  R30
000550 0fa1      	ADD  R26,R17
000551 1fbe      	ADC  R27,R30
000552 940e 0adc 	CALL SUBOPT_0x12
000554 5f1f      	SUBI R17,-1
000555 cff5      	RJMP _0xC4
                 _0xC5:
                 ; 0000 003C }
                 ; 0000 003D 
                 ; 0000 003E         for(i=0;i<MAXLEN;i++) str2[i] = 0;
                 _0xBB:
000556 e010      	LDI  R17,LOW(0)
                 _0xC7:
000557 3111      	CPI  R17,17
000558 f440      	BRSH _0xC8
000559 940e 0aab 	CALL SUBOPT_0x8
00055b 5eea      	SUBI R30,LOW(-_str2)
00055c 4ff9      	SBCI R31,HIGH(-_str2)
00055d e0a0      	LDI  R26,LOW(0)
00055e 83a0      	STD  Z+0,R26
00055f 5f1f      	SUBI R17,-1
000560 cff6      	RJMP _0xC7
                 _0xC8:
                 ; 0000 003F }
000561 9621      	ADIW R28,1
                 ; 0000 0040      else ch++;
000562 c001      	RJMP _0xC9
                 _0xB0:
000563 9493      	INC  R9
                 ; 0000 0041      delay_ms(10);
                 _0xC9:
000564 940e 0ae6 	CALL SUBOPT_0x14
                 ; 0000 0042 
                 ; 0000 0043 
                 ; 0000 0044 
                 ; 0000 0045     if ( ch >= MAXLEN) ch = 0;    //ÃÖ´ë ±ÛÀÚ ÀÌ»óÀÏ¶§ ¿¡·¯¸ðµå
000566 e1e1      	LDI  R30,LOW(17)
000567 169e      	CP   R9,R30
000568 f008      	BRLO _0xCA
000569 2499      	CLR  R9
                 ; 0000 0046 
                 ; 0000 0047 }
                 _0xCA:
00056a 9119      	LD   R17,Y+
00056b 91e9      	LD   R30,Y+
00056c bfef      	OUT  SREG,R30
00056d 91f9      	LD   R31,Y+
00056e 91e9      	LD   R30,Y+
00056f 91b9      	LD   R27,Y+
000570 91a9      	LD   R26,Y+
000571 9199      	LD   R25,Y+
000572 9189      	LD   R24,Y+
000573 9179      	LD   R23,Y+
000574 9169      	LD   R22,Y+
000575 90f9      	LD   R15,Y+
000576 9019      	LD   R1,Y+
000577 9009      	LD   R0,Y+
000578 9518      	RETI
                 
                 	.DSEG
                 _0xBC:
000515           	.BYTE 0x34
                 ;
                 ;
                 ;void Timer0_Init()  //ÃÊÀ½ÆÄ ¼¾¼­±¸µ¿ Å¸ÀÌ¸Ó ÀÎÅÍ·´Æ®
                 ; 0000 004B {
                 
                 	.CSEG
                 _Timer0_Init:
                 ; 0000 004C     TCCR0 = (1<<WGM01)|(1<<CS00)|(1<<CS01)|(1<<CS02);
000579 e0ef      	LDI  R30,LOW(15)
00057a bfe3      	OUT  0x33,R30
                 ; 0000 004D     TCNT0 = 0x00;
00057b e0e0      	LDI  R30,LOW(0)
00057c bfe2      	OUT  0x32,R30
                 ; 0000 004E     OCR0 = 100;
00057d e6e4      	LDI  R30,LOW(100)
00057e bfe1      	OUT  0x31,R30
                 ; 0000 004F     TIMSK = (1<<OCIE0);
00057f e0e2      	LDI  R30,LOW(2)
                 _0x2060003:
000580 bfe7      	OUT  0x37,R30
                 ; 0000 0050 }
000581 9508      	RET
                 ;
                 ;interrupt[TIM0_COMP] void timer0_comp(void)    //½ÇÁ¦ Ä«¿îÆ® Áõ°¡
                 ; 0000 0053 {
                 _timer0_comp:
000582 93ea      	ST   -Y,R30
000583 b7ef      	IN   R30,SREG
                 ; 0000 0054     ti_Cnt_1ms++;
000584 9443      	INC  R4
                 ; 0000 0055     LCD_DelCnt_1ms++;
000585 9473      	INC  R7
                 ; 0000 0056 
                 ; 0000 0057 }
000586 bfef      	OUT  SREG,R30
000587 91e9      	LD   R30,Y+
000588 9518      	RETI
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;int SRF_Run(char Sonar_Addr){    //SRF ÁÖ¼Ò·Î °ªÀ» ¹Þ¾Æ¿È
                 ; 0000 005E int SRF_Run(char Sonar_Addr){
                 _SRF_Run:
                 ; 0000 005F     unsigned char res;
                 ; 0000 0060     unsigned int Sonar_range;
                 ; 0000 0061 
                 ; 0000 0062     res = getRange(Sonar_Addr, &Sonar_range);
000589 940e 0c7c 	CALL __SAVELOCR4
                 ;	Sonar_Addr -> Y+4
                 ;	res -> R17
                 ;	Sonar_range -> R18,R19
00058b 81ec      	LDD  R30,Y+4
00058c 93ea      	ST   -Y,R30
00058d b7ed      	IN   R30,SPL
00058e b7fe      	IN   R31,SPH
00058f 9731      	SBIW R30,1
000590 93fa      	ST   -Y,R31
000591 93ea      	ST   -Y,R30
000592 933f      	PUSH R19
000593 932f      	PUSH R18
000594 dd2b      	RCALL _getRange
000595 912f      	POP  R18
000596 913f      	POP  R19
000597 2f1e      	MOV  R17,R30
                 ; 0000 0063         if(res)
000598 3010      	CPI  R17,0
000599 f031      	BREQ _0xCB
                 ; 0000 0064         {
                 ; 0000 0065             return 0;
00059a e0e0      	LDI  R30,LOW(0)
00059b e0f0      	LDI  R31,HIGH(0)
00059c 940e 0c83 	CALL __LOADLOCR4
00059e 940c 08f0 	JMP  _0x2060002
                 ; 0000 0066         }
                 ; 0000 0067         else if(LCD_DelCnt_1ms > 100)
                 _0xCB:
0005a0 e6e4      	LDI  R30,LOW(100)
0005a1 15e7      	CP   R30,R7
0005a2 f430      	BRSH _0xCD
                 ; 0000 0068         {
                 ; 0000 0069             LCD_DelCnt_1ms = 0;
0005a3 2477      	CLR  R7
                 ; 0000 006A             return Sonar_range;
0005a4 01f9      	MOVW R30,R18
0005a5 940e 0c83 	CALL __LOADLOCR4
0005a7 940c 08f0 	JMP  _0x2060002
                 ; 0000 006B         }
                 ; 0000 006C }
                 _0xCD:
0005a9 940e 0c83 	CALL __LOADLOCR4
0005ab 940c 08f0 	JMP  _0x2060002
                 ;
                 ;
                 ;void main(void)
                 ; 0000 0070 {
                 _main:
                 ; 0000 0071     unsigned char res;
                 ; 0000 0072     char Sonar_Addr = 0xE0;
                 ; 0000 0073     unsigned int Sonar_range[3]={0,};
                 ; 0000 0074     char Message[40];
                 ; 0000 0075     int readCnt = 0;
                 ; 0000 0076     int t=0; //Å°ÆÐµå·Î ¹ÞÀº ¼ýÀÚ
                 ; 0000 0077     int count =0; //count º¯¼ö
                 ; 0000 0078     int finalnum=0; //FND¿¡ Ãâ·ÂÀ¸·Î ³Ö¾îÁÙ º¯¼ö
                 ; 0000 0079     int fnd[12]={0,};
                 ; 0000 007A     signed int angle=0; // ¼­ºê¸ðÅÍ °¢µµ·Î ³ÖÀ» º¯¼ö
                 ; 0000 007B     char STATE = START;
                 ; 0000 007C     char user_state[3] = {'X','X','X'};
                 ; 0000 007D     int i = 0;
                 ; 0000 007E     char user_pnumber[3][11]; //À¯Àú ºñ¹Ð¹øÈ£ ÀúÀå
                 ; 0000 007F     char check_pnumber[11]; //ºñ¹Ð¹øÈ£ ÀÏÄ¡È®ÀÎÀ»À§ÇÑ °ø°£
                 ; 0000 0080     char user_name; //1~3¹øÁß ¾î´ÀÁÂ¼® À¯Àú¸¦ °¡¸£Å°´ÂÁö ÀúÀå
                 ; 0000 0081 
                 ; 0000 0082     char empty_cnt[3]={0,};
                 ; 0000 0083 
                 ; 0000 0084     DDRD |= 0x03;
0005ad 97ef      	SBIW R28,63
0005ae 97ef      	SBIW R28,63
0005af 9724      	SBIW R28,4
0005b0 e882      	LDI  R24,130
0005b1 e0a0      	LDI  R26,LOW(0)
0005b2 e0b0      	LDI  R27,HIGH(0)
0005b3 ebee      	LDI  R30,LOW(_0xCE*2)
0005b4 e0f0      	LDI  R31,HIGH(_0xCE*2)
0005b5 940e 0c88 	CALL __INITLOCB
                 ;	res -> R17
                 ;	Sonar_Addr -> R16
                 ;	Sonar_range -> Y+124
                 ;	Message -> Y+84
                 ;	readCnt -> R18,R19
                 ;	t -> R20,R21
                 ;	count -> Y+82
                 ;	finalnum -> Y+80
                 ;	fnd -> Y+56
                 ;	angle -> Y+54
                 ;	STATE -> Y+53
                 ;	user_state -> Y+50
                 ;	i -> Y+48
                 ;	user_pnumber -> Y+15
                 ;	check_pnumber -> Y+4
                 ;	user_name -> Y+3
                 ;	empty_cnt -> Y+0
0005b7 ee00      	LDI  R16,224
                +
0005b8 e020     +LDI R18 , LOW ( 0 )
0005b9 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
0005ba e040     +LDI R20 , LOW ( 0 )
0005bb e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
0005bc b3e1      	IN   R30,0x11
0005bd 60e3      	ORI  R30,LOW(0x3)
0005be bbe1      	OUT  0x11,R30
                 ; 0000 0085 
                 ; 0000 0086     LCD_Init();
0005bf dc1b      	RCALL _LCD_Init
                 ; 0000 0087     Timer0_Init();
0005c0 dfb8      	RCALL _Timer0_Init
                 ; 0000 0088     FND_PORT_Init(); // Æ÷Æ®µé ÀÔÃâ·Â ÃÊ±â ¼³Á¤
0005c1 dd36      	RCALL _FND_PORT_Init
                 ; 0000 0089     Init_TWI();
0005c2 dc27      	RCALL _Init_TWI
                 ; 0000 008A     Init_Timer1();
0005c3 dd49      	RCALL _Init_Timer1
                 ; 0000 008B     delay_ms(1000);
0005c4 940e 0ae9 	CALL SUBOPT_0x15
                 ; 0000 008C     SREG |= 0x80;
0005c6 9478      	BSET 7
                 ; 0000 008D 
                 ; 0000 008E     OCR1A =4710;
0005c7 940e 0aae 	CALL SUBOPT_0x9
                 ; 0000 008F     startRanging(Sonar_Addr);
0005c9 930a      	ST   -Y,R16
0005ca dced      	RCALL _startRanging
                 ; 0000 0090     ti_Cnt_1ms = 0;
0005cb 2444      	CLR  R4
                 ; 0000 0091     LCD_DelCnt_1ms = 0;
0005cc 2477      	CLR  R7
                 ; 0000 0092 
                 ; 0000 0093     Init_USART1_IntCon(0,RX_Int);
0005cd 940e 0aec 	CALL SUBOPT_0x16
0005cf deb8      	RCALL _Init_USART1_IntCon
                 ; 0000 0094     DDRD.7 =1;
0005d0 9a8f      	SBI  0x11,7
                 ; 0000 0095 
                 ; 0000 0096 
                 ; 0000 0097 
                 ; 0000 0098     while(1)
                 _0xD1:
                 ; 0000 0099     {
                 ; 0000 009A         if(ti_Cnt_1ms > 100)  //2ÃÊ¿¡ ÇÑ¹øÁ¤µµ ÇÑ¼¾¼­¾¿ °»½Å
0005d1 e6e4      	LDI  R30,LOW(100)
0005d2 15e4      	CP   R30,R4
0005d3 f010      	BRLO PC+3
0005d4 940c 0631 	JMP _0xD4
                 ; 0000 009B         {
                 ; 0000 009C             if (Sonar_Addr == 0xE0){
0005d6 3e00      	CPI  R16,224
0005d7 f459      	BRNE _0xD5
                 ; 0000 009D                 Sonar_Addr = 0xEC;
0005d8 ee0c      	LDI  R16,LOW(236)
                 ; 0000 009E                 startRanging(Sonar_Addr);
0005d9 930a      	ST   -Y,R16
0005da dcdd      	RCALL _startRanging
                 ; 0000 009F                 Sonar_range[0] = SRF_Run(Sonar_Addr);
0005db 930a      	ST   -Y,R16
0005dc dfac      	RCALL _SRF_Run
                +
0005dd 01de     +MOVW R26 , R28
0005de 58a4     +SUBI R26 , LOW ( - 124 )
0005df 4fbf     +SBCI R27 , HIGH ( - 124 )
0005e0 93ed     +ST X + , R30
0005e1 93fc     +ST X , R31
                 	__PUTW1SX 124
                 ; 0000 00A0 
                 ; 0000 00A1 
                 ; 0000 00A2             }
                 ; 0000 00A3             else if (Sonar_Addr == 0xEC) {
0005e2 c019      	RJMP _0xD6
                 _0xD5:
0005e3 3e0c      	CPI  R16,236
0005e4 f459      	BRNE _0xD7
                 ; 0000 00A4                 Sonar_Addr = 0xE2;
0005e5 ee02      	LDI  R16,LOW(226)
                 ; 0000 00A5                 startRanging(Sonar_Addr);
0005e6 940e 0af0 	CALL SUBOPT_0x17
                 ; 0000 00A6                 Sonar_range[1] = SRF_Run(Sonar_Addr);
0005e8 9632      	ADIW R30,2
0005e9 93ff      	PUSH R31
0005ea 93ef      	PUSH R30
0005eb 930a      	ST   -Y,R16
0005ec df9c      	RCALL _SRF_Run
0005ed 91af      	POP  R26
0005ee 91bf      	POP  R27
0005ef c00a      	RJMP _0x12A
                 ; 0000 00A7 
                 ; 0000 00A8             }
                 ; 0000 00A9             else{
                 _0xD7:
                 ; 0000 00AA                 Sonar_Addr = 0xE0;
0005f0 ee00      	LDI  R16,LOW(224)
                 ; 0000 00AB                 startRanging(Sonar_Addr);
0005f1 940e 0af0 	CALL SUBOPT_0x17
                 ; 0000 00AC                 Sonar_range[2] = SRF_Run(Sonar_Addr);
0005f3 9634      	ADIW R30,4
0005f4 93ff      	PUSH R31
0005f5 93ef      	PUSH R30
0005f6 930a      	ST   -Y,R16
0005f7 df91      	RCALL _SRF_Run
0005f8 91af      	POP  R26
0005f9 91bf      	POP  R27
                 _0x12A:
0005fa 93ed      	ST   X+,R30
0005fb 93fc      	ST   X,R31
                 ; 0000 00AD 
                 ; 0000 00AE             }
                 _0xD6:
                 ; 0000 00AF 
                 ; 0000 00B0 
                 ; 0000 00B1             /*   ÃÊÀ½ÆÄ È® ÀÎ *//*
                 ; 0000 00B2             LCD_Clear();
                 ; 0000 00B3             sprintf(Message, "%03dcm", Sonar_range[0]);
                 ; 0000 00B4             LCD_Pos(0,0);
                 ; 0000 00B5             LCD_Str(Message);
                 ; 0000 00B6 
                 ; 0000 00B7             sprintf(Message, "%03dcm", Sonar_range[1]);
                 ; 0000 00B8             LCD_Pos(1,0);
                 ; 0000 00B9             LCD_Str(Message);
                 ; 0000 00BA 
                 ; 0000 00BB             sprintf(Message, "%03dcm", Sonar_range[2]);
                 ; 0000 00BC             LCD_Pos(1,5);
                 ; 0000 00BD             LCD_Str(Message); */
                 ; 0000 00BE 
                 ; 0000 00BF             /* ÀÚ¸®ºñ¿ò Ã³¸® */
                 ; 0000 00C0             for (i=0;i<3;i++){
0005fc e0e0      	LDI  R30,LOW(0)
0005fd abe8      	STD  Y+48,R30
0005fe abe9      	STD  Y+48+1,R30
                 _0xDA:
0005ff a9a8      	LDD  R26,Y+48
000600 a9b9      	LDD  R27,Y+48+1
000601 9713      	SBIW R26,3
000602 f564      	BRGE _0xDB
                 ; 0000 00C1                 if ( (Sonar_range[i] > 30)&&(user_state[i] == 'O') ){
000603 a9e8      	LDD  R30,Y+48
000604 a9f9      	LDD  R31,Y+48+1
000605 01de      	MOVW R26,R28
000606 58a4      	SUBI R26,LOW(-(124))
000607 4fbf      	SBCI R27,HIGH(-(124))
000608 940e 0af7 	CALL SUBOPT_0x18
00060a 977f      	SBIW R30,31
00060b f028      	BRLO _0xDD
00060c 940e 0afe 	CALL SUBOPT_0x19
00060e 91ac      	LD   R26,X
00060f 34af      	CPI  R26,LOW(0x4F)
000610 f009      	BREQ _0xDE
                 _0xDD:
000611 c005      	RJMP _0xDC
                 _0xDE:
                 ; 0000 00C2                    empty_cnt[i] ++;
000612 940e 0b05 	CALL SUBOPT_0x1A
000614 91ec      	LD   R30,X
000615 5fef      	SUBI R30,-LOW(1)
000616 c003      	RJMP _0x12B
                 ; 0000 00C3                     /*sprintf(Message, "%03dcm", empty_cnt[i]);
                 ; 0000 00C4                     LCD_Clear();
                 ; 0000 00C5                     LCD_Pos(0,0);
                 ; 0000 00C6                     LCD_Str(Message);  */ //cntÈ®ÀÎ¿ë
                 ; 0000 00C7                 }
                 ; 0000 00C8                 else empty_cnt[i] =0;
                 _0xDC:
000617 940e 0b05 	CALL SUBOPT_0x1A
000619 e0e0      	LDI  R30,LOW(0)
                 _0x12B:
00061a 93ec      	ST   X,R30
                 ; 0000 00C9 
                 ; 0000 00CA                 if (empty_cnt[i] > 15 ) {
00061b 940e 0b05 	CALL SUBOPT_0x1A
00061d 91ac      	LD   R26,X
00061e 31a0      	CPI  R26,LOW(0x10)
00061f f048      	BRLO _0xE0
                 ; 0000 00CB                  user_state[i] ='E';
000620 940e 0afe 	CALL SUBOPT_0x19
000622 e4e5      	LDI  R30,LOW(69)
000623 93ec      	ST   X,R30
                 ; 0000 00CC                  if (STATE == NONE ) STATE = START;
000624 a9ed      	LDD  R30,Y+53
000625 30e0      	CPI  R30,0
000626 f411      	BRNE _0xE1
000627 e0e1      	LDI  R30,LOW(1)
000628 abed      	STD  Y+53,R30
                 ; 0000 00CD                 }
                 _0xE1:
                 ; 0000 00CE             }
                 _0xE0:
000629 a9e8      	LDD  R30,Y+48
00062a a9f9      	LDD  R31,Y+48+1
00062b 9631      	ADIW R30,1
00062c abe8      	STD  Y+48,R30
00062d abf9      	STD  Y+48+1,R31
00062e cfd0      	RJMP _0xDA
                 _0xDB:
                 ; 0000 00CF 
                 ; 0000 00D0 
                 ; 0000 00D1 
                 ; 0000 00D2             LCD_DelCnt_1ms = 0;
00062f 2477      	CLR  R7
                 ; 0000 00D3             ti_Cnt_1ms = 0;
000630 2444      	CLR  R4
                 ; 0000 00D4         }
                 ; 0000 00D5 
                 ; 0000 00D6 
                 ; 0000 00D7         /*
                 ; 0000 00D8         if(PIND.7 == 1){
                 ; 0000 00D9            LCD_Clear();
                 ; 0000 00DA               LCD_Pos(0,0); // ¹®ÀÚ¿­ À§Ä¡ 0Çà 1¿­ ÁöÁ¤
                 ; 0000 00DB               LCD_Str("Warning....."); // ¹®ÀÚ¿­ strÀ» LCD Ã¹¹øÂ° ¶óÀÎ¿¡ Ãâ·Â
                 ; 0000 00DC               delay_us(10);
                 ; 0000 00DD               LCD_Pos(1,0); // ¹®ÀÚ¿­ À§Ä¡ 1Çà 1¿­ ÁöÁ¤
                 ; 0000 00DE                LCD_Str("Fire!!!    "); // ¹®ÀÚ¿­ strÀ» LCD µÎ¹øÂ° ¶óÀÎ¿¡ Ãâ·Â
                 ; 0000 00DF              LCD_Pos(1,0);
                 ; 0000 00E0               delay_us(10);
                 ; 0000 00E1 
                 ; 0000 00E2             while(1)
                 ; 0000 00E3             {
                 ; 0000 00E4 
                 ; 0000 00E5                  for(i=0;i<20;i++){    //»çÀÌ·» ¼Ò¸®
                 ; 0000 00E6                   Buzzer_play(Sol/2);
                 ; 0000 00E7                   delay_ms(10);
                 ; 0000 00E8                 }
                 ; 0000 00E9                 delay_ms(10);
                 ; 0000 00EA                 for(i=0;i<20;i++){
                 ; 0000 00EB                     Buzzer_play(Re/2);
                 ; 0000 00EC                     delay_ms(10);
                 ; 0000 00ED                 }
                 ; 0000 00EE             }
                 ; 0000 00EF 
                 ; 0000 00F0         }
                 ; 0000 00F1             else{
                 ; 0000 00F2 
                 ; 0000 00F3         }*/
                 ; 0000 00F4 
                 ; 0000 00F5 
                 ; 0000 00F6 
                 ; 0000 00F7 
                 ; 0000 00F8         t= Changenum(KeyScan());
                 _0xD4:
000631 dd21      	RCALL _KeyScan
000632 93ea      	ST   -Y,R30
000633 dd64      	RCALL _Changenum
000634 2f4e      	MOV  R20,R30
000635 2755      	CLR  R21
                 ; 0000 00F9         if(t<11 & t>0 ) //¼ýÀÚ°¡ ´­¸®¸é »õ·Î¿î °ªÀ» ÀúÀåÇÏµµ·Ï count°ª ¼³Á¤
000636 01da      	MOVW R26,R20
000637 e0eb      	LDI  R30,LOW(11)
000638 e0f0      	LDI  R31,HIGH(11)
000639 940e 0c12 	CALL __LTW12
00063b 2e0e      	MOV  R0,R30
00063c e0e0      	LDI  R30,LOW(0)
00063d e0f0      	LDI  R31,HIGH(0)
00063e 940e 0c18 	CALL __GTW12
000640 21e0      	AND  R30,R0
000641 f029      	BREQ _0xE2
                 ; 0000 00FA             {
                 ; 0000 00FB                 count++;
000642 940e 0b0b 	CALL SUBOPT_0x1B
                 ; 0000 00FC                 delay_ms(50);
000644 940e 0b14 	CALL SUBOPT_0x1C
                 ; 0000 00FD             }
                 ; 0000 00FE         else if(t==0 & zero_flag) //zero_flag°¡ ½ÇÇàµÈ °æ¿ì¿¡¸¸ 0À¸·Î ÀÔ·Â
000646 c021      	RJMP _0xE3
                 _0xE2:
000647 01da      	MOVW R26,R20
000648 e0e0      	LDI  R30,LOW(0)
000649 e0f0      	LDI  R31,HIGH(0)
00064a 940e 0c0c 	CALL __EQW12
00064c 21e5      	AND  R30,R5
00064d f031      	BREQ _0xE4
                 ; 0000 00FF             {
                 ; 0000 0100                 count++;
00064e 940e 0b0b 	CALL SUBOPT_0x1B
                 ; 0000 0101                 zero_flag =0; //°è¼Ó 0À¸·Î ÀÔ·ÂµÈ »óÅÂ°¡ ¾ÈµÇ°Ô zero_flag¸¦ ´Ù½Ã 0À¸·Î
000650 2455      	CLR  R5
                 ; 0000 0102                 delay_ms(50);
000651 940e 0b14 	CALL SUBOPT_0x1C
                 ; 0000 0103             }
                 ; 0000 0104         else if(t==13) // FND Ãâ·Â¼ýÀÚ ¸®¼Â¹öÆ° ±â´É
000653 c014      	RJMP _0xE5
                 _0xE4:
000654 e0ed      	LDI  R30,LOW(13)
000655 e0f0      	LDI  R31,HIGH(13)
000656 17e4      	CP   R30,R20
000657 07f5      	CPC  R31,R21
000658 f441      	BRNE _0xE6
                 ; 0000 0105             {
                 ; 0000 0106                 fnd[0]=0,fnd[1]=0,fnd[2]=0,fnd[3]=0;
000659 940e 0b17 	CALL SUBOPT_0x1D
00065b e0e0      	LDI  R30,LOW(0)
00065c afec      	STD  Y+60,R30
00065d afed      	STD  Y+60+1,R30
00065e afee      	STD  Y+62,R30
00065f afef      	STD  Y+62+1,R30
                 ; 0000 0107             }
                 ; 0000 0108         else if (t ==14)
000660 c007      	RJMP _0xE7
                 _0xE6:
000661 e0ee      	LDI  R30,LOW(14)
000662 e0f0      	LDI  R31,HIGH(14)
000663 17e4      	CP   R30,R20
000664 07f5      	CPC  R31,R21
000665 f411      	BRNE _0xE8
                 ; 0000 0109             {
                 ; 0000 010A                STATE = START;
000666 e0e1      	LDI  R30,LOW(1)
000667 abed      	STD  Y+53,R30
                 ; 0000 010B             }
                 ; 0000 010C 
                 ; 0000 010D         if((count%2) ==0){ //count°¡ Â¦¼öÀÏ¶§ µé¾î¿Â t°ªÀ» ÀúÀåÇÏ°í
                 _0xE8:
                 _0xE7:
                 _0xE5:
                 _0xE3:
                +
000668 01de     +MOVW R26 , R28
000669 5aae     +SUBI R26 , LOW ( - 82 )
00066a 4fbf     +SBCI R27 , HIGH ( - 82 )
00066b 900d     +LD R0 , X +
00066c 91bc     +LD R27 , X
00066d 2da0     +MOV R26 , R0
                 	__GETW2SX 82
00066e e0e2      	LDI  R30,LOW(2)
00066f e0f0      	LDI  R31,HIGH(2)
000670 940e 0c46 	CALL __MODW21
000672 9730      	SBIW R30,0
000673 f559      	BRNE _0xE9
                 ; 0000 010E                             //´Ù½Ã count¸¦ È¦¼ö·Î ¸¸µë
                 ; 0000 010F             for(i=11;i>0;i--) {
000674 e0eb      	LDI  R30,LOW(11)
000675 e0f0      	LDI  R31,HIGH(11)
000676 abe8      	STD  Y+48,R30
000677 abf9      	STD  Y+48+1,R31
                 _0xEB:
000678 a9a8      	LDD  R26,Y+48
000679 a9b9      	LDD  R27,Y+48+1
00067a 940e 0c76 	CALL __CPW02
00067c f4e4      	BRGE _0xEC
                 ; 0000 0110                 fnd[i] = fnd[i-1];
00067d a9e8      	LDD  R30,Y+48
00067e a9f9      	LDD  R31,Y+48+1
00067f 01de      	MOVW R26,R28
000680 96d8      	ADIW R26,56
000681 0fee      	LSL  R30
000682 1fff      	ROL  R31
000683 0fea      	ADD  R30,R26
000684 1ffb      	ADC  R31,R27
000685 010f      	MOVW R0,R30
000686 a9e8      	LDD  R30,Y+48
000687 a9f9      	LDD  R31,Y+48+1
000688 9731      	SBIW R30,1
000689 01de      	MOVW R26,R28
00068a 96d8      	ADIW R26,56
00068b 940e 0af7 	CALL SUBOPT_0x18
00068d 01d0      	MOVW R26,R0
00068e 93ed      	ST   X+,R30
00068f 93fc      	ST   X,R31
                 ; 0000 0111                 delay_us(10);
                +
000690 e381     +LDI R24 , LOW ( 49 )
                +__DELAY_USB_LOOP :
000691 958a     +DEC R24
000692 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 49
                 ; 0000 0112             }
000693 a9e8      	LDD  R30,Y+48
000694 a9f9      	LDD  R31,Y+48+1
000695 9731      	SBIW R30,1
000696 abe8      	STD  Y+48,R30
000697 abf9      	STD  Y+48+1,R31
000698 cfdf      	RJMP _0xEB
                 _0xEC:
                 ; 0000 0113             fnd[0] = t;
                +
000699 af48     +STD Y + 56 , R20
00069a af59     +STD Y + 56 + 1 , R21
                 	__PUTWSR 20,21,56
                 ; 0000 0114             count++;
00069b 940e 0b0b 	CALL SUBOPT_0x1B
                 ; 0000 0115             delay_ms(50);
00069d 940e 0b14 	CALL SUBOPT_0x1C
                 ; 0000 0116         }
                 ; 0000 0117         finalnum = 1000*fnd[3] + 100*fnd[2] + 10*fnd[1] + fnd[0];
                 _0xE9:
00069f adee      	LDD  R30,Y+62
0006a0 adff      	LDD  R31,Y+62+1
0006a1 eea8      	LDI  R26,LOW(1000)
0006a2 e0b3      	LDI  R27,HIGH(1000)
0006a3 940e 0c26 	CALL __MULW12
0006a5 01bf      	MOVW R22,R30
0006a6 adec      	LDD  R30,Y+60
0006a7 adfd      	LDD  R31,Y+60+1
0006a8 e6a4      	LDI  R26,LOW(100)
0006a9 e0b0      	LDI  R27,HIGH(100)
0006aa 940e 0c26 	CALL __MULW12
                +
0006ac 0f6e     +ADD R22 , R30
0006ad 1f7f     +ADC R23 , R31
                 	__ADDWRR 22,23,30,31
0006ae adea      	LDD  R30,Y+58
0006af adfb      	LDD  R31,Y+58+1
0006b0 e0aa      	LDI  R26,LOW(10)
0006b1 e0b0      	LDI  R27,HIGH(10)
0006b2 940e 0c26 	CALL __MULW12
0006b4 0fe6      	ADD  R30,R22
0006b5 1ff7      	ADC  R31,R23
0006b6 ada8      	LDD  R26,Y+56
0006b7 adb9      	LDD  R27,Y+56+1
0006b8 0fea      	ADD  R30,R26
0006b9 1ffb      	ADC  R31,R27
                +
0006ba 01de     +MOVW R26 , R28
0006bb 5ba0     +SUBI R26 , LOW ( - 80 )
0006bc 4fbf     +SBCI R27 , HIGH ( - 80 )
0006bd 93ed     +ST X + , R30
0006be 93fc     +ST X , R31
                 	__PUTW1SX 80
                 ; 0000 0118         OUTFND(finalnum); //FND Ãâ·Â
0006bf 93fa      	ST   -Y,R31
0006c0 93ea      	ST   -Y,R30
0006c1 dd2e      	RCALL _OUTFND
                 ; 0000 0119         buzzer_play_function(t); //¼ýÀÚ¿¡ ¸Â´Â À½ Ãâ·Â
0006c2 935a      	ST   -Y,R21
0006c3 934a      	ST   -Y,R20
0006c4 dd70      	RCALL _buzzer_play_function
                 ; 0000 011A 
                 ; 0000 011B 
                 ; 0000 011C 
                 ; 0000 011D 
                 ; 0000 011E 
                 ; 0000 011F 
                 ; 0000 0120         switch (STATE) {  //LCDÃ³
0006c5 a9ed      	LDD  R30,Y+53
0006c6 940e 0ad9 	CALL SUBOPT_0x11
                 ; 0000 0121 
                 ; 0000 0122             case NONE: //±âº» »óÅÂ
0006c8 f5f1      	BRNE _0xF0
                 ; 0000 0123                 if (fnd[1] <=3 && fnd[1] >0 && fnd[0] == 10) {
0006c9 adaa      	LDD  R26,Y+58
0006ca adbb      	LDD  R27,Y+58+1
0006cb 9714      	SBIW R26,4
0006cc f44c      	BRGE _0xF2
0006cd adaa      	LDD  R26,Y+58
0006ce adbb      	LDD  R27,Y+58+1
0006cf 940e 0c76 	CALL __CPW02
0006d1 f424      	BRGE _0xF2
0006d2 ada8      	LDD  R26,Y+56
0006d3 adb9      	LDD  R27,Y+56+1
0006d4 971a      	SBIW R26,10
0006d5 f009      	BREQ _0xF3
                 _0xF2:
0006d6 c006      	RJMP _0xF1
                 _0xF3:
                 ; 0000 0124                     user_name = fnd[1]-1;
0006d7 adea      	LDD  R30,Y+58
0006d8 adfb      	LDD  R31,Y+58+1
0006d9 9731      	SBIW R30,1
0006da 83eb      	STD  Y+3,R30
                 ; 0000 0125                     STATE=INPUT_PHONE_INIT ;
0006db e0e3      	LDI  R30,LOW(3)
0006dc abed      	STD  Y+53,R30
                 ; 0000 0126                 }
                 ; 0000 0127                 if (fnd[1]==4 && fnd[0] == 10) { //Å»Ãâ ¸ðµå
                 _0xF1:
0006dd adaa      	LDD  R26,Y+58
0006de adbb      	LDD  R27,Y+58+1
0006df 9714      	SBIW R26,4
0006e0 f421      	BRNE _0xF5
0006e1 ada8      	LDD  R26,Y+56
0006e2 adb9      	LDD  R27,Y+56+1
0006e3 971a      	SBIW R26,10
0006e4 f009      	BREQ _0xF6
                 _0xF5:
0006e5 c020      	RJMP _0xF4
                 _0xF6:
                 ; 0000 0128                     LCD_Clear();
0006e6 940e 0b1d 	CALL SUBOPT_0x1E
                 ; 0000 0129                     LCD_Pos(0,0);
0006e8 dad0      	RCALL _LCD_Pos
                 ; 0000 012A                     LCD_Str("Choose Seat");
                +
0006e9 e4e9     +LDI R30 , LOW ( _0xF7 + ( 0 ) )
0006ea e0f5     +LDI R31 , HIGH ( _0xF7 + ( 0 ) )
                 	__POINTW1MN _0xF7,0
0006eb 940e 0b20 	CALL SUBOPT_0x1F
                 ; 0000 012B                     LCD_Pos(1,0);
0006ed 940e 0b24 	CALL SUBOPT_0x20
                 ; 0000 012C                     if (user_state[0] == 'O') LCD_Str("1  ");
0006ef a9aa      	LDD  R26,Y+50
0006f0 34af      	CPI  R26,LOW(0x4F)
0006f1 f421      	BRNE _0xF8
                +
0006f2 e5e5     +LDI R30 , LOW ( _0xF7 + ( 12 ) )
0006f3 e0f5     +LDI R31 , HIGH ( _0xF7 + ( 12 ) )
                 	__POINTW1MN _0xF7,12
0006f4 940e 0b20 	CALL SUBOPT_0x1F
                 ; 0000 012D                     if (user_state[1] == 'O') LCD_Str("2  ");
                 _0xF8:
0006f6 a9ab      	LDD  R26,Y+51
0006f7 34af      	CPI  R26,LOW(0x4F)
0006f8 f421      	BRNE _0xF9
                +
0006f9 e5e9     +LDI R30 , LOW ( _0xF7 + ( 16 ) )
0006fa e0f5     +LDI R31 , HIGH ( _0xF7 + ( 16 ) )
                 	__POINTW1MN _0xF7,16
0006fb 940e 0b20 	CALL SUBOPT_0x1F
                 ; 0000 012E                     if (user_state[2] == 'O') LCD_Str("3  ");
                 _0xF9:
0006fd a9ac      	LDD  R26,Y+52
0006fe 34af      	CPI  R26,LOW(0x4F)
0006ff f421      	BRNE _0xFA
                +
000700 e5ed     +LDI R30 , LOW ( _0xF7 + ( 20 ) )
000701 e0f5     +LDI R31 , HIGH ( _0xF7 + ( 20 ) )
                 	__POINTW1MN _0xF7,20
000702 940e 0b20 	CALL SUBOPT_0x1F
                 ; 0000 012F                     STATE=EXIT_CHOOSE ;
                 _0xFA:
000704 e0e6      	LDI  R30,LOW(6)
000705 abed      	STD  Y+53,R30
                 ; 0000 0130                 }
                 ; 0000 0131                 break;
                 _0xF4:
000706 c1ab      	RJMP _0xEF
                 ; 0000 0132 
                 ; 0000 0133             case START: //¾÷·Îµå
                 _0xF0:
000707 30e1      	CPI  R30,LOW(0x1)
000708 e0a0      	LDI  R26,HIGH(0x1)
000709 07fa      	CPC  R31,R26
00070a f549      	BRNE _0xFB
                 ; 0000 0134                 LCD_Pos(0,0);
00070b 940e 0aec 	CALL SUBOPT_0x16
00070d daab      	RCALL _LCD_Pos
                 ; 0000 0135                 LCD_Str("StudyRoom  4:OUT");
                +
00070e e6e1     +LDI R30 , LOW ( _0xF7 + ( 24 ) )
00070f e0f5     +LDI R31 , HIGH ( _0xF7 + ( 24 ) )
                 	__POINTW1MN _0xF7,24
000710 940e 0b20 	CALL SUBOPT_0x1F
                 ; 0000 0136                 sprintf(Message, "1:%c 2:%c 3:%c", user_state[0],user_state[1],user_state[2]);
000712 01fe      	MOVW R30,R28
000713 5aec      	SUBI R30,LOW(-(84))
000714 4fff      	SBCI R31,HIGH(-(84))
000715 93fa      	ST   -Y,R31
000716 93ea      	ST   -Y,R30
                +
000717 ebe8     +LDI R30 , LOW ( 2 * _0x0 + ( 114 ) )
000718 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 114 ) )
                 	__POINTW1FN _0x0,114
000719 93fa      	ST   -Y,R31
00071a 93ea      	ST   -Y,R30
00071b a9ee      	LDD  R30,Y+54
00071c 940e 0b2a 	CALL SUBOPT_0x21
00071e adeb      	LDD  R30,Y+59
00071f 940e 0b2a 	CALL SUBOPT_0x21
                +
000721 01fe     +MOVW R30 , R28
000722 5ce0     +SUBI R30 , LOW ( - 64 )
000723 4fff     +SBCI R31 , HIGH ( - 64 )
000724 81e0     +LD R30 , Z
                 	__GETB1SX 64
000725 940e 0b2a 	CALL SUBOPT_0x21
000727 e08c      	LDI  R24,12
000728 940e 0a27 	CALL _sprintf
00072a 9660      	ADIW R28,16
                 ; 0000 0137                 LCD_Pos(1,0);
00072b 940e 0b24 	CALL SUBOPT_0x20
                 ; 0000 0138                 LCD_Str(Message);
00072d 01fe      	MOVW R30,R28
00072e 5aec      	SUBI R30,LOW(-(84))
00072f 4fff      	SBCI R31,HIGH(-(84))
000730 940e 0b20 	CALL SUBOPT_0x1F
                 ; 0000 0139                 STATE = NONE;
000732 e0e0      	LDI  R30,LOW(0)
000733 c17d      	RJMP _0x12C
                 ; 0000 013A                 break;
                 ; 0000 013B 
                 ; 0000 013C             case INPUT_PHONE: //ÀÔÀå : Æù¹øÈ£ ÀÔ·Â
                 _0xFB:
000734 30e2      	CPI  R30,LOW(0x2)
000735 e0a0      	LDI  R26,HIGH(0x2)
000736 07fa      	CPC  R31,R26
000737 f599      	BRNE _0xFC
                 ; 0000 013D 
                 ; 0000 013E                 if (fnd[0] == 10){
000738 ada8      	LDD  R26,Y+56
000739 adb9      	LDD  R27,Y+56+1
00073a 971a      	SBIW R26,10
00073b f561      	BRNE _0xFD
                 ; 0000 013F                     sprintf(user_pnumber[user_name], "%d%d%d%d%d%d%d%d%d%d%d", fnd[11],fnd[10],fnd[9],fnd[8],fnd[7],fnd[6],fnd[5],fnd[4],fnd[3],fnd[2],fnd[1]);
00073c 940e 0b30 	CALL SUBOPT_0x22
00073e 940e 0b35 	CALL SUBOPT_0x23
000740 940e 0b3a 	CALL SUBOPT_0x24
                 ; 0000 0140                     user_state[user_name] ='X';
000742 940e 0bb3 	CALL SUBOPT_0x25
000744 e5e8      	LDI  R30,LOW(88)
000745 93ec      	ST   X,R30
                 ; 0000 0141                     for(i=0;i<11;i++){
000746 e0e0      	LDI  R30,LOW(0)
000747 abe8      	STD  Y+48,R30
000748 abe9      	STD  Y+48+1,R30
                 _0xFF:
000749 a9a8      	LDD  R26,Y+48
00074a a9b9      	LDD  R27,Y+48+1
00074b 971b      	SBIW R26,11
00074c f4cc      	BRGE _0x100
                 ; 0000 0142                         num[user_name][i] = user_pnumber[user_name][i];
00074d 940e 0b30 	CALL SUBOPT_0x22
00074f 5de1      	SUBI R30,LOW(-_num)
000750 4ff9      	SBCI R31,HIGH(-_num)
000751 a9a8      	LDD  R26,Y+48
000752 a9b9      	LDD  R27,Y+48+1
000753 0fea      	ADD  R30,R26
000754 1ffb      	ADC  R31,R27
000755 01bf      	MOVW R22,R30
000756 01f0      	MOVW R30,R0
000757 940e 0b35 	CALL SUBOPT_0x23
000759 a9a8      	LDD  R26,Y+48
00075a a9b9      	LDD  R27,Y+48+1
00075b 0fae      	ADD  R26,R30
00075c 1fbf      	ADC  R27,R31
00075d 91ec      	LD   R30,X
00075e 01db      	MOVW R26,R22
00075f 93ec      	ST   X,R30
                 ; 0000 0143                     }
000760 a9e8      	LDD  R30,Y+48
000761 a9f9      	LDD  R31,Y+48+1
000762 9631      	ADIW R30,1
000763 abe8      	STD  Y+48,R30
000764 abf9      	STD  Y+48+1,R31
000765 cfe3      	RJMP _0xFF
                 _0x100:
                 ; 0000 0144                     STATE = CHECK_PNUM_INIT;
000766 e0e5      	LDI  R30,LOW(5)
000767 abed      	STD  Y+53,R30
                 ; 0000 0145                 }
                 ; 0000 0146                 delay_ms(10);
                 _0xFD:
000768 940e 0ae6 	CALL SUBOPT_0x14
                 ; 0000 0147                 break;
00076a c147      	RJMP _0xEF
                 ; 0000 0148 
                 ; 0000 0149             case INPUT_PHONE_INIT:
                 _0xFC:
00076b 30e3      	CPI  R30,LOW(0x3)
00076c e0a0      	LDI  R26,HIGH(0x3)
00076d 07fa      	CPC  R31,R26
00076e f4d1      	BRNE _0x101
                 ; 0000 014A                 fnd[0]=0;
00076f 940e 0bba 	CALL SUBOPT_0x26
                 ; 0000 014B                 LCD_Clear();
                 ; 0000 014C                 LCD_Pos(0,0);
000771 da47      	RCALL _LCD_Pos
                 ; 0000 014D                 LCD_Str("Input PhoneNum") ;
                +
000772 e7e2     +LDI R30 , LOW ( _0xF7 + ( 41 ) )
000773 e0f5     +LDI R31 , HIGH ( _0xF7 + ( 41 ) )
                 	__POINTW1MN _0xF7,41
000774 940e 0b20 	CALL SUBOPT_0x1F
                 ; 0000 014E                 STATE = INPUT_PHONE;
000776 e0e2      	LDI  R30,LOW(2)
000777 abed      	STD  Y+53,R30
                 ; 0000 014F 
                 ; 0000 0150                 if (user_state[user_name] == 'O'){
000778 940e 0bb3 	CALL SUBOPT_0x25
00077a 91ac      	LD   R26,X
00077b 34af      	CPI  R26,LOW(0x4F)
00077c f459      	BRNE _0x102
                 ; 0000 0151                     LCD_Clear();
00077d 940e 0b1d 	CALL SUBOPT_0x1E
                 ; 0000 0152                     LCD_Pos(0,0);
00077f da39      	RCALL _LCD_Pos
                 ; 0000 0153                     LCD_Str("Someone Used");
                +
000780 e8e1     +LDI R30 , LOW ( _0xF7 + ( 56 ) )
000781 e0f5     +LDI R31 , HIGH ( _0xF7 + ( 56 ) )
                 	__POINTW1MN _0xF7,56
000782 940e 0b20 	CALL SUBOPT_0x1F
                 ; 0000 0154                     delay_ms(1000);
000784 940e 0ae9 	CALL SUBOPT_0x15
                 ; 0000 0155                     STATE = START;
000786 e0e1      	LDI  R30,LOW(1)
000787 abed      	STD  Y+53,R30
                 ; 0000 0156                 }
                 ; 0000 0157 
                 ; 0000 0158                 break;
                 _0x102:
000788 c129      	RJMP _0xEF
                 ; 0000 0159             case CHECK_PNUM:
                 _0x101:
000789 30e4      	CPI  R30,LOW(0x4)
00078a e0a0      	LDI  R26,HIGH(0x4)
00078b 07fa      	CPC  R31,R26
00078c f591      	BRNE _0x103
                 ; 0000 015A 
                 ; 0000 015B                 if (fnd[1] == 1 && fnd[0] == 10){
00078d adaa      	LDD  R26,Y+58
00078e adbb      	LDD  R27,Y+58+1
00078f 9711      	SBIW R26,1
000790 f421      	BRNE _0x105
000791 ada8      	LDD  R26,Y+56
000792 adb9      	LDD  R27,Y+56+1
000793 971a      	SBIW R26,10
000794 f009      	BREQ _0x106
                 _0x105:
000795 c01d      	RJMP _0x104
                 _0x106:
                 ; 0000 015C                     user_state[user_name] = 'O';
000796 940e 0bb3 	CALL SUBOPT_0x25
000798 e4ef      	LDI  R30,LOW(79)
000799 93ec      	ST   X,R30
                 ; 0000 015D                     OCR1A = 3000;
00079a ebe8      	LDI  R30,LOW(3000)
00079b e0fb      	LDI  R31,HIGH(3000)
00079c bdfb      	OUT  0x2A+1,R31
00079d bdea      	OUT  0x2A,R30
                 ; 0000 015E                     LCD_Clear();
00079e 940e 0b1d 	CALL SUBOPT_0x1E
                 ; 0000 015F                     LCD_Pos(0,0);
0007a0 da18      	RCALL _LCD_Pos
                 ; 0000 0160                     LCD_Str("Door Open") ;
                +
0007a1 e8ee     +LDI R30 , LOW ( _0xF7 + ( 69 ) )
0007a2 e0f5     +LDI R31 , HIGH ( _0xF7 + ( 69 ) )
                 	__POINTW1MN _0xF7,69
0007a3 940e 0b20 	CALL SUBOPT_0x1F
                 ; 0000 0161                     delay_ms(5000);
0007a5 e8e8      	LDI  R30,LOW(5000)
0007a6 e1f3      	LDI  R31,HIGH(5000)
0007a7 940e 0a88 	CALL SUBOPT_0x2
                 ; 0000 0162                     OCR1A = 4710;
0007a9 940e 0aae 	CALL SUBOPT_0x9
                 ; 0000 0163                     STATE = START;
0007ab e0e1      	LDI  R30,LOW(1)
0007ac abed      	STD  Y+53,R30
                 ; 0000 0164                     fnd[0]=0;
0007ad e0e0      	LDI  R30,LOW(0)
0007ae afe8      	STD  Y+56,R30
0007af afe9      	STD  Y+56+1,R30
                 ; 0000 0165                     user_name = 4;
0007b0 e0e4      	LDI  R30,LOW(4)
0007b1 83eb      	STD  Y+3,R30
                 ; 0000 0166                 }
                 ; 0000 0167                 else if (fnd[1] == 2 && fnd[0] == 10) STATE = INPUT_PHONE_INIT;
0007b2 c00b      	RJMP _0x107
                 _0x104:
0007b3 adaa      	LDD  R26,Y+58
0007b4 adbb      	LDD  R27,Y+58+1
0007b5 9712      	SBIW R26,2
0007b6 f421      	BRNE _0x109
0007b7 ada8      	LDD  R26,Y+56
0007b8 adb9      	LDD  R27,Y+56+1
0007b9 971a      	SBIW R26,10
0007ba f009      	BREQ _0x10A
                 _0x109:
0007bb c002      	RJMP _0x108
                 _0x10A:
0007bc e0e3      	LDI  R30,LOW(3)
0007bd abed      	STD  Y+53,R30
                 ; 0000 0168             break;
                 _0x108:
                 _0x107:
0007be c0f3      	RJMP _0xEF
                 ; 0000 0169             case CHECK_PNUM_INIT:
                 _0x103:
0007bf 30e5      	CPI  R30,LOW(0x5)
0007c0 e0a0      	LDI  R26,HIGH(0x5)
0007c1 07fa      	CPC  R31,R26
0007c2 f4a1      	BRNE _0x10B
                 ; 0000 016A                 fnd[0]=0;
0007c3 940e 0bba 	CALL SUBOPT_0x26
                 ; 0000 016B                 LCD_Clear();
                 ; 0000 016C                 LCD_Pos(0,0);
0007c5 d9f3      	RCALL _LCD_Pos
                 ; 0000 016D                 LCD_Str(user_pnumber[user_name]);
0007c6 940e 0b30 	CALL SUBOPT_0x22
0007c8 940e 0b35 	CALL SUBOPT_0x23
0007ca 940e 0b20 	CALL SUBOPT_0x1F
                 ; 0000 016E                 LCD_Pos(1,0);
0007cc 940e 0b24 	CALL SUBOPT_0x20
                 ; 0000 016F                 LCD_Str("1:Yes  2:No");
                +
0007ce e9e8     +LDI R30 , LOW ( _0xF7 + ( 79 ) )
0007cf e0f5     +LDI R31 , HIGH ( _0xF7 + ( 79 ) )
                 	__POINTW1MN _0xF7,79
0007d0 940e 0b20 	CALL SUBOPT_0x1F
                 ; 0000 0170                 fnd[1] = 0;
0007d2 e0e0      	LDI  R30,LOW(0)
0007d3 afea      	STD  Y+58,R30
0007d4 afeb      	STD  Y+58+1,R30
                 ; 0000 0171                 STATE = CHECK_PNUM;
0007d5 e0e4      	LDI  R30,LOW(4)
0007d6 c0da      	RJMP _0x12C
                 ; 0000 0172             break;
                 ; 0000 0173 
                 ; 0000 0174             case EXIT_CHOOSE:  //ÅðÀå ¹øÈ£ ¼±
                 _0x10B:
0007d7 30e6      	CPI  R30,LOW(0x6)
0007d8 e0a0      	LDI  R26,HIGH(0x6)
0007d9 07fa      	CPC  R31,R26
0007da f541      	BRNE _0x10C
                 ; 0000 0175 
                 ; 0000 0176                 user_name = fnd[1]-1;
0007db adea      	LDD  R30,Y+58
0007dc adfb      	LDD  R31,Y+58+1
0007dd 9731      	SBIW R30,1
0007de 83eb      	STD  Y+3,R30
                 ; 0000 0177                 if (fnd[1] <=3 && fnd[1] >0 && fnd[0] == 10){
0007df adaa      	LDD  R26,Y+58
0007e0 adbb      	LDD  R27,Y+58+1
0007e1 9714      	SBIW R26,4
0007e2 f44c      	BRGE _0x10E
0007e3 adaa      	LDD  R26,Y+58
0007e4 adbb      	LDD  R27,Y+58+1
0007e5 940e 0c76 	CALL __CPW02
0007e7 f424      	BRGE _0x10E
0007e8 ada8      	LDD  R26,Y+56
0007e9 adb9      	LDD  R27,Y+56+1
0007ea 971a      	SBIW R26,10
0007eb f009      	BREQ _0x10F
                 _0x10E:
0007ec c015      	RJMP _0x10D
                 _0x10F:
                 ; 0000 0178 
                 ; 0000 0179                     STATE = INPUT_PHONE_OUT_INIT;
0007ed e0ea      	LDI  R30,LOW(10)
0007ee abed      	STD  Y+53,R30
                 ; 0000 017A 
                 ; 0000 017B                     if (user_state[user_name] != 'O'){
0007ef 940e 0bb3 	CALL SUBOPT_0x25
0007f1 91ac      	LD   R26,X
0007f2 34af      	CPI  R26,LOW(0x4F)
0007f3 f071      	BREQ _0x110
                 ; 0000 017C                         LCD_Clear();
0007f4 940e 0b1d 	CALL SUBOPT_0x1E
                 ; 0000 017D                         LCD_Pos(0,0);
0007f6 d9c2      	RCALL _LCD_Pos
                 ; 0000 017E                         LCD_Str("Empty Seat");
                +
0007f7 eae4     +LDI R30 , LOW ( _0xF7 + ( 91 ) )
0007f8 e0f5     +LDI R31 , HIGH ( _0xF7 + ( 91 ) )
                 	__POINTW1MN _0xF7,91
0007f9 940e 0b20 	CALL SUBOPT_0x1F
                 ; 0000 017F                         delay_ms(1000);
0007fb 940e 0ae9 	CALL SUBOPT_0x15
                 ; 0000 0180                         fnd[0]=0;
0007fd e0e0      	LDI  R30,LOW(0)
0007fe afe8      	STD  Y+56,R30
0007ff afe9      	STD  Y+56+1,R30
                 ; 0000 0181                         STATE = START;
000800 e0e1      	LDI  R30,LOW(1)
000801 abed      	STD  Y+53,R30
                 ; 0000 0182                     }
                 ; 0000 0183                 }
                 _0x110:
                 ; 0000 0184 
                 ; 0000 0185 
                 ; 0000 0186 
                 ; 0000 0187             break;
                 _0x10D:
000802 c0af      	RJMP _0xEF
                 ; 0000 0188              case CHECK_PNUM_OUT_INIT:
                 _0x10C:
000803 30e8      	CPI  R30,LOW(0x8)
000804 e0a0      	LDI  R26,HIGH(0x8)
000805 07fa      	CPC  R31,R26
000806 f489      	BRNE _0x111
                 ; 0000 0189                  fnd[0]=0;
000807 940e 0b17 	CALL SUBOPT_0x1D
                 ; 0000 018A                  fnd[1] = 0;
                 ; 0000 018B                  LCD_Clear();
000809 940e 0b1d 	CALL SUBOPT_0x1E
                 ; 0000 018C                  LCD_Pos(0,0);
00080b d9ad      	RCALL _LCD_Pos
                 ; 0000 018D                  LCD_Str(check_pnumber);
00080c 01fe      	MOVW R30,R28
00080d 9634      	ADIW R30,4
00080e 940e 0b20 	CALL SUBOPT_0x1F
                 ; 0000 018E                  LCD_Pos(1,0);
000810 940e 0b24 	CALL SUBOPT_0x20
                 ; 0000 018F 
                 ; 0000 0190                  LCD_Str("1:Yes  2:No");
                +
000812 eaef     +LDI R30 , LOW ( _0xF7 + ( 102 ) )
000813 e0f5     +LDI R31 , HIGH ( _0xF7 + ( 102 ) )
                 	__POINTW1MN _0xF7,102
000814 940e 0b20 	CALL SUBOPT_0x1F
                 ; 0000 0191                  STATE = CHECK_PNUM_OUT;
000816 e0e7      	LDI  R30,LOW(7)
000817 c099      	RJMP _0x12C
                 ; 0000 0192 
                 ; 0000 0193 
                 ; 0000 0194             break;
                 ; 0000 0195             case CHECK_PNUM_OUT:   //ºñ¹Ð¹øÈ£ ÀÏÄ¡½Ã Å»Ãâ
                 _0x111:
000818 30e7      	CPI  R30,LOW(0x7)
000819 e0a0      	LDI  R26,HIGH(0x7)
00081a 07fa      	CPC  R31,R26
00081b f011      	BREQ PC+3
00081c 940c 0894 	JMP _0x112
                 ; 0000 0196 
                 ; 0000 0197                  if (fnd[1] == 1 && fnd[0] == 10){
00081e adaa      	LDD  R26,Y+58
00081f adbb      	LDD  R27,Y+58+1
000820 9711      	SBIW R26,1
000821 f421      	BRNE _0x114
000822 ada8      	LDD  R26,Y+56
000823 adb9      	LDD  R27,Y+56+1
000824 971a      	SBIW R26,10
000825 f009      	BREQ _0x115
                 _0x114:
000826 c061      	RJMP _0x113
                 _0x115:
                 ; 0000 0198                    int cnt=0;
                 ; 0000 0199                    for(i=0;i<11;i++){
000827 9722      	SBIW R28,2
000828 e0e0      	LDI  R30,LOW(0)
000829 83e8      	ST   Y,R30
00082a 83e9      	STD  Y+1,R30
                 ;	Sonar_range -> Y+126
                 ;	Message -> Y+86
                 ;	count -> Y+84
                 ;	finalnum -> Y+82
                 ;	fnd -> Y+58
                 ;	angle -> Y+56
                 ;	STATE -> Y+55
                 ;	user_state -> Y+52
                 ;	i -> Y+50
                 ;	user_pnumber -> Y+17
                 ;	check_pnumber -> Y+6
                 ;	user_name -> Y+5
                 ;	empty_cnt -> Y+2
                 ;	cnt -> Y+0
00082b abea      	STD  Y+50,R30
00082c abeb      	STD  Y+50+1,R30
                 _0x117:
00082d a9aa      	LDD  R26,Y+50
00082e a9bb      	LDD  R27,Y+50+1
00082f 971b      	SBIW R26,11
000830 f4e4      	BRGE _0x118
                 ; 0000 019A                       if(num[user_name][i] == check_pnumber[i] ) cnt ++;  }
000831 81ed      	LDD  R30,Y+5
000832 e0ab      	LDI  R26,LOW(11)
000833 9fea      	MUL  R30,R26
000834 01f0      	MOVW R30,R0
000835 5de1      	SUBI R30,LOW(-_num)
000836 4ff9      	SBCI R31,HIGH(-_num)
000837 a9aa      	LDD  R26,Y+50
000838 a9bb      	LDD  R27,Y+50+1
000839 0fae      	ADD  R26,R30
00083a 1fbf      	ADC  R27,R31
00083b 900c      	LD   R0,X
00083c a9ea      	LDD  R30,Y+50
00083d a9fb      	LDD  R31,Y+50+1
00083e 01de      	MOVW R26,R28
00083f 9616      	ADIW R26,6
000840 0fae      	ADD  R26,R30
000841 1fbf      	ADC  R27,R31
000842 91ec      	LD   R30,X
000843 15e0      	CP   R30,R0
000844 f411      	BRNE _0x119
000845 940e 0a8f 	CALL SUBOPT_0x4
                 _0x119:
000847 a9ea      	LDD  R30,Y+50
000848 a9fb      	LDD  R31,Y+50+1
000849 9631      	ADIW R30,1
00084a abea      	STD  Y+50,R30
00084b abfb      	STD  Y+50+1,R31
00084c cfe0      	RJMP _0x117
                 _0x118:
                 ; 0000 019B 
                 ; 0000 019C                     if (cnt == 11 ){  //ºñ¹Ð¹øÈ£ ÀÏÄ¡
00084d 81a8      	LD   R26,Y
00084e 81b9      	LDD  R27,Y+1
00084f 971b      	SBIW R26,11
000850 f529      	BRNE _0x11A
                 ; 0000 019D                        LCD_Clear();
000851 940e 0b1d 	CALL SUBOPT_0x1E
                 ; 0000 019E                        LCD_Pos(0,0);
000853 d965      	RCALL _LCD_Pos
                 ; 0000 019F                        LCD_Str("User Check") ;
                +
000854 ebeb     +LDI R30 , LOW ( _0xF7 + ( 114 ) )
000855 e0f5     +LDI R31 , HIGH ( _0xF7 + ( 114 ) )
                 	__POINTW1MN _0xF7,114
000856 940e 0b20 	CALL SUBOPT_0x1F
                 ; 0000 01A0                        LCD_Pos(1,0);
000858 940e 0b24 	CALL SUBOPT_0x20
                 ; 0000 01A1                        LCD_Str("Good Bye") ;
                +
00085a ece6     +LDI R30 , LOW ( _0xF7 + ( 125 ) )
00085b e0f5     +LDI R31 , HIGH ( _0xF7 + ( 125 ) )
                 	__POINTW1MN _0xF7,125
00085c 940e 0b20 	CALL SUBOPT_0x1F
                 ; 0000 01A2                        OCR1A = 3000;
00085e ebe8      	LDI  R30,LOW(3000)
00085f e0fb      	LDI  R31,HIGH(3000)
000860 bdfb      	OUT  0x2A+1,R31
000861 bdea      	OUT  0x2A,R30
                 ; 0000 01A3                         delay_ms(5000);
000862 e8e8      	LDI  R30,LOW(5000)
000863 e1f3      	LDI  R31,HIGH(5000)
000864 940e 0a88 	CALL SUBOPT_0x2
                 ; 0000 01A4                         OCR1A = 4710;
000866 940e 0aae 	CALL SUBOPT_0x9
                 ; 0000 01A5                       user_state[user_name] ='X';
000868 81ed      	LDD  R30,Y+5
000869 e0f0      	LDI  R31,0
00086a 01de      	MOVW R26,R28
00086b 96d4      	ADIW R26,52
00086c 0fae      	ADD  R26,R30
00086d 1fbf      	ADC  R27,R31
00086e e5e8      	LDI  R30,LOW(88)
00086f 93ec      	ST   X,R30
                 ; 0000 01A6                       STATE = START;
000870 e0e1      	LDI  R30,LOW(1)
000871 abef      	STD  Y+55,R30
                 ; 0000 01A7                       fnd[0] = 0;
000872 e0e0      	LDI  R30,LOW(0)
000873 afea      	STD  Y+58,R30
000874 afeb      	STD  Y+58+1,R30
                 ; 0000 01A8                     }
                 ; 0000 01A9                     else{ //ºñ¹Ð¹øÈ£ ºÒÀÏÄ¡
000875 c010      	RJMP _0x11B
                 _0x11A:
                 ; 0000 01AA                       LCD_Clear();
000876 940e 0b1d 	CALL SUBOPT_0x1E
                 ; 0000 01AB                       LCD_Pos(0,0);
000878 d940      	RCALL _LCD_Pos
                 ; 0000 01AC                       LCD_Str("Wrong Password") ;
                +
000879 ecef     +LDI R30 , LOW ( _0xF7 + ( 134 ) )
00087a e0f5     +LDI R31 , HIGH ( _0xF7 + ( 134 ) )
                 	__POINTW1MN _0xF7,134
00087b 940e 0b20 	CALL SUBOPT_0x1F
                 ; 0000 01AD                       delay_ms(2000);
00087d ede0      	LDI  R30,LOW(2000)
00087e e0f7      	LDI  R31,HIGH(2000)
00087f 940e 0a88 	CALL SUBOPT_0x2
                 ; 0000 01AE                       fnd[0] = 0;
000881 e0e0      	LDI  R30,LOW(0)
000882 afea      	STD  Y+58,R30
000883 afeb      	STD  Y+58+1,R30
                 ; 0000 01AF                       STATE = START;
000884 e0e1      	LDI  R30,LOW(1)
000885 abef      	STD  Y+55,R30
                 ; 0000 01B0                     }
                 _0x11B:
                 ; 0000 01B1                 }
000886 9622      	ADIW R28,2
                 ; 0000 01B2                 else if (fnd[1] == 2 && fnd[0] == 10) STATE = INPUT_PHONE_OUT_INIT;
000887 c00b      	RJMP _0x11C
                 _0x113:
000888 adaa      	LDD  R26,Y+58
000889 adbb      	LDD  R27,Y+58+1
00088a 9712      	SBIW R26,2
00088b f421      	BRNE _0x11E
00088c ada8      	LDD  R26,Y+56
00088d adb9      	LDD  R27,Y+56+1
00088e 971a      	SBIW R26,10
00088f f009      	BREQ _0x11F
                 _0x11E:
000890 c002      	RJMP _0x11D
                 _0x11F:
000891 e0ea      	LDI  R30,LOW(10)
000892 abed      	STD  Y+53,R30
                 ; 0000 01B3 
                 ; 0000 01B4 
                 ; 0000 01B5             break;
                 _0x11D:
                 _0x11C:
000893 c01e      	RJMP _0xEF
                 ; 0000 01B6             case INPUT_PHONE_OUT: //ÅðÀå : Æù¹øÈ£ ÀÔ·Â
                 _0x112:
000894 30e9      	CPI  R30,LOW(0x9)
000895 e0a0      	LDI  R26,HIGH(0x9)
000896 07fa      	CPC  R31,R26
000897 f469      	BRNE _0x120
                 ; 0000 01B7 
                 ; 0000 01B8                 if (fnd[0] == 10){
000898 ada8      	LDD  R26,Y+56
000899 adb9      	LDD  R27,Y+56+1
00089a 971a      	SBIW R26,10
00089b f431      	BRNE _0x121
                 ; 0000 01B9                     sprintf(check_pnumber, "%d%d%d%d%d%d%d%d%d%d%d", fnd[11],fnd[10],fnd[9],fnd[8],fnd[7],fnd[6],fnd[5],fnd[4],fnd[3],fnd[2],fnd[1]);
00089c 01fe      	MOVW R30,R28
00089d 9634      	ADIW R30,4
00089e 940e 0b3a 	CALL SUBOPT_0x24
                 ; 0000 01BA 
                 ; 0000 01BB                     STATE = CHECK_PNUM_OUT_INIT;
0008a0 e0e8      	LDI  R30,LOW(8)
0008a1 abed      	STD  Y+53,R30
                 ; 0000 01BC                 }
                 ; 0000 01BD                 delay_ms(10);
                 _0x121:
0008a2 940e 0ae6 	CALL SUBOPT_0x14
                 ; 0000 01BE                 break;
0008a4 c00d      	RJMP _0xEF
                 ; 0000 01BF 
                 ; 0000 01C0              case INPUT_PHONE_OUT_INIT: //ÅðÀå : Æù¹øÈ£ ÀÔ·Â
                 _0x120:
0008a5 30ea      	CPI  R30,LOW(0xA)
0008a6 e0a0      	LDI  R26,HIGH(0xA)
0008a7 07fa      	CPC  R31,R26
0008a8 f449      	BRNE _0xEF
                 ; 0000 01C1 
                 ; 0000 01C2 
                 ; 0000 01C3                 fnd[0]=0;
0008a9 940e 0bba 	CALL SUBOPT_0x26
                 ; 0000 01C4                 LCD_Clear();
                 ; 0000 01C5                 LCD_Pos(0,0);
0008ab d90d      	RCALL _LCD_Pos
                 ; 0000 01C6                 LCD_Str("Input PhoneNum") ;
                +
0008ac edee     +LDI R30 , LOW ( _0xF7 + ( 149 ) )
0008ad e0f5     +LDI R31 , HIGH ( _0xF7 + ( 149 ) )
                 	__POINTW1MN _0xF7,149
0008ae 940e 0b20 	CALL SUBOPT_0x1F
                 ; 0000 01C7                 STATE = INPUT_PHONE_OUT;
0008b0 e0e9      	LDI  R30,LOW(9)
                 _0x12C:
0008b1 abed      	STD  Y+53,R30
                 ; 0000 01C8                 break;
                 ; 0000 01C9 
                 ; 0000 01CA 
                 ; 0000 01CB         }
                 _0xEF:
                 ; 0000 01CC 
                 ; 0000 01CD     }
0008b2 cd1e      	RJMP _0xD1
                 ; 0000 01CE }
                 _0x123:
0008b3 cfff      	RJMP _0x123
                 
                 	.DSEG
                 _0xF7:
000549           	.BYTE 0xA4
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
0008b4 931a      	ST   -Y,R17
0008b5 930a      	ST   -Y,R16
0008b6 81aa      	LDD  R26,Y+2
0008b7 81bb      	LDD  R27,Y+2+1
0008b8 9612      	ADIW R26,2
0008b9 940e 0c62 	CALL __GETW1P
0008bb 9730      	SBIW R30,0
0008bc f159      	BREQ _0x2000010
0008bd 81aa      	LDD  R26,Y+2
0008be 81bb      	LDD  R27,Y+2+1
0008bf 9614      	ADIW R26,4
0008c0 940e 0c62 	CALL __GETW1P
0008c2 018f      	MOVW R16,R30
0008c3 9730      	SBIW R30,0
0008c4 f061      	BREQ _0x2000012
                +
0008c5 3002     +CPI R16 , LOW ( 2 )
0008c6 e0e0     +LDI R30 , HIGH ( 2 )
0008c7 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0008c8 f0f0      	BRLO _0x2000013
0008c9 01f8      	MOVW R30,R16
0008ca 9731      	SBIW R30,1
0008cb 018f      	MOVW R16,R30
                +
0008cc 81aa     +LDD R26 , Y + 2
0008cd 81bb     +LDD R27 , Y + 2 + 1
0008ce 9614     +ADIW R26 , 4
0008cf 93ed     +ST X + , R30
0008d0 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
0008d1 81aa      	LDD  R26,Y+2
0008d2 81bb      	LDD  R27,Y+2+1
0008d3 9612      	ADIW R26,2
0008d4 91ed      	LD   R30,X+
0008d5 91fd      	LD   R31,X+
0008d6 9631      	ADIW R30,1
0008d7 93fe      	ST   -X,R31
0008d8 93ee      	ST   -X,R30
0008d9 9731      	SBIW R30,1
0008da 81ac      	LDD  R26,Y+4
0008db 83a0      	STD  Z+0,R26
0008dc 81aa      	LDD  R26,Y+2
0008dd 81bb      	LDD  R27,Y+2+1
0008de 940e 0c62 	CALL __GETW1P
0008e0 23ff      	TST  R31
0008e1 f02a      	BRMI _0x2000014
0008e2 91ed      	LD   R30,X+
0008e3 91fd      	LD   R31,X+
0008e4 9631      	ADIW R30,1
0008e5 93fe      	ST   -X,R31
0008e6 93ee      	ST   -X,R30
                 _0x2000014:
                 _0x2000013:
0008e7 c006      	RJMP _0x2000015
                 _0x2000010:
0008e8 81aa      	LDD  R26,Y+2
0008e9 81bb      	LDD  R27,Y+2+1
0008ea efef      	LDI  R30,LOW(65535)
0008eb efff      	LDI  R31,HIGH(65535)
0008ec 93ed      	ST   X+,R30
0008ed 93fc      	ST   X,R31
                 _0x2000015:
0008ee 8119      	LDD  R17,Y+1
0008ef 8108      	LDD  R16,Y+0
                 _0x2060002:
0008f0 9625      	ADIW R28,5
0008f1 9508      	RET
                 __print_G100:
0008f2 9726      	SBIW R28,6
0008f3 940e 0c7a 	CALL __SAVELOCR6
0008f5 e010      	LDI  R17,0
0008f6 85ac      	LDD  R26,Y+12
0008f7 85bd      	LDD  R27,Y+12+1
0008f8 e0e0      	LDI  R30,LOW(0)
0008f9 e0f0      	LDI  R31,HIGH(0)
0008fa 93ed      	ST   X+,R30
0008fb 93fc      	ST   X,R31
                 _0x2000016:
0008fc 89ea      	LDD  R30,Y+18
0008fd 89fb      	LDD  R31,Y+18+1
0008fe 9631      	ADIW R30,1
0008ff 8bea      	STD  Y+18,R30
000900 8bfb      	STD  Y+18+1,R31
000901 9731      	SBIW R30,1
000902 91e4      	LPM  R30,Z
000903 2f2e      	MOV  R18,R30
000904 30e0      	CPI  R30,0
000905 f411      	BRNE PC+3
000906 940c 0a1f 	JMP _0x2000018
000908 2fe1      	MOV  R30,R17
000909 30e0      	CPI  R30,0
00090a f439      	BRNE _0x200001C
00090b 3225      	CPI  R18,37
00090c f411      	BRNE _0x200001D
00090d e011      	LDI  R17,LOW(1)
00090e c002      	RJMP _0x200001E
                 _0x200001D:
00090f 940e 0bbe 	CALL SUBOPT_0x27
                 _0x200001E:
000911 c10c      	RJMP _0x200001B
                 _0x200001C:
000912 30e1      	CPI  R30,LOW(0x1)
000913 f4a9      	BRNE _0x200001F
000914 3225      	CPI  R18,37
000915 f419      	BRNE _0x2000020
000916 940e 0bbe 	CALL SUBOPT_0x27
000918 c104      	RJMP _0x20000C9
                 _0x2000020:
000919 e012      	LDI  R17,LOW(2)
00091a e040      	LDI  R20,LOW(0)
00091b e000      	LDI  R16,LOW(0)
00091c 322d      	CPI  R18,45
00091d f411      	BRNE _0x2000021
00091e e001      	LDI  R16,LOW(1)
00091f c0fe      	RJMP _0x200001B
                 _0x2000021:
000920 322b      	CPI  R18,43
000921 f411      	BRNE _0x2000022
000922 e24b      	LDI  R20,LOW(43)
000923 c0fa      	RJMP _0x200001B
                 _0x2000022:
000924 3220      	CPI  R18,32
000925 f411      	BRNE _0x2000023
000926 e240      	LDI  R20,LOW(32)
000927 c0f6      	RJMP _0x200001B
                 _0x2000023:
000928 c002      	RJMP _0x2000024
                 _0x200001F:
000929 30e2      	CPI  R30,LOW(0x2)
00092a f439      	BRNE _0x2000025
                 _0x2000024:
00092b e050      	LDI  R21,LOW(0)
00092c e013      	LDI  R17,LOW(3)
00092d 3320      	CPI  R18,48
00092e f411      	BRNE _0x2000026
00092f 6800      	ORI  R16,LOW(128)
000930 c0ed      	RJMP _0x200001B
                 _0x2000026:
000931 c004      	RJMP _0x2000027
                 _0x2000025:
000932 30e3      	CPI  R30,LOW(0x3)
000933 f011      	BREQ PC+3
000934 940c 0a1e 	JMP _0x200001B
                 _0x2000027:
000936 3320      	CPI  R18,48
000937 f010      	BRLO _0x200002A
000938 332a      	CPI  R18,58
000939 f008      	BRLO _0x200002B
                 _0x200002A:
00093a c007      	RJMP _0x2000029
                 _0x200002B:
00093b e0aa      	LDI  R26,LOW(10)
00093c 9f5a      	MUL  R21,R26
00093d 2d50      	MOV  R21,R0
00093e 2fe2      	MOV  R30,R18
00093f 53e0      	SUBI R30,LOW(48)
000940 0f5e      	ADD  R21,R30
000941 c0dc      	RJMP _0x200001B
                 _0x2000029:
000942 2fe2      	MOV  R30,R18
000943 36e3      	CPI  R30,LOW(0x63)
000944 f449      	BRNE _0x200002F
000945 940e 0bc7 	CALL SUBOPT_0x28
000947 89e8      	LDD  R30,Y+16
000948 89f9      	LDD  R31,Y+16+1
000949 81a4      	LDD  R26,Z+4
00094a 93aa      	ST   -Y,R26
00094b 940e 0bcd 	CALL SUBOPT_0x29
00094d c0cf      	RJMP _0x2000030
                 _0x200002F:
00094e 37e3      	CPI  R30,LOW(0x73)
00094f f441      	BRNE _0x2000032
000950 940e 0bc7 	CALL SUBOPT_0x28
000952 940e 0bd5 	CALL SUBOPT_0x2A
000954 940e 0a5d 	CALL _strlen
000956 2f1e      	MOV  R17,R30
000957 c00a      	RJMP _0x2000033
                 _0x2000032:
000958 37e0      	CPI  R30,LOW(0x70)
000959 f461      	BRNE _0x2000035
00095a 940e 0bc7 	CALL SUBOPT_0x28
00095c 940e 0bd5 	CALL SUBOPT_0x2A
00095e 940e 0a67 	CALL _strlenf
000960 2f1e      	MOV  R17,R30
000961 6008      	ORI  R16,LOW(8)
                 _0x2000033:
000962 6002      	ORI  R16,LOW(2)
000963 770f      	ANDI R16,LOW(127)
000964 e030      	LDI  R19,LOW(0)
000965 c035      	RJMP _0x2000036
                 _0x2000035:
000966 36e4      	CPI  R30,LOW(0x64)
000967 f011      	BREQ _0x2000039
000968 36e9      	CPI  R30,LOW(0x69)
000969 f411      	BRNE _0x200003A
                 _0x2000039:
00096a 6004      	ORI  R16,LOW(4)
00096b c002      	RJMP _0x200003B
                 _0x200003A:
00096c 37e5      	CPI  R30,LOW(0x75)
00096d f431      	BRNE _0x200003C
                 _0x200003B:
00096e e8ec      	LDI  R30,LOW(_tbl10_G100*2)
00096f e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000970 83ee      	STD  Y+6,R30
000971 83ff      	STD  Y+6+1,R31
000972 e015      	LDI  R17,LOW(5)
000973 c00d      	RJMP _0x200003D
                 _0x200003C:
000974 35e8      	CPI  R30,LOW(0x58)
000975 f411      	BRNE _0x200003F
000976 6008      	ORI  R16,LOW(8)
000977 c004      	RJMP _0x2000040
                 _0x200003F:
000978 37e8      	CPI  R30,LOW(0x78)
000979 f011      	BREQ PC+3
00097a 940c 0a1d 	JMP _0x2000071
                 _0x2000040:
00097c e9e6      	LDI  R30,LOW(_tbl16_G100*2)
00097d e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
00097e 83ee      	STD  Y+6,R30
00097f 83ff      	STD  Y+6+1,R31
000980 e014      	LDI  R17,LOW(4)
                 _0x200003D:
000981 ff02      	SBRS R16,2
000982 c014      	RJMP _0x2000042
000983 940e 0bc7 	CALL SUBOPT_0x28
000985 940e 0bdf 	CALL SUBOPT_0x2B
000987 85ab      	LDD  R26,Y+11
000988 23aa      	TST  R26
000989 f43a      	BRPL _0x2000043
00098a 85ea      	LDD  R30,Y+10
00098b 85fb      	LDD  R31,Y+10+1
00098c 940e 0bfe 	CALL __ANEGW1
00098e 87ea      	STD  Y+10,R30
00098f 87fb      	STD  Y+10+1,R31
000990 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
000991 3040      	CPI  R20,0
000992 f011      	BREQ _0x2000044
000993 5f1f      	SUBI R17,-LOW(1)
000994 c001      	RJMP _0x2000045
                 _0x2000044:
000995 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
000996 c004      	RJMP _0x2000046
                 _0x2000042:
000997 940e 0bc7 	CALL SUBOPT_0x28
000999 940e 0bdf 	CALL SUBOPT_0x2B
                 _0x2000046:
                 _0x2000036:
00099b fd00      	SBRC R16,0
00099c c011      	RJMP _0x2000047
                 _0x2000048:
00099d 1715      	CP   R17,R21
00099e f478      	BRSH _0x200004A
00099f ff07      	SBRS R16,7
0009a0 c008      	RJMP _0x200004B
0009a1 ff02      	SBRS R16,2
0009a2 c004      	RJMP _0x200004C
0009a3 7f0b      	ANDI R16,LOW(251)
0009a4 2f24      	MOV  R18,R20
0009a5 5011      	SUBI R17,LOW(1)
0009a6 c001      	RJMP _0x200004D
                 _0x200004C:
0009a7 e320      	LDI  R18,LOW(48)
                 _0x200004D:
0009a8 c001      	RJMP _0x200004E
                 _0x200004B:
0009a9 e220      	LDI  R18,LOW(32)
                 _0x200004E:
0009aa 940e 0bbe 	CALL SUBOPT_0x27
0009ac 5051      	SUBI R21,LOW(1)
0009ad cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
0009ae 2f31      	MOV  R19,R17
0009af ff01      	SBRS R16,1
0009b0 c017      	RJMP _0x200004F
                 _0x2000050:
0009b1 3030      	CPI  R19,0
0009b2 f0a1      	BREQ _0x2000052
0009b3 ff03      	SBRS R16,3
0009b4 c006      	RJMP _0x2000053
0009b5 81ee      	LDD  R30,Y+6
0009b6 81ff      	LDD  R31,Y+6+1
0009b7 9125      	LPM  R18,Z+
0009b8 83ee      	STD  Y+6,R30
0009b9 83ff      	STD  Y+6+1,R31
0009ba c005      	RJMP _0x2000054
                 _0x2000053:
0009bb 81ae      	LDD  R26,Y+6
0009bc 81bf      	LDD  R27,Y+6+1
0009bd 912d      	LD   R18,X+
0009be 83ae      	STD  Y+6,R26
0009bf 83bf      	STD  Y+6+1,R27
                 _0x2000054:
0009c0 940e 0bbe 	CALL SUBOPT_0x27
0009c2 3050      	CPI  R21,0
0009c3 f009      	BREQ _0x2000055
0009c4 5051      	SUBI R21,LOW(1)
                 _0x2000055:
0009c5 5031      	SUBI R19,LOW(1)
0009c6 cfea      	RJMP _0x2000050
                 _0x2000052:
0009c7 c04b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
0009c8 e320      	LDI  R18,LOW(48)
0009c9 81ee      	LDD  R30,Y+6
0009ca 81ff      	LDD  R31,Y+6+1
0009cb 940e 0c66 	CALL __GETW1PF
0009cd 87e8      	STD  Y+8,R30
0009ce 87f9      	STD  Y+8+1,R31
0009cf 81ee      	LDD  R30,Y+6
0009d0 81ff      	LDD  R31,Y+6+1
0009d1 9632      	ADIW R30,2
0009d2 83ee      	STD  Y+6,R30
0009d3 83ff      	STD  Y+6+1,R31
                 _0x200005A:
0009d4 85e8      	LDD  R30,Y+8
0009d5 85f9      	LDD  R31,Y+8+1
0009d6 85aa      	LDD  R26,Y+10
0009d7 85bb      	LDD  R27,Y+10+1
0009d8 17ae      	CP   R26,R30
0009d9 07bf      	CPC  R27,R31
0009da f050      	BRLO _0x200005C
0009db 5f2f      	SUBI R18,-LOW(1)
0009dc 85a8      	LDD  R26,Y+8
0009dd 85b9      	LDD  R27,Y+8+1
0009de 85ea      	LDD  R30,Y+10
0009df 85fb      	LDD  R31,Y+10+1
0009e0 1bea      	SUB  R30,R26
0009e1 0bfb      	SBC  R31,R27
0009e2 87ea      	STD  Y+10,R30
0009e3 87fb      	STD  Y+10+1,R31
0009e4 cfef      	RJMP _0x200005A
                 _0x200005C:
0009e5 332a      	CPI  R18,58
0009e6 f028      	BRLO _0x200005D
0009e7 ff03      	SBRS R16,3
0009e8 c002      	RJMP _0x200005E
0009e9 5f29      	SUBI R18,-LOW(7)
0009ea c001      	RJMP _0x200005F
                 _0x200005E:
0009eb 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
0009ec fd04      	SBRC R16,4
0009ed c01a      	RJMP _0x2000061
0009ee 3321      	CPI  R18,49
0009ef f420      	BRSH _0x2000063
0009f0 85a8      	LDD  R26,Y+8
0009f1 85b9      	LDD  R27,Y+8+1
0009f2 9711      	SBIW R26,1
0009f3 f409      	BRNE _0x2000062
                 _0x2000063:
0009f4 c009      	RJMP _0x20000CA
                 _0x2000062:
0009f5 1753      	CP   R21,R19
0009f6 f010      	BRLO _0x2000067
0009f7 ff00      	SBRS R16,0
0009f8 c001      	RJMP _0x2000068
                 _0x2000067:
0009f9 c013      	RJMP _0x2000066
                 _0x2000068:
0009fa e220      	LDI  R18,LOW(32)
0009fb ff07      	SBRS R16,7
0009fc c00b      	RJMP _0x2000069
0009fd e320      	LDI  R18,LOW(48)
                 _0x20000CA:
0009fe 6100      	ORI  R16,LOW(16)
0009ff ff02      	SBRS R16,2
000a00 c007      	RJMP _0x200006A
000a01 7f0b      	ANDI R16,LOW(251)
000a02 934a      	ST   -Y,R20
000a03 940e 0bcd 	CALL SUBOPT_0x29
000a05 3050      	CPI  R21,0
000a06 f009      	BREQ _0x200006B
000a07 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
000a08 940e 0bbe 	CALL SUBOPT_0x27
000a0a 3050      	CPI  R21,0
000a0b f009      	BREQ _0x200006C
000a0c 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
000a0d 5031      	SUBI R19,LOW(1)
000a0e 85a8      	LDD  R26,Y+8
000a0f 85b9      	LDD  R27,Y+8+1
000a10 9712      	SBIW R26,2
000a11 f008      	BRLO _0x2000059
000a12 cfb5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
000a13 ff00      	SBRS R16,0
000a14 c008      	RJMP _0x200006D
                 _0x200006E:
000a15 3050      	CPI  R21,0
000a16 f031      	BREQ _0x2000070
000a17 5051      	SUBI R21,LOW(1)
000a18 e2e0      	LDI  R30,LOW(32)
000a19 93ea      	ST   -Y,R30
000a1a 940e 0bcd 	CALL SUBOPT_0x29
000a1c cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000C9:
000a1d e010      	LDI  R17,LOW(0)
                 _0x200001B:
000a1e cedd      	RJMP _0x2000016
                 _0x2000018:
000a1f 85ac      	LDD  R26,Y+12
000a20 85bd      	LDD  R27,Y+12+1
000a21 940e 0c62 	CALL __GETW1P
000a23 940e 0c81 	CALL __LOADLOCR6
000a25 9664      	ADIW R28,20
000a26 9508      	RET
                 _sprintf:
000a27 92ff      	PUSH R15
000a28 2ef8      	MOV  R15,R24
000a29 9726      	SBIW R28,6
000a2a 940e 0c7c 	CALL __SAVELOCR4
000a2c 940e 0be7 	CALL SUBOPT_0x2C
000a2e 9730      	SBIW R30,0
000a2f f419      	BRNE _0x2000072
000a30 efef      	LDI  R30,LOW(65535)
000a31 efff      	LDI  R31,HIGH(65535)
000a32 c025      	RJMP _0x2060001
                 _0x2000072:
000a33 01de      	MOVW R26,R28
000a34 9616      	ADIW R26,6
000a35 940e 0bfa 	CALL __ADDW2R15
000a37 018d      	MOVW R16,R26
000a38 940e 0be7 	CALL SUBOPT_0x2C
000a3a 83ee      	STD  Y+6,R30
000a3b 83ff      	STD  Y+6+1,R31
000a3c e0e0      	LDI  R30,LOW(0)
000a3d 87e8      	STD  Y+8,R30
000a3e 87e9      	STD  Y+8+1,R30
000a3f 01de      	MOVW R26,R28
000a40 961a      	ADIW R26,10
000a41 940e 0bfa 	CALL __ADDW2R15
000a43 940e 0c62 	CALL __GETW1P
000a45 93fa      	ST   -Y,R31
000a46 93ea      	ST   -Y,R30
000a47 931a      	ST   -Y,R17
000a48 930a      	ST   -Y,R16
000a49 ebe4      	LDI  R30,LOW(_put_buff_G100)
000a4a e0f8      	LDI  R31,HIGH(_put_buff_G100)
000a4b 93fa      	ST   -Y,R31
000a4c 93ea      	ST   -Y,R30
000a4d 01fe      	MOVW R30,R28
000a4e 963a      	ADIW R30,10
000a4f 93fa      	ST   -Y,R31
000a50 93ea      	ST   -Y,R30
000a51 dea0      	RCALL __print_G100
000a52 019f      	MOVW R18,R30
000a53 81ae      	LDD  R26,Y+6
000a54 81bf      	LDD  R27,Y+6+1
000a55 e0e0      	LDI  R30,LOW(0)
000a56 93ec      	ST   X,R30
000a57 01f9      	MOVW R30,R18
                 _0x2060001:
000a58 940e 0c83 	CALL __LOADLOCR4
000a5a 962a      	ADIW R28,10
000a5b 90ff      	POP  R15
000a5c 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
000a5d 91a9          ld   r26,y+
000a5e 91b9          ld   r27,y+
000a5f 27ee          clr  r30
000a60 27ff          clr  r31
                 strlen0:
000a61 916d          ld   r22,x+
000a62 2366          tst  r22
000a63 f011          breq strlen1
000a64 9631          adiw r30,1
000a65 cffb          rjmp strlen0
                 strlen1:
000a66 9508          ret
                 _strlenf:
000a67 27aa          clr  r26
000a68 27bb          clr  r27
000a69 91e9          ld   r30,y+
000a6a 91f9          ld   r31,y+
                 strlenf0:
000a6b 9005      	lpm  r0,z+
000a6c 2000          tst  r0
000a6d f011          breq strlenf1
000a6e 9611          adiw r26,1
000a6f cffb          rjmp strlenf0
                 strlenf1:
000a70 01fd          movw r30,r26
000a71 9508          ret
                 
                 	.DSEG
                 _Port_char:
0005ed           	.BYTE 0x10
                 _Port_fnd:
0005fd           	.BYTE 0x8
                 _str:
000605           	.BYTE 0x11
                 _str2:
000616           	.BYTE 0x11
                 _master_password:
000627           	.BYTE 0x8
                 _num:
00062f           	.BYTE 0x21
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
000a72 93e0 0065 	STS  101,R30
000a74 91e0 0065 	LDS  R30,101
000a76 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1:
000a77 60e1      	ORI  R30,1
000a78 93e0 0065 	STS  101,R30
                +
000a7a ef86     +LDI R24 , LOW ( 246 )
                +__DELAY_USB_LOOP :
000a7b 958a     +DEC R24
000a7c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 246
000a7d 81e8      	LD   R30,Y
000a7e bbeb      	OUT  0x1B,R30
                +
000a7f ef86     +LDI R24 , LOW ( 246 )
                +__DELAY_USB_LOOP :
000a80 958a     +DEC R24
000a81 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 246
000a82 91e0 0065 	LDS  R30,101
000a84 7fee      	ANDI R30,0xFE
000a85 93e0 0065 	STS  101,R30
000a87 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:31 WORDS
                 SUBOPT_0x2:
000a88 93fa      	ST   -Y,R31
000a89 93ea      	ST   -Y,R30
000a8a 940c 0bee 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3:
000a8c e0e1      	LDI  R30,LOW(1)
000a8d e0f0      	LDI  R31,HIGH(1)
000a8e cff9      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
000a8f 81e8      	LD   R30,Y
000a90 81f9      	LDD  R31,Y+1
000a91 9631      	ADIW R30,1
000a92 83e8      	ST   Y,R30
000a93 83f9      	STD  Y+1,R31
000a94 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5:
000a95 e3e8      	LDI  R30,LOW(56)
000a96 93ea      	ST   -Y,R30
000a97 940e 01a9 	CALL _LCD_Comm
000a99 e0e4      	LDI  R30,LOW(4)
000a9a 93ea      	ST   -Y,R30
000a9b 940c 01b4 	JMP  _LCD_delay
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6:
000a9d 93ea      	ST   -Y,R30
000a9e 940e 01a9 	CALL _LCD_Comm
000aa0 e0e4      	LDI  R30,LOW(4)
000aa1 93ea      	ST   -Y,R30
000aa2 940c 01b4 	JMP  _LCD_delay
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000aa4 81e8      	LD   R30,Y
000aa5 93e0 0073 	STS  115,R30
000aa7 e8e4      	LDI  R30,LOW(132)
000aa8 93e0 0074 	STS  116,R30
000aaa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x8:
000aab 2fe1      	MOV  R30,R17
000aac e0f0      	LDI  R31,0
000aad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9:
000aae e6e6      	LDI  R30,LOW(4710)
000aaf e1f2      	LDI  R31,HIGH(4710)
000ab0 bdfb      	OUT  0x2A+1,R31
000ab1 bdea      	OUT  0x2A,R30
000ab2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
000ab3 93e0 0065 	STS  101,R30
000ab5 81ec      	LDD  R30,Y+4
000ab6 81fd      	LDD  R31,Y+4+1
000ab7 93fa      	ST   -Y,R31
000ab8 93ea      	ST   -Y,R30
000ab9 940c 0320 	JMP  _myDelay_us
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xB:
000abb 81a9      	LDD  R26,Y+1
000abc 27bb      	CLR  R27
000abd e0e4      	LDI  R30,LOW(4)
000abe e0f0      	LDI  R31,HIGH(4)
000abf 940e 0c46 	CALL __MODW21
000ac1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0xC:
000ac2 81a9      	LDD  R26,Y+1
000ac3 e0b0      	LDI  R27,0
000ac4 e0e4      	LDI  R30,LOW(4)
000ac5 e0f0      	LDI  R31,HIGH(4)
000ac6 940e 0c3e 	CALL __DIVW21
000ac8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD:
000ac9 940e 0c02 	CALL __LSLW2
000acb 01bf      	MOVW R22,R30
000acc cfee      	RJMP SUBOPT_0xB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0xE:
000acd 51e3      	SUBI R30,LOW(-_Port_char)
000ace 4ffa      	SBCI R31,HIGH(-_Port_char)
000acf 81e0      	LD   R30,Z
000ad0 93e0 0062 	STS  98,R30
000ad2 cfb9      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF:
000ad3 e0f0      	LDI  R31,0
000ad4 cff8      	RJMP SUBOPT_0xE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x10:
000ad5 93fa      	ST   -Y,R31
000ad6 93ea      	ST   -Y,R30
000ad7 940c 0333 	JMP  _Buzzer_play
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
000ad9 e0f0      	LDI  R31,0
000ada 9730      	SBIW R30,0
000adb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
000adc 91ec      	LD   R30,X
000add 93ea      	ST   -Y,R30
000ade 940c 04ba 	JMP  _putch_USART1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13:
000ae0 93fa      	ST   -Y,R31
000ae1 93ea      	ST   -Y,R30
000ae2 940e 04c3 	CALL _puts_USART1
000ae4 e010      	LDI  R17,LOW(0)
000ae5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14:
000ae6 e0ea      	LDI  R30,LOW(10)
000ae7 e0f0      	LDI  R31,HIGH(10)
000ae8 cf9f      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
000ae9 eee8      	LDI  R30,LOW(1000)
000aea e0f3      	LDI  R31,HIGH(1000)
000aeb cf9c      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x16:
000aec e0e0      	LDI  R30,LOW(0)
000aed 93ea      	ST   -Y,R30
000aee 93ea      	ST   -Y,R30
000aef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
000af0 930a      	ST   -Y,R16
000af1 940e 02b8 	CALL _startRanging
000af3 01fe      	MOVW R30,R28
000af4 58e4      	SUBI R30,LOW(-(124))
000af5 4fff      	SBCI R31,HIGH(-(124))
000af6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18:
000af7 0fee      	LSL  R30
000af8 1fff      	ROL  R31
000af9 0fae      	ADD  R26,R30
000afa 1fbf      	ADC  R27,R31
000afb 940e 0c62 	CALL __GETW1P
000afd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
000afe a9e8      	LDD  R30,Y+48
000aff a9f9      	LDD  R31,Y+48+1
000b00 01de      	MOVW R26,R28
000b01 96d2      	ADIW R26,50
000b02 0fae      	ADD  R26,R30
000b03 1fbf      	ADC  R27,R31
000b04 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1A:
000b05 a9e8      	LDD  R30,Y+48
000b06 a9f9      	LDD  R31,Y+48+1
000b07 01de      	MOVW R26,R28
000b08 0fae      	ADD  R26,R30
000b09 1fbf      	ADC  R27,R31
000b0a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1B:
000b0b 01de      	MOVW R26,R28
000b0c 5aae      	SUBI R26,LOW(-(82))
000b0d 4fbf      	SBCI R27,HIGH(-(82))
000b0e 91ed      	LD   R30,X+
000b0f 91fd      	LD   R31,X+
000b10 9631      	ADIW R30,1
000b11 93fe      	ST   -X,R31
000b12 93ee      	ST   -X,R30
000b13 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C:
000b14 e3e2      	LDI  R30,LOW(50)
000b15 e0f0      	LDI  R31,HIGH(50)
000b16 cf71      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D:
000b17 e0e0      	LDI  R30,LOW(0)
000b18 afe8      	STD  Y+56,R30
000b19 afe9      	STD  Y+56+1,R30
000b1a afea      	STD  Y+58,R30
000b1b afeb      	STD  Y+58+1,R30
000b1c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1E:
000b1d 940e 01d4 	CALL _LCD_Clear
000b1f cfcc      	RJMP SUBOPT_0x16
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:31 WORDS
                 SUBOPT_0x1F:
000b20 93fa      	ST   -Y,R31
000b21 93ea      	ST   -Y,R30
000b22 940c 01c9 	JMP  _LCD_Str
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x20:
000b24 e0e1      	LDI  R30,LOW(1)
000b25 93ea      	ST   -Y,R30
000b26 e0e0      	LDI  R30,LOW(0)
000b27 93ea      	ST   -Y,R30
000b28 940c 01b9 	JMP  _LCD_Pos
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x21:
000b2a 27ff      	CLR  R31
000b2b 2766      	CLR  R22
000b2c 2777      	CLR  R23
000b2d 940e 0c6a 	CALL __PUTPARD1
000b2f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22:
000b30 81eb      	LDD  R30,Y+3
000b31 e0ab      	LDI  R26,LOW(11)
000b32 9fea      	MUL  R30,R26
000b33 01f0      	MOVW R30,R0
000b34 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23:
000b35 01de      	MOVW R26,R28
000b36 961f      	ADIW R26,15
000b37 0fea      	ADD  R30,R26
000b38 1ffb      	ADC  R31,R27
000b39 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:115 WORDS
                 SUBOPT_0x24:
000b3a 93fa      	ST   -Y,R31
000b3b 93ea      	ST   -Y,R30
                +
000b3c ece7     +LDI R30 , LOW ( 2 * _0x0 + ( 129 ) )
000b3d e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 129 ) )
                 	__POINTW1FN _0x0,129
000b3e 93fa      	ST   -Y,R31
000b3f 93ea      	ST   -Y,R30
                +
000b40 01fe     +MOVW R30 , R28
000b41 5aee     +SUBI R30 , LOW ( - 82 )
000b42 4fff     +SBCI R31 , HIGH ( - 82 )
000b43 9001     +LD R0 , Z +
000b44 81f0     +LD R31 , Z
000b45 2de0     +MOV R30 , R0
                 	__GETW1SX 82
000b46 940e 0c07 	CALL __CWD1
000b48 940e 0c6a 	CALL __PUTPARD1
                +
000b4a 01fe     +MOVW R30 , R28
000b4b 5aec     +SUBI R30 , LOW ( - 84 )
000b4c 4fff     +SBCI R31 , HIGH ( - 84 )
000b4d 9001     +LD R0 , Z +
000b4e 81f0     +LD R31 , Z
000b4f 2de0     +MOV R30 , R0
                 	__GETW1SX 84
000b50 940e 0c07 	CALL __CWD1
000b52 940e 0c6a 	CALL __PUTPARD1
                +
000b54 01fe     +MOVW R30 , R28
000b55 5aea     +SUBI R30 , LOW ( - 86 )
000b56 4fff     +SBCI R31 , HIGH ( - 86 )
000b57 9001     +LD R0 , Z +
000b58 81f0     +LD R31 , Z
000b59 2de0     +MOV R30 , R0
                 	__GETW1SX 86
000b5a 940e 0c07 	CALL __CWD1
000b5c 940e 0c6a 	CALL __PUTPARD1
                +
000b5e 01fe     +MOVW R30 , R28
000b5f 5ae8     +SUBI R30 , LOW ( - 88 )
000b60 4fff     +SBCI R31 , HIGH ( - 88 )
000b61 9001     +LD R0 , Z +
000b62 81f0     +LD R31 , Z
000b63 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000b64 940e 0c07 	CALL __CWD1
000b66 940e 0c6a 	CALL __PUTPARD1
                +
000b68 01fe     +MOVW R30 , R28
000b69 5ae6     +SUBI R30 , LOW ( - 90 )
000b6a 4fff     +SBCI R31 , HIGH ( - 90 )
000b6b 9001     +LD R0 , Z +
000b6c 81f0     +LD R31 , Z
000b6d 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000b6e 940e 0c07 	CALL __CWD1
000b70 940e 0c6a 	CALL __PUTPARD1
                +
000b72 01fe     +MOVW R30 , R28
000b73 5ae4     +SUBI R30 , LOW ( - 92 )
000b74 4fff     +SBCI R31 , HIGH ( - 92 )
000b75 9001     +LD R0 , Z +
000b76 81f0     +LD R31 , Z
000b77 2de0     +MOV R30 , R0
                 	__GETW1SX 92
000b78 940e 0c07 	CALL __CWD1
000b7a 940e 0c6a 	CALL __PUTPARD1
                +
000b7c 01fe     +MOVW R30 , R28
000b7d 5ae2     +SUBI R30 , LOW ( - 94 )
000b7e 4fff     +SBCI R31 , HIGH ( - 94 )
000b7f 9001     +LD R0 , Z +
000b80 81f0     +LD R31 , Z
000b81 2de0     +MOV R30 , R0
                 	__GETW1SX 94
000b82 940e 0c07 	CALL __CWD1
000b84 940e 0c6a 	CALL __PUTPARD1
                +
000b86 01fe     +MOVW R30 , R28
000b87 5ae0     +SUBI R30 , LOW ( - 96 )
000b88 4fff     +SBCI R31 , HIGH ( - 96 )
000b89 9001     +LD R0 , Z +
000b8a 81f0     +LD R31 , Z
000b8b 2de0     +MOV R30 , R0
                 	__GETW1SX 96
000b8c 940e 0c07 	CALL __CWD1
000b8e 940e 0c6a 	CALL __PUTPARD1
                +
000b90 01fe     +MOVW R30 , R28
000b91 59ee     +SUBI R30 , LOW ( - 98 )
000b92 4fff     +SBCI R31 , HIGH ( - 98 )
000b93 9001     +LD R0 , Z +
000b94 81f0     +LD R31 , Z
000b95 2de0     +MOV R30 , R0
                 	__GETW1SX 98
000b96 940e 0c07 	CALL __CWD1
000b98 940e 0c6a 	CALL __PUTPARD1
                +
000b9a 01fe     +MOVW R30 , R28
000b9b 59ec     +SUBI R30 , LOW ( - 100 )
000b9c 4fff     +SBCI R31 , HIGH ( - 100 )
000b9d 9001     +LD R0 , Z +
000b9e 81f0     +LD R31 , Z
000b9f 2de0     +MOV R30 , R0
                 	__GETW1SX 100
000ba0 940e 0c07 	CALL __CWD1
000ba2 940e 0c6a 	CALL __PUTPARD1
                +
000ba4 01fe     +MOVW R30 , R28
000ba5 59ea     +SUBI R30 , LOW ( - 102 )
000ba6 4fff     +SBCI R31 , HIGH ( - 102 )
000ba7 9001     +LD R0 , Z +
000ba8 81f0     +LD R31 , Z
000ba9 2de0     +MOV R30 , R0
                 	__GETW1SX 102
000baa 940e 0c07 	CALL __CWD1
000bac 940e 0c6a 	CALL __PUTPARD1
000bae e28c      	LDI  R24,44
000baf 940e 0a27 	CALL _sprintf
000bb1 96e0      	ADIW R28,48
000bb2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x25:
000bb3 81eb      	LDD  R30,Y+3
000bb4 e0f0      	LDI  R31,0
000bb5 01de      	MOVW R26,R28
000bb6 96d2      	ADIW R26,50
000bb7 0fae      	ADD  R26,R30
000bb8 1fbf      	ADC  R27,R31
000bb9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x26:
000bba e0e0      	LDI  R30,LOW(0)
000bbb afe8      	STD  Y+56,R30
000bbc afe9      	STD  Y+56+1,R30
000bbd cf5f      	RJMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x27:
000bbe 932a      	ST   -Y,R18
000bbf 85ed      	LDD  R30,Y+13
000bc0 85fe      	LDD  R31,Y+13+1
000bc1 93fa      	ST   -Y,R31
000bc2 93ea      	ST   -Y,R30
000bc3 89e9      	LDD  R30,Y+17
000bc4 89fa      	LDD  R31,Y+17+1
000bc5 9509      	ICALL
000bc6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x28:
000bc7 89e8      	LDD  R30,Y+16
000bc8 89f9      	LDD  R31,Y+16+1
000bc9 9734      	SBIW R30,4
000bca 8be8      	STD  Y+16,R30
000bcb 8bf9      	STD  Y+16+1,R31
000bcc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x29:
000bcd 85ed      	LDD  R30,Y+13
000bce 85fe      	LDD  R31,Y+13+1
000bcf 93fa      	ST   -Y,R31
000bd0 93ea      	ST   -Y,R30
000bd1 89e9      	LDD  R30,Y+17
000bd2 89fa      	LDD  R31,Y+17+1
000bd3 9509      	ICALL
000bd4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2A:
000bd5 89a8      	LDD  R26,Y+16
000bd6 89b9      	LDD  R27,Y+16+1
000bd7 9614      	ADIW R26,4
000bd8 940e 0c62 	CALL __GETW1P
000bda 83ee      	STD  Y+6,R30
000bdb 83ff      	STD  Y+6+1,R31
000bdc 93fa      	ST   -Y,R31
000bdd 93ea      	ST   -Y,R30
000bde 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2B:
000bdf 89a8      	LDD  R26,Y+16
000be0 89b9      	LDD  R27,Y+16+1
000be1 9614      	ADIW R26,4
000be2 940e 0c62 	CALL __GETW1P
000be4 87ea      	STD  Y+10,R30
000be5 87fb      	STD  Y+10+1,R31
000be6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
000be7 01de      	MOVW R26,R28
000be8 961c      	ADIW R26,12
000be9 940e 0bfa 	CALL __ADDW2R15
000beb 940e 0c62 	CALL __GETW1P
000bed 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000bee 91e9      	ld   r30,y+
000bef 91f9      	ld   r31,y+
000bf0 9630      	adiw r30,0
000bf1 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000bf2 e686     +LDI R24 , LOW ( 0xE66 )
000bf3 e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
000bf4 9701     +SBIW R24 , 1
000bf5 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
000bf6 95a8      	wdr
000bf7 9731      	sbiw r30,1
000bf8 f7c9      	brne __delay_ms0
                 __delay_ms1:
000bf9 9508      	ret
                 
                 __ADDW2R15:
000bfa 2400      	CLR  R0
000bfb 0daf      	ADD  R26,R15
000bfc 1db0      	ADC  R27,R0
000bfd 9508      	RET
                 
                 __ANEGW1:
000bfe 95f1      	NEG  R31
000bff 95e1      	NEG  R30
000c00 40f0      	SBCI R31,0
000c01 9508      	RET
                 
                 __LSLW2:
000c02 0fee      	LSL  R30
000c03 1fff      	ROL  R31
000c04 0fee      	LSL  R30
000c05 1fff      	ROL  R31
000c06 9508      	RET
                 
                 __CWD1:
000c07 2f6f      	MOV  R22,R31
000c08 0f66      	ADD  R22,R22
000c09 0b66      	SBC  R22,R22
000c0a 2f76      	MOV  R23,R22
000c0b 9508      	RET
                 
                 __EQW12:
000c0c 17ea      	CP   R30,R26
000c0d 07fb      	CPC  R31,R27
000c0e e0e1      	LDI  R30,1
000c0f f009      	BREQ __EQW12T
000c10 27ee      	CLR  R30
                 __EQW12T:
000c11 9508      	RET
                 
                 __LTW12:
000c12 17ae      	CP   R26,R30
000c13 07bf      	CPC  R27,R31
000c14 e0e1      	LDI  R30,1
000c15 f00c      	BRLT __LTW12T
000c16 27ee      	CLR  R30
                 __LTW12T:
000c17 9508      	RET
                 
                 __GTW12:
000c18 17ea      	CP   R30,R26
000c19 07fb      	CPC  R31,R27
000c1a e0e1      	LDI  R30,1
000c1b f00c      	BRLT __GTW12T
000c1c 27ee      	CLR  R30
                 __GTW12T:
000c1d 9508      	RET
                 
                 __MULW12U:
000c1e 9ffa      	MUL  R31,R26
000c1f 2df0      	MOV  R31,R0
000c20 9feb      	MUL  R30,R27
000c21 0df0      	ADD  R31,R0
000c22 9fea      	MUL  R30,R26
000c23 2de0      	MOV  R30,R0
000c24 0df1      	ADD  R31,R1
000c25 9508      	RET
                 
                 __MULW12:
000c26 d02d      	RCALL __CHKSIGNW
000c27 dff6      	RCALL __MULW12U
000c28 f40e      	BRTC __MULW121
000c29 dfd4      	RCALL __ANEGW1
                 __MULW121:
000c2a 9508      	RET
                 
                 __DIVW21U:
000c2b 2400      	CLR  R0
000c2c 2411      	CLR  R1
000c2d e190      	LDI  R25,16
                 __DIVW21U1:
000c2e 0faa      	LSL  R26
000c2f 1fbb      	ROL  R27
000c30 1c00      	ROL  R0
000c31 1c11      	ROL  R1
000c32 1a0e      	SUB  R0,R30
000c33 0a1f      	SBC  R1,R31
000c34 f418      	BRCC __DIVW21U2
000c35 0e0e      	ADD  R0,R30
000c36 1e1f      	ADC  R1,R31
000c37 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000c38 60a1      	SBR  R26,1
                 __DIVW21U3:
000c39 959a      	DEC  R25
000c3a f799      	BRNE __DIVW21U1
000c3b 01fd      	MOVW R30,R26
000c3c 01d0      	MOVW R26,R0
000c3d 9508      	RET
                 
                 __DIVW21:
000c3e d015      	RCALL __CHKSIGNW
000c3f dfeb      	RCALL __DIVW21U
000c40 f40e      	BRTC __DIVW211
000c41 dfbc      	RCALL __ANEGW1
                 __DIVW211:
000c42 9508      	RET
                 
                 __MODW21U:
000c43 dfe7      	RCALL __DIVW21U
000c44 01fd      	MOVW R30,R26
000c45 9508      	RET
                 
                 __MODW21:
000c46 94e8      	CLT
000c47 ffb7      	SBRS R27,7
000c48 c004      	RJMP __MODW211
000c49 95a0      	COM  R26
000c4a 95b0      	COM  R27
000c4b 9611      	ADIW R26,1
000c4c 9468      	SET
                 __MODW211:
000c4d fdf7      	SBRC R31,7
000c4e dfaf      	RCALL __ANEGW1
000c4f dfdb      	RCALL __DIVW21U
000c50 01fd      	MOVW R30,R26
000c51 f40e      	BRTC __MODW212
000c52 dfab      	RCALL __ANEGW1
                 __MODW212:
000c53 9508      	RET
                 
                 __CHKSIGNW:
000c54 94e8      	CLT
000c55 fff7      	SBRS R31,7
000c56 c002      	RJMP __CHKSW1
000c57 dfa6      	RCALL __ANEGW1
000c58 9468      	SET
                 __CHKSW1:
000c59 ffb7      	SBRS R27,7
000c5a c006      	RJMP __CHKSW2
000c5b 95a0      	COM  R26
000c5c 95b0      	COM  R27
000c5d 9611      	ADIW R26,1
000c5e f800      	BLD  R0,0
000c5f 9403      	INC  R0
000c60 fa00      	BST  R0,0
                 __CHKSW2:
000c61 9508      	RET
                 
                 __GETW1P:
000c62 91ed      	LD   R30,X+
000c63 91fc      	LD   R31,X
000c64 9711      	SBIW R26,1
000c65 9508      	RET
                 
                 __GETW1PF:
000c66 9005      	LPM  R0,Z+
000c67 91f4      	LPM  R31,Z
000c68 2de0      	MOV  R30,R0
000c69 9508      	RET
                 
                 __PUTPARD1:
000c6a 937a      	ST   -Y,R23
000c6b 936a      	ST   -Y,R22
000c6c 93fa      	ST   -Y,R31
000c6d 93ea      	ST   -Y,R30
000c6e 9508      	RET
                 
                 __SWAPW12:
000c6f 2e1b      	MOV  R1,R27
000c70 2fbf      	MOV  R27,R31
000c71 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000c72 2e1a      	MOV  R1,R26
000c73 2fae      	MOV  R26,R30
000c74 2de1      	MOV  R30,R1
000c75 9508      	RET
                 
                 __CPW02:
000c76 2400      	CLR  R0
000c77 160a      	CP   R0,R26
000c78 060b      	CPC  R0,R27
000c79 9508      	RET
                 
                 __SAVELOCR6:
000c7a 935a      	ST   -Y,R21
                 __SAVELOCR5:
000c7b 934a      	ST   -Y,R20
                 __SAVELOCR4:
000c7c 933a      	ST   -Y,R19
                 __SAVELOCR3:
000c7d 932a      	ST   -Y,R18
                 __SAVELOCR2:
000c7e 931a      	ST   -Y,R17
000c7f 930a      	ST   -Y,R16
000c80 9508      	RET
                 
                 __LOADLOCR6:
000c81 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000c82 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000c83 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000c84 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000c85 8119      	LDD  R17,Y+1
000c86 8108      	LD   R16,Y
000c87 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
000c88 0fac      	ADD  R26,R28
000c89 1fbd      	ADC  R27,R29
                 __INITLOC0:
000c8a 9005      	LPM  R0,Z+
000c8b 920d      	ST   X+,R0
000c8c 958a      	DEC  R24
000c8d f7e1      	BRNE __INITLOC0
000c8e 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  71 r1 :  12 r2 :   0 r3 :   0 r4 :   4 r5 :   3 r6 :   0 r7 :   5 
r8 :   0 r9 :   7 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   6 
r16:  98 r17: 109 r18:  39 r19:  24 r20:  20 r21:  24 r22:  25 r23:   7 
r24:  27 r25:   7 r26: 299 r27: 119 r28:  56 r29:   2 r30: 821 r31: 302 
x  :  62 y  : 484 z  :  47 
Registers used: 26 out of 35 (74.3%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  22 add   :  28 
adiw  :  52 and   :   2 andi  :  13 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  43 
brge  :   8 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  12 
brlt  :   2 brmi  :   1 brne  :  89 brpl  :   1 brsh  :  13 brtc  :   3 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   1 bst   :   1 call  : 245 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  28 cls   :   0 clt   :   2 clv   :   0 clz   :   0 com   :   4 
cp    :  17 cpc   :  40 cpi   :  96 cpse  :   0 dec   :   8 des   :   0 
elpm  :   0 eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 
ijmp  :   0 in    :  16 inc   :   4 jmp   :  53 ld    :  89 ldd   : 231 
ldi   : 385 lds   :  17 lpm   :  15 lsl   :   8 lsr   :   0 mov   :  81 
movw  :  78 mul   :  10 muls  :   1 mulsu :   0 neg   :   2 nop   :   1 
or    :   2 ori   :  18 out   :  37 pop   :  10 push  :  10 rcall :  67 
ret   :  70 reti  :   3 rjmp  : 159 rol   :   8 ror   :   0 sbc   :   4 
sbci  :  37 sbi   :   5 sbic  :   0 sbis  :   0 sbiw  :  53 sbr   :   1 
sbrc  :   3 sbrs  :  13 sec   :   0 seh   :   0 sei   :   0 sen   :   0 
ser   :   0 ses   :   0 set   :   2 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    : 169 std   :  91 sts   :  29 sub   :   3 subi  :  60 
swap  :   0 tst   :   4 wdr   :   1 
Instructions used: 68 out of 117 (58.1%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00191e   5856    574   6430  131072   4.9%
[.dseg] 0x000100 0x000650      0    336    336    4351   7.7%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 8 warnings
