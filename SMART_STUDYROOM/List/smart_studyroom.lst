
AVRASM ver. 2.1.30  C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm Mon Dec 06 17:14:04 2021

C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1061): warning: Register r5 already defined by the .DEF directive
C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1062): warning: Register r4 already defined by the .DEF directive
C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1063): warning: Register r7 already defined by the .DEF directive
C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1064): warning: Register r6 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 14.745600 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _zero_flag=R5
                 	.DEF _ti_Cnt_1ms=R4
                 	.DEF _LCD_DelCnt_1ms=R7
                 	.DEF _Distance_cnt_1ms=R6
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0142 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0301 	JMP  _compare
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0474 	JMP  _timer0_comp
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
000046 2710
000047 03e8
000048 0064
000049 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00004a 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00004b 1000
00004c 0100
00004d 0010
00004e 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x5A:
00004f f9c0
000050 b0a4
000051 9299
000052 d882      	.DB  0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xD8
000053 9080
000054 8388
000055 a1c4
000056 8e84      	.DB  0x80,0x90,0x88,0x83,0xC4,0xA1,0x84,0x8E
                 _0x5B:
000057 001f
000058 002f
000059 004f
C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1119): warning: .cseg .db misalignment - padding zero byte
00005a 008f      	.DB  0x1F,0x0,0x2F,0x0,0x4F,0x0,0x8F
                 _0x97:
00005b 0000
00005c 0000
00005d 0000
00005e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005f 0000
000060 0000
000061 0000
000062 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000063 0000
000064 0000
000065 0000
000066 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000067 0000
000068 0000
000069 0000
00006a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006b 0000
00006c 0000
00006d 0000
00006e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006f 0000
000070 0000
000071 0000
000072 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000073 0000
000074 0000
000075 0000
000076 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000077 0000
000078 0000
000079 0000
00007a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007b 0000
00007c 0000
00007d 0000
00007e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007f 0000
000080 0000
000081 0000
000082 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000083 0000
000084 5800
000085 5858
000086 0001      	.DB  0x0,0x0,0x0,0x58,0x58,0x58,0x1,0x0
000087 0000
000088 0000
000089 0000
00008a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008b 0000
00008c 0000
00008d 0000
00008e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008f 0000
000090 0000
000091 0000
000092 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000093 0000
000094 0000
000095 0000
000096 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000097 0000
000098 0000
000099 0000
00009a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009b 0000
00009c 0000
00009d 0000
00009e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009f 0000
0000a0 0000
0000a1 0000
0000a2 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a3 0000
0000a4 0000
0000a5 0000
0000a6 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a7 0000
0000a8 0000
0000a9 0000
0000aa 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ab 0000
C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1141): warning: .cseg .db misalignment - padding zero byte
0000ac 0000      	.DB  0x0,0x0,0x0
                 _0xF4:
C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1143): warning: .cseg .db misalignment - padding zero byte
0000ad 0000      	.DB  0x0
                 _0x0:
0000ae 2020
0000af 2020
0000b0 2020
0000b1 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0000b2 2020
0000b3 2020
0000b4 2020
0000b5 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0000b6 2020
0000b7 2020
0000b8 4300
0000b9 6f68      	.DB  0x20,0x20,0x20,0x20,0x0,0x43,0x68,0x6F
0000ba 736f
0000bb 2065
0000bc 6553
0000bd 7461      	.DB  0x6F,0x73,0x65,0x20,0x53,0x65,0x61,0x74
0000be 3100
0000bf 2020
0000c0 3200
0000c1 2020      	.DB  0x0,0x31,0x20,0x20,0x0,0x32,0x20,0x20
0000c2 3300
0000c3 2020
0000c4 5300
0000c5 7574      	.DB  0x0,0x33,0x20,0x20,0x0,0x53,0x74,0x75
0000c6 7964
0000c7 6f52
0000c8 6d6f
0000c9 2020      	.DB  0x64,0x79,0x52,0x6F,0x6F,0x6D,0x20,0x20
0000ca 3a34
0000cb 554f
0000cc 0054
0000cd 3a31      	.DB  0x34,0x3A,0x4F,0x55,0x54,0x0,0x31,0x3A
0000ce 6325
0000cf 3220
0000d0 253a
0000d1 2063      	.DB  0x25,0x63,0x20,0x32,0x3A,0x25,0x63,0x20
0000d2 3a33
0000d3 6325
0000d4 2500
0000d5 2564      	.DB  0x33,0x3A,0x25,0x63,0x0,0x25,0x64,0x25
0000d6 2564
0000d7 2564
0000d8 2564
0000d9 2564      	.DB  0x64,0x25,0x64,0x25,0x64,0x25,0x64,0x25
0000da 2564
0000db 2564
0000dc 2564
0000dd 2564      	.DB  0x64,0x25,0x64,0x25,0x64,0x25,0x64,0x25
0000de 2564
0000df 0064
0000e0 6e49
0000e1 7570      	.DB  0x64,0x25,0x64,0x0,0x49,0x6E,0x70,0x75
0000e2 2074
0000e3 6850
0000e4 6e6f
0000e5 4e65      	.DB  0x74,0x20,0x50,0x68,0x6F,0x6E,0x65,0x4E
0000e6 6d75
0000e7 5300
0000e8 6d6f
0000e9 6f65      	.DB  0x75,0x6D,0x0,0x53,0x6F,0x6D,0x65,0x6F
0000ea 656e
0000eb 5520
0000ec 6573
0000ed 0064      	.DB  0x6E,0x65,0x20,0x55,0x73,0x65,0x64,0x0
0000ee 3a31
0000ef 6559
0000f0 2073
0000f1 3220      	.DB  0x31,0x3A,0x59,0x65,0x73,0x20,0x20,0x32
0000f2 4e3a
0000f3 006f
0000f4 6d45
0000f5 7470      	.DB  0x3A,0x4E,0x6F,0x0,0x45,0x6D,0x70,0x74
0000f6 2079
0000f7 6553
0000f8 7461
0000f9 5500      	.DB  0x79,0x20,0x53,0x65,0x61,0x74,0x0,0x55
0000fa 6573
0000fb 2072
0000fc 6843
0000fd 6365      	.DB  0x73,0x65,0x72,0x20,0x43,0x68,0x65,0x63
0000fe 006b
0000ff 6f47
000100 646f
000101 4220      	.DB  0x6B,0x0,0x47,0x6F,0x6F,0x64,0x20,0x42
000102 6579
000103 5700
000104 6f72
000105 676e      	.DB  0x79,0x65,0x0,0x57,0x72,0x6F,0x6E,0x67
000106 5020
000107 7361
000108 7773
000109 726f      	.DB  0x20,0x50,0x61,0x73,0x73,0x77,0x6F,0x72
00010a 0064      	.DB  0x64,0x0
                 
                 __GLOBAL_INI_TBL:
00010b 0015      	.DW  0x15
00010c 0500      	.DW  _0xA
00010d 015c      	.DW  _0x0*2
                 
00010e 0010      	.DW  0x10
00010f 05af      	.DW  _Port_char
000110 009e      	.DW  _0x5A*2
                 
000111 0007      	.DW  0x07
000112 05bf      	.DW  _Port_fnd
000113 00ae      	.DW  _0x5B*2
                 
000114 000c      	.DW  0x0C
000115 0515      	.DW  _0xBE
000116 0171      	.DW  _0x0*2+21
                 
000117 0004      	.DW  0x04
000118 0521      	.DW  _0xBE+12
000119 017d      	.DW  _0x0*2+33
                 
00011a 0004      	.DW  0x04
00011b 0525      	.DW  _0xBE+16
00011c 0181      	.DW  _0x0*2+37
                 
00011d 0004      	.DW  0x04
00011e 0529      	.DW  _0xBE+20
00011f 0185      	.DW  _0x0*2+41
                 
000120 0011      	.DW  0x11
000121 052d      	.DW  _0xBE+24
000122 0189      	.DW  _0x0*2+45
                 
000123 000f      	.DW  0x0F
000124 053e      	.DW  _0xBE+41
000125 01c0      	.DW  _0x0*2+100
                 
000126 000d      	.DW  0x0D
000127 054d      	.DW  _0xBE+56
000128 01cf      	.DW  _0x0*2+115
                 
000129 000c      	.DW  0x0C
00012a 055a      	.DW  _0xBE+69
00012b 01dc      	.DW  _0x0*2+128
                 
00012c 000b      	.DW  0x0B
00012d 0566      	.DW  _0xBE+81
00012e 01e8      	.DW  _0x0*2+140
                 
00012f 000c      	.DW  0x0C
000130 0571      	.DW  _0xBE+92
000131 01dc      	.DW  _0x0*2+128
                 
000132 000b      	.DW  0x0B
000133 057d      	.DW  _0xBE+104
000134 01f3      	.DW  _0x0*2+151
                 
000135 0009      	.DW  0x09
000136 0588      	.DW  _0xBE+115
000137 01fe      	.DW  _0x0*2+162
                 
000138 000f      	.DW  0x0F
000139 0591      	.DW  _0xBE+124
00013a 0207      	.DW  _0x0*2+171
                 
00013b 000f      	.DW  0x0F
00013c 05a0      	.DW  _0xBE+139
00013d 01c0      	.DW  _0x0*2+100
                 
00013e 0001      	.DW  0x01
00013f 0005      	.DW  0x05
000140 015a      	.DW  _0xF4*2
                 
                 _0xFFFFFFFF:
000141 0000      	.DW  0
                 
                 __RESET:
000142 94f8      	CLI
000143 27ee      	CLR  R30
000144 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000145 e0f1      	LDI  R31,1
000146 bff5      	OUT  MCUCR,R31
000147 bfe5      	OUT  MCUCR,R30
000148 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
00014a e1f8      	LDI  R31,0x18
00014b bdf1      	OUT  WDTCR,R31
00014c bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
00014d e08d      	LDI  R24,(14-2)+1
00014e e0a2      	LDI  R26,2
00014f 27bb      	CLR  R27
                 __CLEAR_REG:
000150 93ed      	ST   X+,R30
000151 958a      	DEC  R24
000152 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000153 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000154 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000155 e0a0      	LDI  R26,LOW(__SRAM_START)
000156 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000157 93ed      	ST   X+,R30
000158 9701      	SBIW R24,1
000159 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00015a e1e6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00015b e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00015c 9185      	LPM  R24,Z+
00015d 9195      	LPM  R25,Z+
00015e 9700      	SBIW R24,0
00015f f061      	BREQ __GLOBAL_INI_END
000160 91a5      	LPM  R26,Z+
000161 91b5      	LPM  R27,Z+
000162 9005      	LPM  R0,Z+
000163 9015      	LPM  R1,Z+
000164 01bf      	MOVW R22,R30
000165 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000166 9005      	LPM  R0,Z+
000167 920d      	ST   X+,R0
000168 9701      	SBIW R24,1
000169 f7e1      	BRNE __GLOBAL_INI_LOOP
00016a 01fb      	MOVW R30,R22
00016b cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
00016c bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00016d efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00016e bfed      	OUT  SPL,R30
00016f e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000170 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000171 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000172 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000173 940c 049f 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include "lcd.h"
                 
                 	.CSEG
                 _LCD_PORT_Init:
000175 efef      	LDI  R30,LOW(255)
000176 bbea      	OUT  0x1A,R30
000177 e1ef      	LDI  R30,LOW(31)
000178 93e0 0064 	STS  100,R30
00017a 9508      	RET
                 _LCD_Data:
                 ;	ch -> Y+0
00017b 91e0 0065 	LDS  R30,101
00017d 60e4      	ORI  R30,4
00017e 940e 0982 	CALL SUBOPT_0x0
000180 7fed      	ANDI R30,0xFD
000181 940e 0982 	CALL SUBOPT_0x0
000183 940e 0987 	CALL SUBOPT_0x1
000185 c119      	RJMP _0x2060009
                 _LCD_Comm:
                 ;	ch -> Y+0
000186 91e0 0065 	LDS  R30,101
000188 7feb      	ANDI R30,0xFB
000189 940e 0982 	CALL SUBOPT_0x0
00018b 7fed      	ANDI R30,0xFD
00018c 940e 0982 	CALL SUBOPT_0x0
00018e 940e 0987 	CALL SUBOPT_0x1
000190 c10e      	RJMP _0x2060009
                 _LCD_delay:
                 ;	ms -> Y+0
000191 81e8      	LD   R30,Y
000192 e0f0      	LDI  R31,0
000193 940e 0998 	CALL SUBOPT_0x2
000195 c109      	RJMP _0x2060009
                 _LCD_Pos:
                 ;	col -> Y+1
                 ;	row -> Y+0
000196 81e9      	LDD  R30,Y+1
000197 e4a0      	LDI  R26,LOW(64)
000198 02ea      	MULS R30,R26
000199 01f0      	MOVW R30,R0
00019a 81a8      	LD   R26,Y
00019b 0fea      	ADD  R30,R26
00019c 68e0      	ORI  R30,0x80
00019d 93ea      	ST   -Y,R30
00019e dfe7      	RCALL _LCD_Comm
00019f c2c9      	RJMP _0x2060004
                 _LCD_Char:
                 ;	c -> Y+0
0001a0 81e8      	LD   R30,Y
0001a1 93ea      	ST   -Y,R30
0001a2 dfd8      	RCALL _LCD_Data
0001a3 940e 099c 	CALL SUBOPT_0x3
0001a5 c0f9      	RJMP _0x2060009
                 _LCD_Str:
                 ;	*str -> Y+0
                 _0x3:
0001a6 81a8      	LD   R26,Y
0001a7 81b9      	LDD  R27,Y+1
0001a8 91ec      	LD   R30,X
0001a9 30e0      	CPI  R30,0
0001aa f041      	BREQ _0x5
0001ab 93ea      	ST   -Y,R30
0001ac dff3      	RCALL _LCD_Char
0001ad 81e8      	LD   R30,Y
0001ae 81f9      	LDD  R31,Y+1
0001af 9631      	ADIW R30,1
0001b0 83e8      	ST   Y,R30
0001b1 83f9      	STD  Y+1,R31
0001b2 cff3      	RJMP _0x3
                 _0x5:
0001b3 c2b5      	RJMP _0x2060004
                 ;	*str -> Y+1
                 ;	loop_count -> R17
                 
                 	.DSEG
                 _0xA:
000500           	.BYTE 0x15
                 
                 	.CSEG
                 _LCD_Clear:
0001b4 e0e1      	LDI  R30,LOW(1)
0001b5 93ea      	ST   -Y,R30
0001b6 dfcf      	RCALL _LCD_Comm
0001b7 e0e2      	LDI  R30,LOW(2)
0001b8 93ea      	ST   -Y,R30
0001b9 dfd7      	RCALL _LCD_delay
0001ba 9508      	RET
                 _LCD_Init:
0001bb dfb9      	RCALL _LCD_PORT_Init
0001bc 940e 099f 	CALL SUBOPT_0x4
0001be 940e 099f 	CALL SUBOPT_0x4
0001c0 940e 099f 	CALL SUBOPT_0x4
0001c2 e0ee      	LDI  R30,LOW(14)
0001c3 940e 09a7 	CALL SUBOPT_0x5
0001c5 e0e6      	LDI  R30,LOW(6)
0001c6 940e 09a7 	CALL SUBOPT_0x5
0001c8 dfeb      	RCALL _LCD_Clear
0001c9 9508      	RET
                 ;	p -> Y+0
                 ;	p -> Y+0
                 ;#include "twi.h"
                 _Init_TWI:
0001ca e3e2      	LDI  R30,LOW(50)
0001cb 93e0 0070 	STS  112,R30
0001cd e0e4      	LDI  R30,LOW(4)
0001ce 93e0 0074 	STS  116,R30
0001d0 e0e0      	LDI  R30,LOW(0)
0001d1 93e0 0071 	STS  113,R30
0001d3 9508      	RET
                 _TWI_TransCheck_ACK:
0001d4 931a      	ST   -Y,R17
0001d5 930a      	ST   -Y,R16
                 ;	Stat -> Y+2
                 ;	ExtDev_ErrCnt -> R16,R17
                +
0001d6 e000     +LDI R16 , LOW ( 0 )
0001d7 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x12:
0001d8 91e0 0074 	LDS  R30,116
0001da 78e0      	ANDI R30,LOW(0x80)
0001db f461      	BRNE _0x14
0001dc 01d8      	MOVW R26,R16
                +
0001dd 5f0f     +SUBI R16 , LOW ( - 1 )
0001de 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0001df 3da1      	CPI  R26,LOW(0x7D1)
0001e0 e0e7      	LDI  R30,HIGH(0x7D1)
0001e1 07be      	CPC  R27,R30
0001e2 f020      	BRLO _0x15
0001e3 e0e1      	LDI  R30,LOW(1)
0001e4 8119      	LDD  R17,Y+1
0001e5 8108      	LDD  R16,Y+0
0001e6 c047      	RJMP _0x206000A
                 _0x15:
0001e7 cff0      	RJMP _0x12
                 _0x14:
0001e8 91e0 0071 	LDS  R30,113
0001ea 7fe8      	ANDI R30,LOW(0xF8)
0001eb 2fae      	MOV  R26,R30
0001ec 81ea      	LDD  R30,Y+2
0001ed 17ea      	CP   R30,R26
0001ee f021      	BREQ _0x16
0001ef e0e2      	LDI  R30,LOW(2)
0001f0 8119      	LDD  R17,Y+1
0001f1 8108      	LDD  R16,Y+0
0001f2 c03b      	RJMP _0x206000A
                 _0x16:
0001f3 e0e0      	LDI  R30,LOW(0)
0001f4 8119      	LDD  R17,Y+1
0001f5 8108      	LDD  R16,Y+0
0001f6 c037      	RJMP _0x206000A
                 _TWI_Start:
0001f7 eae4      	LDI  R30,LOW(164)
0001f8 93e0 0074 	STS  116,R30
0001fa e0e8      	LDI  R30,LOW(8)
0001fb c014      	RJMP _0x206000B
                 _TWI_Write_SLAW:
                 ;	Addr -> Y+0
0001fc 940e 09ae 	CALL SUBOPT_0x6
0001fe e1e8      	LDI  R30,LOW(24)
0001ff 93ea      	ST   -Y,R30
000200 dfd3      	RCALL _TWI_TransCheck_ACK
000201 c09d      	RJMP _0x2060009
                 _TWI_Write_Data:
                 ;	Data -> Y+0
000202 940e 09ae 	CALL SUBOPT_0x6
000204 e2e8      	LDI  R30,LOW(40)
000205 93ea      	ST   -Y,R30
000206 dfcd      	RCALL _TWI_TransCheck_ACK
000207 c097      	RJMP _0x2060009
                 _TWI_Stop:
000208 e9e4      	LDI  R30,LOW(148)
000209 93e0 0074 	STS  116,R30
00020b 9508      	RET
                 _TWI_Restart:
00020c eae4      	LDI  R30,LOW(164)
00020d 93e0 0074 	STS  116,R30
00020f e1e0      	LDI  R30,LOW(16)
                 _0x206000B:
000210 93ea      	ST   -Y,R30
000211 dfc2      	RCALL _TWI_TransCheck_ACK
000212 9508      	RET
                 ;	Data -> Y+2
                 ;	Addr -> Y+1
                 ;	ret_err -> R17
                 _TWI_Write_SLAR:
                 ;	Addr -> Y+0
000213 81e8      	LD   R30,Y
000214 60e1      	ORI  R30,1
000215 93e0 0073 	STS  115,R30
000217 e8e4      	LDI  R30,LOW(132)
000218 93e0 0074 	STS  116,R30
00021a e4e0      	LDI  R30,LOW(64)
00021b 93ea      	ST   -Y,R30
00021c dfb7      	RCALL _TWI_TransCheck_ACK
00021d c081      	RJMP _0x2060009
                 ;	*Data -> Y+1
                 ;	ret_err -> R17
                 _TWI_Read_Data_NACK:
00021e 931a      	ST   -Y,R17
                 ;	*Data -> Y+1
                 ;	ret_err -> R17
00021f e010      	LDI  R17,0
000220 e8e4      	LDI  R30,LOW(132)
000221 93e0 0074 	STS  116,R30
000223 e5e8      	LDI  R30,LOW(88)
000224 93ea      	ST   -Y,R30
000225 dfae      	RCALL _TWI_TransCheck_ACK
000226 2f1e      	MOV  R17,R30
000227 91e0 0073 	LDS  R30,115
000229 81a9      	LDD  R26,Y+1
00022a 81ba      	LDD  R27,Y+1+1
00022b 93ec      	ST   X,R30
00022c e0e0      	LDI  R30,LOW(0)
00022d 8118      	LDD  R17,Y+0
                 _0x206000A:
00022e 9623      	ADIW R28,3
00022f 9508      	RET
                 ;	Addr -> Y+4
                 ;	*Data -> Y+2
                 ;	rec_data -> R17
                 ;	ret_err -> R16
                 ;	Slave_Addr -> Y+0
                 ;	*Data -> Y+1
                 ;	ret_err -> R17
                 ;	*Data -> Y+2
                 ;	ret_err -> R17
                 ;	rec_data -> R16
                 ;	devAddr -> Y+5
                 ;	regAddr -> Y+4
                 ;	*Data -> Y+2
                 ;	rec_data -> R17
                 ;	ret_err -> R16
                 ;#include "srf02.h"
                 _SRF02_I2C_Write:
000230 931a      	ST   -Y,R17
                 ;	address -> Y+3
                 ;	reg -> Y+2
                 ;	data -> Y+1
                 ;	ret_err -> R17
000231 e010      	LDI  R17,0
000232 dfc4      	RCALL _TWI_Start
000233 2f1e      	MOV  R17,R30
000234 81eb      	LDD  R30,Y+3
000235 93ea      	ST   -Y,R30
000236 dfc5      	RCALL _TWI_Write_SLAW
000237 2f1e      	MOV  R17,R30
000238 3010      	CPI  R17,0
000239 f019      	BREQ _0x29
00023a 2fe1      	MOV  R30,R17
00023b 8118      	LDD  R17,Y+0
00023c c0d7      	RJMP _0x2060007
                 _0x29:
00023d 81ea      	LDD  R30,Y+2
00023e 93ea      	ST   -Y,R30
00023f dfc2      	RCALL _TWI_Write_Data
000240 2f1e      	MOV  R17,R30
000241 3010      	CPI  R17,0
000242 f019      	BREQ _0x2A
000243 2fe1      	MOV  R30,R17
000244 8118      	LDD  R17,Y+0
000245 c0ce      	RJMP _0x2060007
                 _0x2A:
000246 81e9      	LDD  R30,Y+1
000247 93ea      	ST   -Y,R30
000248 dfb9      	RCALL _TWI_Write_Data
000249 2f1e      	MOV  R17,R30
00024a 3010      	CPI  R17,0
00024b f019      	BREQ _0x2B
00024c 2fe1      	MOV  R30,R17
00024d 8118      	LDD  R17,Y+0
00024e c0c5      	RJMP _0x2060007
                 _0x2B:
00024f dfb8      	RCALL _TWI_Stop
000250 e0e0      	LDI  R30,LOW(0)
000251 8118      	LDD  R17,Y+0
000252 c0c1      	RJMP _0x2060007
                 _SRF02_I2C_Read:
000253 931a      	ST   -Y,R17
000254 930a      	ST   -Y,R16
                 ;	address -> Y+5
                 ;	reg -> Y+4
                 ;	*Data -> Y+2
                 ;	read_data -> R17
                 ;	ret_err -> R16
000255 e010      	LDI  R17,0
000256 e000      	LDI  R16,0
000257 df9f      	RCALL _TWI_Start
000258 2f0e      	MOV  R16,R30
000259 81ed      	LDD  R30,Y+5
00025a 93ea      	ST   -Y,R30
00025b dfa0      	RCALL _TWI_Write_SLAW
00025c 2f0e      	MOV  R16,R30
00025d 3000      	CPI  R16,0
00025e f021      	BREQ _0x2C
00025f 2fe0      	MOV  R30,R16
000260 8119      	LDD  R17,Y+1
000261 8108      	LDD  R16,Y+0
000262 c1b2      	RJMP _0x2060005
                 _0x2C:
000263 81ec      	LDD  R30,Y+4
000264 93ea      	ST   -Y,R30
000265 df9c      	RCALL _TWI_Write_Data
000266 2f0e      	MOV  R16,R30
000267 3000      	CPI  R16,0
000268 f021      	BREQ _0x2D
000269 2fe0      	MOV  R30,R16
00026a 8119      	LDD  R17,Y+1
00026b 8108      	LDD  R16,Y+0
00026c c1a8      	RJMP _0x2060005
                 _0x2D:
00026d df9e      	RCALL _TWI_Restart
00026e 2f0e      	MOV  R16,R30
00026f 9ac3      	SBI  0x18,3
000270 3000      	CPI  R16,0
000271 f021      	BREQ _0x2E
000272 2fe0      	MOV  R30,R16
000273 8119      	LDD  R17,Y+1
000274 8108      	LDD  R16,Y+0
000275 c19f      	RJMP _0x2060005
                 _0x2E:
000276 81ed      	LDD  R30,Y+5
000277 93ea      	ST   -Y,R30
000278 df9a      	RCALL _TWI_Write_SLAR
000279 2f0e      	MOV  R16,R30
00027a 9ac4      	SBI  0x18,4
00027b 3000      	CPI  R16,0
00027c f021      	BREQ _0x2F
00027d 2fe0      	MOV  R30,R16
00027e 8119      	LDD  R17,Y+1
00027f 8108      	LDD  R16,Y+0
000280 c194      	RJMP _0x2060005
                 _0x2F:
000281 b7ed      	IN   R30,SPL
000282 b7fe      	IN   R31,SPH
000283 93fa      	ST   -Y,R31
000284 93ea      	ST   -Y,R30
000285 931f      	PUSH R17
000286 df97      	RCALL _TWI_Read_Data_NACK
000287 911f      	POP  R17
000288 2f0e      	MOV  R16,R30
000289 9ac5      	SBI  0x18,5
00028a 3000      	CPI  R16,0
00028b f021      	BREQ _0x30
00028c 2fe0      	MOV  R30,R16
00028d 8119      	LDD  R17,Y+1
00028e 8108      	LDD  R16,Y+0
00028f c185      	RJMP _0x2060005
                 _0x30:
000290 df77      	RCALL _TWI_Stop
000291 81aa      	LDD  R26,Y+2
000292 81bb      	LDD  R27,Y+2+1
000293 931c      	ST   X,R17
000294 e0e0      	LDI  R30,LOW(0)
000295 8119      	LDD  R17,Y+1
000296 8108      	LDD  R16,Y+0
000297 c17d      	RJMP _0x2060005
                 _startRanging:
                 ;	addr -> Y+0
000298 81e8      	LD   R30,Y
000299 93ea      	ST   -Y,R30
00029a e0e0      	LDI  R30,LOW(0)
00029b 93ea      	ST   -Y,R30
00029c e5e1      	LDI  R30,LOW(81)
00029d 93ea      	ST   -Y,R30
00029e df91      	RCALL _SRF02_I2C_Write
                 _0x2060009:
00029f 9621      	ADIW R28,1
0002a0 9508      	RET
                 _getRange:
0002a1 931a      	ST   -Y,R17
0002a2 930a      	ST   -Y,R16
                 ;	addr -> Y+4
                 ;	*pDistance -> Y+2
                 ;	temp -> R17
                 ;	res -> R16
0002a3 e000      	LDI  R16,0
0002a4 81ec      	LDD  R30,Y+4
0002a5 93ea      	ST   -Y,R30
0002a6 e0e2      	LDI  R30,LOW(2)
0002a7 93ea      	ST   -Y,R30
0002a8 b7ed      	IN   R30,SPL
0002a9 b7fe      	IN   R31,SPH
0002aa 93fa      	ST   -Y,R31
0002ab 93ea      	ST   -Y,R30
0002ac 931f      	PUSH R17
0002ad dfa5      	RCALL _SRF02_I2C_Read
0002ae 911f      	POP  R17
0002af 2f0e      	MOV  R16,R30
0002b0 3000      	CPI  R16,0
0002b1 f509      	BRNE _0x2060008
0002b2 2ff1      	MOV  R31,R17
0002b3 e0e0      	LDI  R30,LOW(0)
0002b4 81aa      	LDD  R26,Y+2
0002b5 81bb      	LDD  R27,Y+2+1
0002b6 93ed      	ST   X+,R30
0002b7 93fc      	ST   X,R31
0002b8 81ec      	LDD  R30,Y+4
0002b9 93ea      	ST   -Y,R30
0002ba e0e3      	LDI  R30,LOW(3)
0002bb 93ea      	ST   -Y,R30
0002bc b7ed      	IN   R30,SPL
0002bd b7fe      	IN   R31,SPH
0002be 93fa      	ST   -Y,R31
0002bf 93ea      	ST   -Y,R30
0002c0 931f      	PUSH R17
0002c1 df91      	RCALL _SRF02_I2C_Read
0002c2 911f      	POP  R17
0002c3 2f0e      	MOV  R16,R30
0002c4 3000      	CPI  R16,0
0002c5 f469      	BRNE _0x2060008
0002c6 81aa      	LDD  R26,Y+2
0002c7 81bb      	LDD  R27,Y+2+1
0002c8 010d      	MOVW R0,R26
0002c9 940e 0b91 	CALL __GETW1P
0002cb 01df      	MOVW R26,R30
0002cc 2fe1      	MOV  R30,R17
0002cd e0f0      	LDI  R31,0
0002ce 2bea      	OR   R30,R26
0002cf 2bfb      	OR   R31,R27
0002d0 01d0      	MOVW R26,R0
0002d1 93ed      	ST   X+,R30
0002d2 93fc      	ST   X,R31
                 _0x2060008:
0002d3 2fe0      	MOV  R30,R16
0002d4 e0f0      	LDI  R31,0
0002d5 8119      	LDD  R17,Y+1
0002d6 8108      	LDD  R16,Y+0
0002d7 9625      	ADIW R28,5
0002d8 9508      	RET
                 ;	ori -> Y+2
                 ;	des -> Y+1
                 ;	res -> R17
                 ;#include "Keypad.h"
                 
                 	.DSEG
                 
                 	.CSEG
                 _FND_PORT_Init:
0002d9 b1e2      	IN   R30,0x2
0002da 6fe0      	ORI  R30,LOW(0xF0)
0002db b9e2      	OUT  0x2,R30
0002dc 91e0 0061 	LDS  R30,97
0002de 6fef      	ORI  R30,LOW(0xFF)
0002df 93e0 0061 	STS  97,R30
0002e1 b3e4      	IN   R30,0x14
0002e2 60ef      	ORI  R30,LOW(0xF)
0002e3 bbe4      	OUT  0x14,R30
0002e4 91e0 0064 	LDS  R30,100
0002e6 61e0      	ORI  R30,0x10
0002e7 93e0 0064 	STS  100,R30
0002e9 9abd      	SBI  0x17,5
0002ea b3e5      	IN   R30,0x15
0002eb 6fef      	ORI  R30,LOW(0xFF)
0002ec bbe5      	OUT  0x15,R30
0002ed 9508      	RET
                 _Init_Timer1:
0002ee e8e2      	LDI  R30,LOW(130)
0002ef bdef      	OUT  0x2F,R30
0002f0 e1ea      	LDI  R30,LOW(26)
0002f1 bdee      	OUT  0x2E,R30
0002f2 e0e0      	LDI  R30,LOW(0)
0002f3 e0f0      	LDI  R31,HIGH(0)
0002f4 bdfd      	OUT  0x2C+1,R31
0002f5 bdec      	OUT  0x2C,R30
0002f6 efef      	LDI  R30,LOW(36863)
0002f7 e8ff      	LDI  R31,HIGH(36863)
0002f8 bdf7      	OUT  0x26+1,R31
0002f9 bde6      	OUT  0x26,R30
0002fa e6e6      	LDI  R30,LOW(4710)
0002fb e1f2      	LDI  R31,HIGH(4710)
0002fc bdfb      	OUT  0x2A+1,R31
0002fd bdea      	OUT  0x2A,R30
0002fe b7e7      	IN   R30,0x37
0002ff 61e0      	ORI  R30,0x10
000300 c171      	RJMP _0x2060003
                 _compare:
000301 0000      	nop
000302 9518      	RETI
                 _myDelay_us:
000303 931a      	ST   -Y,R17
000304 930a      	ST   -Y,R16
                 ;	delay -> Y+2
                 ;	loop -> R16,R17
                +
000305 e000     +LDI R16 , LOW ( 0 )
000306 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x5D:
000307 81ea      	LDD  R30,Y+2
000308 81fb      	LDD  R31,Y+2+1
000309 170e      	CP   R16,R30
00030a 071f      	CPC  R17,R31
00030b f430      	BRSH _0x5E
                +
00030c e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
00030d 958a     +DEC R24
00030e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
                +
00030f 5f0f     +SUBI R16 , LOW ( - 1 )
000310 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000311 cff5      	RJMP _0x5D
                 _0x5E:
000312 8119      	LDD  R17,Y+1
000313 8108      	LDD  R16,Y+0
                 _0x2060007:
000314 9624      	ADIW R28,4
000315 9508      	RET
                 _Buzzer_play:
000316 940e 0bab 	CALL __SAVELOCR4
                 ;	delay -> Y+4
                 ;	loop -> R16,R17
                 ;	Play_Tim -> R19
000318 e030      	LDI  R19,0
000319 81ec      	LDD  R30,Y+4
00031a 81fd      	LDD  R31,Y+4+1
00031b e1a0      	LDI  R26,LOW(10000)
00031c e2b7      	LDI  R27,HIGH(10000)
00031d 940e 0b5a 	CALL __DIVW21U
00031f 2f3e      	MOV  R19,R30
                +
000320 e000     +LDI R16 , LOW ( 0 )
000321 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x60:
000322 2fe3      	MOV  R30,R19
000323 01d8      	MOVW R26,R16
000324 e0f0      	LDI  R31,0
000325 17ae      	CP   R26,R30
000326 07bf      	CPC  R27,R31
000327 f468      	BRSH _0x61
000328 91e0 0065 	LDS  R30,101
00032a 61e0      	ORI  R30,0x10
00032b 940e 09b5 	CALL SUBOPT_0x7
00032d 91e0 0065 	LDS  R30,101
00032f 7eef      	ANDI R30,0xEF
000330 940e 09b5 	CALL SUBOPT_0x7
                +
000332 5f0f     +SUBI R16 , LOW ( - 1 )
000333 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000334 cfed      	RJMP _0x60
                 _0x61:
000335 c0dd      	RJMP _0x2060006
                 _KeyScan:
000336 940e 0ba9 	CALL __SAVELOCR6
                 ;	key_scan_line -> R16,R17
                 ;	key_scan_loop -> R19
                 ;	getPinData -> R18
                 ;	key_num -> R20,R21
                +
000338 ef0e     +LDI R16 , LOW ( 254 )
000339 e010     +LDI R17 , HIGH ( 254 )
                 	__GETWRN 16,17,254
00033a e030      	LDI  R19,0
00033b e020      	LDI  R18,0
                +
00033c e040     +LDI R20 , LOW ( 0 )
00033d e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
00033e e030      	LDI  R19,LOW(0)
                 _0x63:
00033f 3034      	CPI  R19,4
000340 f5b8      	BRSH _0x64
000341 bb05      	OUT  0x15,R16
                +
000342 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000343 958a     +DEC R24
000344 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
000345 b3e3      	IN   R30,0x13
000346 7fe0      	ANDI R30,LOW(0xF0)
000347 2f2e      	MOV  R18,R30
000348 3020      	CPI  R18,0
000349 f151      	BREQ _0x65
00034a 2fe2      	MOV  R30,R18
00034b e0f0      	LDI  R31,0
00034c 31e0      	CPI  R30,LOW(0x10)
00034d e0a0      	LDI  R26,HIGH(0x10)
00034e 07fa      	CPC  R31,R26
00034f f429      	BRNE _0x69
000350 e0e4      	LDI  R30,LOW(4)
000351 9fe3      	MUL  R30,R19
000352 01f0      	MOVW R30,R0
000353 9631      	ADIW R30,1
000354 c01a      	RJMP _0xED
                 _0x69:
000355 32e0      	CPI  R30,LOW(0x20)
000356 e0a0      	LDI  R26,HIGH(0x20)
000357 07fa      	CPC  R31,R26
000358 f429      	BRNE _0x6A
000359 e0e4      	LDI  R30,LOW(4)
00035a 9fe3      	MUL  R30,R19
00035b 01f0      	MOVW R30,R0
00035c 9632      	ADIW R30,2
00035d c011      	RJMP _0xED
                 _0x6A:
00035e 34e0      	CPI  R30,LOW(0x40)
00035f e0a0      	LDI  R26,HIGH(0x40)
000360 07fa      	CPC  R31,R26
000361 f429      	BRNE _0x6B
000362 e0e4      	LDI  R30,LOW(4)
000363 9fe3      	MUL  R30,R19
000364 01f0      	MOVW R30,R0
000365 9633      	ADIW R30,3
000366 c008      	RJMP _0xED
                 _0x6B:
000367 38e0      	CPI  R30,LOW(0x80)
000368 e0a0      	LDI  R26,HIGH(0x80)
000369 07fa      	CPC  R31,R26
00036a f429      	BRNE _0x68
00036b e0e4      	LDI  R30,LOW(4)
00036c 9fe3      	MUL  R30,R19
00036d 01f0      	MOVW R30,R0
00036e 9634      	ADIW R30,4
                 _0xED:
00036f 01af      	MOVW R20,R30
                 _0x68:
000370 2fe4      	MOV  R30,R20
000371 940e 0bb0 	CALL __LOADLOCR6
000373 c0a1      	RJMP _0x2060005
                 _0x65:
000374 0f00      	LSL  R16
000375 1f11      	ROL  R17
000376 5f3f      	SUBI R19,-1
000377 cfc7      	RJMP _0x63
                 _0x64:
000378 940e 0bb0 	CALL __LOADLOCR6
00037a c09a      	RJMP _0x2060005
                 _Changenum:
00037b 931a      	ST   -Y,R17
                 ;	num -> Y+1
                 ;	return_num -> R17
00037c e010      	LDI  R17,0
00037d 81e9      	LDD  R30,Y+1
00037e 30e0      	CPI  R30,0
00037f f411      	BRNE _0x6D
000380 e010      	LDI  R17,LOW(0)
000381 c049      	RJMP _0x6E
                 _0x6D:
000382 940e 09bd 	CALL SUBOPT_0x8
000384 9730      	SBIW R30,0
000385 f421      	BRNE _0x6F
000386 940e 09c4 	CALL SUBOPT_0x9
000388 5fe4      	SUBI R30,-LOW(12)
000389 c040      	RJMP _0xEE
                 _0x6F:
00038a 940e 09c4 	CALL SUBOPT_0x9
00038c 9730      	SBIW R30,0
00038d f449      	BRNE _0x71
00038e 940e 09c4 	CALL SUBOPT_0x9
000390 0fee      	LSL  R30
000391 0fee      	LSL  R30
000392 2f6e      	MOV  R22,R30
000393 940e 09bd 	CALL SUBOPT_0x8
000395 0fe6      	ADD  R30,R22
000396 c033      	RJMP _0xEE
                 _0x71:
000397 940e 09c4 	CALL SUBOPT_0x9
000399 30e1      	CPI  R30,LOW(0x1)
00039a e0a0      	LDI  R26,HIGH(0x1)
00039b 07fa      	CPC  R31,R26
00039c f451      	BRNE _0x73
00039d 940e 09c4 	CALL SUBOPT_0x9
00039f 940e 09cb 	CALL SUBOPT_0xA
0003a1 01db      	MOVW R26,R22
0003a2 0fae      	ADD  R26,R30
0003a3 1fbf      	ADC  R27,R31
0003a4 e0e1      	LDI  R30,LOW(1)
0003a5 e0f0      	LDI  R31,HIGH(1)
0003a6 c01f      	RJMP _0xEF
                 _0x73:
0003a7 940e 09c4 	CALL SUBOPT_0x9
0003a9 30e2      	CPI  R30,LOW(0x2)
0003aa e0a0      	LDI  R26,HIGH(0x2)
0003ab 07fa      	CPC  R31,R26
0003ac f451      	BRNE _0x75
0003ad 940e 09c4 	CALL SUBOPT_0x9
0003af 940e 09cb 	CALL SUBOPT_0xA
0003b1 01db      	MOVW R26,R22
0003b2 0fae      	ADD  R26,R30
0003b3 1fbf      	ADC  R27,R31
0003b4 e0e2      	LDI  R30,LOW(2)
0003b5 e0f0      	LDI  R31,HIGH(2)
0003b6 c00f      	RJMP _0xEF
                 _0x75:
0003b7 940e 09c4 	CALL SUBOPT_0x9
0003b9 30e3      	CPI  R30,LOW(0x3)
0003ba e0a0      	LDI  R26,HIGH(0x3)
0003bb 07fa      	CPC  R31,R26
0003bc f471      	BRNE _0x77
0003bd 940e 09c4 	CALL SUBOPT_0x9
0003bf 940e 09cb 	CALL SUBOPT_0xA
0003c1 01db      	MOVW R26,R22
0003c2 0fae      	ADD  R26,R30
0003c3 1fbf      	ADC  R27,R31
0003c4 e0e3      	LDI  R30,LOW(3)
0003c5 e0f0      	LDI  R31,HIGH(3)
                 _0xEF:
0003c6 940e 0b9e 	CALL __SWAPW12
0003c8 1bea      	SUB  R30,R26
0003c9 0bfb      	SBC  R31,R27
                 _0xEE:
0003ca 2f1e      	MOV  R17,R30
                 _0x77:
                 _0x6E:
0003cb 301b      	CPI  R17,11
0003cc f419      	BRNE _0x78
0003cd e010      	LDI  R17,LOW(0)
0003ce e0e1      	LDI  R30,LOW(1)
0003cf 2e5e      	MOV  R5,R30
                 _0x78:
0003d0 2fe1      	MOV  R30,R17
0003d1 8118      	LDD  R17,Y+0
0003d2 c096      	RJMP _0x2060004
                 _OUTFND:
0003d3 940e 0bab 	CALL __SAVELOCR4
                 ;	t -> Y+4
                 ;	FND0 -> R17
                 ;	FND1 -> R16
                 ;	FND2 -> R19
                 ;	FND3 -> R18
0003d5 81ac      	LDD  R26,Y+4
0003d6 81bd      	LDD  R27,Y+4+1
0003d7 eee8      	LDI  R30,LOW(1000)
0003d8 e0f3      	LDI  R31,HIGH(1000)
0003d9 940e 0b5a 	CALL __DIVW21U
0003db 2f2e      	MOV  R18,R30
0003dc 81ac      	LDD  R26,Y+4
0003dd 81bd      	LDD  R27,Y+4+1
0003de eee8      	LDI  R30,LOW(1000)
0003df e0f3      	LDI  R31,HIGH(1000)
0003e0 940e 0b72 	CALL __MODW21U
0003e2 01df      	MOVW R26,R30
0003e3 e6e4      	LDI  R30,LOW(100)
0003e4 e0f0      	LDI  R31,HIGH(100)
0003e5 940e 0b5a 	CALL __DIVW21U
0003e7 2f3e      	MOV  R19,R30
0003e8 81ac      	LDD  R26,Y+4
0003e9 81bd      	LDD  R27,Y+4+1
0003ea e6e4      	LDI  R30,LOW(100)
0003eb e0f0      	LDI  R31,HIGH(100)
0003ec 940e 0b72 	CALL __MODW21U
0003ee 01df      	MOVW R26,R30
0003ef e0ea      	LDI  R30,LOW(10)
0003f0 e0f0      	LDI  R31,HIGH(10)
0003f1 940e 0b5a 	CALL __DIVW21U
0003f3 2f0e      	MOV  R16,R30
0003f4 81ac      	LDD  R26,Y+4
0003f5 81bd      	LDD  R27,Y+4+1
0003f6 e0ea      	LDI  R30,LOW(10)
0003f7 e0f0      	LDI  R31,HIGH(10)
0003f8 940e 0b72 	CALL __MODW21U
0003fa 2f1e      	MOV  R17,R30
0003fb 91e0 05bf 	LDS  R30,_Port_fnd
0003fd b9e3      	OUT  0x3,R30
0003fe 2fe1      	MOV  R30,R17
0003ff 940e 09cf 	CALL SUBOPT_0xB
                +
000401 91e0 05c1+LDS R30 , _Port_fnd + ( 2 )
                 	__GETB1MN _Port_fnd,2
000403 b9e3      	OUT  0x3,R30
000404 2fe0      	MOV  R30,R16
000405 940e 09cf 	CALL SUBOPT_0xB
                +
000407 91e0 05c3+LDS R30 , _Port_fnd + ( 4 )
                 	__GETB1MN _Port_fnd,4
000409 b9e3      	OUT  0x3,R30
00040a 2fe3      	MOV  R30,R19
00040b 940e 09cf 	CALL SUBOPT_0xB
                +
00040d 91e0 05c5+LDS R30 , _Port_fnd + ( 6 )
                 	__GETB1MN _Port_fnd,6
00040f b9e3      	OUT  0x3,R30
000410 2fe2      	MOV  R30,R18
000411 940e 09cf 	CALL SUBOPT_0xB
                 _0x2060006:
000413 940e 0bb2 	CALL __LOADLOCR4
                 _0x2060005:
000415 9626      	ADIW R28,6
000416 9508      	RET
                 _buzzer_play_function:
                 ;	t -> Y+0
000417 81e8      	LD   R30,Y
000418 81f9      	LDD  R31,Y+1
000419 30e1      	CPI  R30,LOW(0x1)
00041a e0a0      	LDI  R26,HIGH(0x1)
00041b 07fa      	CPC  R31,R26
00041c f429      	BRNE _0x7C
00041d e7e4      	LDI  R30,LOW(1908)
00041e e0f7      	LDI  R31,HIGH(1908)
00041f 940e 09d6 	CALL SUBOPT_0xC
000421 c047      	RJMP _0x7B
                 _0x7C:
000422 30e2      	CPI  R30,LOW(0x2)
000423 e0a0      	LDI  R26,HIGH(0x2)
000424 07fa      	CPC  R31,R26
000425 f429      	BRNE _0x7D
000426 eae4      	LDI  R30,LOW(1700)
000427 e0f6      	LDI  R31,HIGH(1700)
000428 940e 09d6 	CALL SUBOPT_0xC
00042a c03e      	RJMP _0x7B
                 _0x7D:
00042b 30e3      	CPI  R30,LOW(0x3)
00042c e0a0      	LDI  R26,HIGH(0x3)
00042d 07fa      	CPC  R31,R26
00042e f429      	BRNE _0x7E
00042f eeeb      	LDI  R30,LOW(1515)
000430 e0f5      	LDI  R31,HIGH(1515)
000431 940e 09d6 	CALL SUBOPT_0xC
000433 c035      	RJMP _0x7B
                 _0x7E:
000434 30e4      	CPI  R30,LOW(0x4)
000435 e0a0      	LDI  R26,HIGH(0x4)
000436 07fa      	CPC  R31,R26
000437 f429      	BRNE _0x7F
000438 e9e8      	LDI  R30,LOW(1432)
000439 e0f5      	LDI  R31,HIGH(1432)
00043a 940e 09d6 	CALL SUBOPT_0xC
00043c c02c      	RJMP _0x7B
                 _0x7F:
00043d 30e5      	CPI  R30,LOW(0x5)
00043e e0a0      	LDI  R26,HIGH(0x5)
00043f 07fa      	CPC  R31,R26
000440 f429      	BRNE _0x80
000441 efeb      	LDI  R30,LOW(1275)
000442 e0f4      	LDI  R31,HIGH(1275)
000443 940e 09d6 	CALL SUBOPT_0xC
000445 c023      	RJMP _0x7B
                 _0x80:
000446 30e6      	CPI  R30,LOW(0x6)
000447 e0a0      	LDI  R26,HIGH(0x6)
000448 07fa      	CPC  R31,R26
000449 f429      	BRNE _0x81
00044a e7e0      	LDI  R30,LOW(1136)
00044b e0f4      	LDI  R31,HIGH(1136)
00044c 940e 09d6 	CALL SUBOPT_0xC
00044e c01a      	RJMP _0x7B
                 _0x81:
00044f 30e7      	CPI  R30,LOW(0x7)
000450 e0a0      	LDI  R26,HIGH(0x7)
000451 07fa      	CPC  R31,R26
000452 f429      	BRNE _0x82
000453 efe4      	LDI  R30,LOW(1012)
000454 e0f3      	LDI  R31,HIGH(1012)
000455 940e 09d6 	CALL SUBOPT_0xC
000457 c011      	RJMP _0x7B
                 _0x82:
000458 30e8      	CPI  R30,LOW(0x8)
000459 e0a0      	LDI  R26,HIGH(0x8)
00045a 07fa      	CPC  R31,R26
00045b f429      	BRNE _0x83
00045c ebea      	LDI  R30,LOW(954)
00045d e0f3      	LDI  R31,HIGH(954)
00045e 940e 09d6 	CALL SUBOPT_0xC
000460 c008      	RJMP _0x7B
                 _0x83:
000461 30e9      	CPI  R30,LOW(0x9)
000462 e0a0      	LDI  R26,HIGH(0x9)
000463 07fa      	CPC  R31,R26
000464 f421      	BRNE _0x85
000465 e5e2      	LDI  R30,LOW(850)
000466 e0f3      	LDI  R31,HIGH(850)
000467 940e 09d6 	CALL SUBOPT_0xC
                 _0x85:
                 _0x7B:
                 _0x2060004:
000469 9622      	ADIW R28,2
00046a 9508      	RET
                 ;	num -> Y+1
                 ;	str -> R17
                 ;
                 ;/*»óÅÂ Á¤ÀÇ*/
                 ;#define NONE 0
                 ;#define START 1
                 ;#define INPUT_PHONE 2
                 ;#define INPUT_PHONE_INIT 3
                 ;#define CHECK_PNUM 4
                 ;#define CHECK_PNUM_INIT 5
                 ;#define EXIT_CHOOSE 6
                 ;#define CHECK_PNUM_OUT 7
                 ;#define CHECK_PNUM_OUT_INIT 8
                 ;#define INPUT_PHONE_OUT 9
                 ;#define INPUT_PHONE_OUT_INIT 10
                 ;
                 ;unsigned char ti_Cnt_1ms;  //ÃÊÀ½ÆÄ ¼¾¼­±¸µ¿À»À§ÇÑ cnt
                 ;unsigned char LCD_DelCnt_1ms;
                 ;unsigned char Distance_cnt_1ms; // ½Ã°£Áö³ª¸é ÀÚ¸®ºñ¿òÃ³¸®¸¦ À§ÇÑ cnt
                 ;
                 ;void Timer0_Init()  //ÃÊÀ½ÆÄ ¼¾¼­±¸µ¿ Å¸ÀÌ¸Ó ÀÎÅÍ·´Æ®
                 ; 0000 001B {
                 _Timer0_Init:
                 ; 0000 001C     TCCR0 = (1<<WGM01)|(1<<CS00)|(1<<CS01)|(1<<CS02);
00046b e0ef      	LDI  R30,LOW(15)
00046c bfe3      	OUT  0x33,R30
                 ; 0000 001D     TCNT0 = 0x00;
00046d e0e0      	LDI  R30,LOW(0)
00046e bfe2      	OUT  0x32,R30
                 ; 0000 001E     OCR0 = 100;
00046f e6e4      	LDI  R30,LOW(100)
000470 bfe1      	OUT  0x31,R30
                 ; 0000 001F     TIMSK = (1<<OCIE0);
000471 e0e2      	LDI  R30,LOW(2)
                 _0x2060003:
000472 bfe7      	OUT  0x37,R30
                 ; 0000 0020 }
000473 9508      	RET
                 ;
                 ;interrupt[TIM0_COMP] void timer0_comp(void)    //½ÇÁ¦ Ä«¿îÆ® Áõ°¡
                 ; 0000 0023 {
                 _timer0_comp:
000474 93ea      	ST   -Y,R30
000475 b7ef      	IN   R30,SREG
                 ; 0000 0024     ti_Cnt_1ms++;
000476 9443      	INC  R4
                 ; 0000 0025     LCD_DelCnt_1ms++;
000477 9473      	INC  R7
                 ; 0000 0026 
                 ; 0000 0027 }
000478 bfef      	OUT  SREG,R30
000479 91e9      	LD   R30,Y+
00047a 9518      	RETI
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;int SRF_Run(char Sonar_Addr){    //SRF ÁÖ¼Ò·Î °ªÀ» ¹Þ¾Æ¿È
                 ; 0000 002E int SRF_Run(char Sonar_Addr){
                 _SRF_Run:
                 ; 0000 002F     unsigned char res;
                 ; 0000 0030     unsigned int Sonar_range;
                 ; 0000 0031 
                 ; 0000 0032     res = getRange(Sonar_Addr, &Sonar_range);
00047b 940e 0bab 	CALL __SAVELOCR4
                 ;	Sonar_Addr -> Y+4
                 ;	res -> R17
                 ;	Sonar_range -> R18,R19
00047d 81ec      	LDD  R30,Y+4
00047e 93ea      	ST   -Y,R30
00047f b7ed      	IN   R30,SPL
000480 b7fe      	IN   R31,SPH
000481 9731      	SBIW R30,1
000482 93fa      	ST   -Y,R31
000483 93ea      	ST   -Y,R30
000484 933f      	PUSH R19
000485 932f      	PUSH R18
000486 de1a      	RCALL _getRange
000487 912f      	POP  R18
000488 913f      	POP  R19
000489 2f1e      	MOV  R17,R30
                 ; 0000 0033         if(res)
00048a 3010      	CPI  R17,0
00048b f031      	BREQ _0x94
                 ; 0000 0034         {
                 ; 0000 0035             return 0;
00048c e0e0      	LDI  R30,LOW(0)
00048d e0f0      	LDI  R31,HIGH(0)
00048e 940e 0bb2 	CALL __LOADLOCR4
000490 940c 0800 	JMP  _0x2060002
                 ; 0000 0036         }
                 ; 0000 0037         else if(LCD_DelCnt_1ms > 100)
                 _0x94:
000492 e6e4      	LDI  R30,LOW(100)
000493 15e7      	CP   R30,R7
000494 f430      	BRSH _0x96
                 ; 0000 0038         {
                 ; 0000 0039             LCD_DelCnt_1ms = 0;
000495 2477      	CLR  R7
                 ; 0000 003A             return Sonar_range;
000496 01f9      	MOVW R30,R18
000497 940e 0bb2 	CALL __LOADLOCR4
000499 940c 0800 	JMP  _0x2060002
                 ; 0000 003B         }
                 ; 0000 003C }
                 _0x96:
00049b 940e 0bb2 	CALL __LOADLOCR4
00049d 940c 0800 	JMP  _0x2060002
                 ;
                 ;
                 ;void main(void)
                 ; 0000 0040 {
                 _main:
                 ; 0000 0041     unsigned char res;
                 ; 0000 0042     char Sonar_Addr = 0xE0;
                 ; 0000 0043     unsigned int Sonar_range_1 = 0,Sonar_range_2 = 0,Sonar_range_3 = 0;
                 ; 0000 0044     char Message[40];
                 ; 0000 0045     int readCnt = 0;
                 ; 0000 0046     int t=0; //Å°ÆÐµå·Î ¹ÞÀº ¼ýÀÚ
                 ; 0000 0047     int count =0; //count º¯¼ö
                 ; 0000 0048     int finalnum=0; //FND¿¡ Ãâ·ÂÀ¸·Î ³Ö¾îÁÙ º¯¼ö
                 ; 0000 0049     int fnd[12]={0,};
                 ; 0000 004A     signed int angle=0; // ¼­ºê¸ðÅÍ °¢µµ·Î ³ÖÀ» º¯¼ö
                 ; 0000 004B     char STATE = START;
                 ; 0000 004C     char user_state[3] = {'X','X','X'};
                 ; 0000 004D     int i = 0;
                 ; 0000 004E     char user_pnumber[3][11]; //À¯Àú ºñ¹Ð¹øÈ£ ÀúÀå
                 ; 0000 004F     char check_pnumber[11]; //ºñ¹Ð¹øÈ£ ÀÏÄ¡È®ÀÎÀ»À§ÇÑ °ø°£
                 ; 0000 0050     char user_name; //1~3¹øÁß ¾î´ÀÁÂ¼® À¯Àú¸¦ °¡¸£Å°´ÂÁö ÀúÀå
                 ; 0000 0051     char num[3][11];
                 ; 0000 0052     char empty_cnt[3]={0,};
                 ; 0000 0053 
                 ; 0000 0054     DDRD |= 0x03;
00049f 97ef      	SBIW R28,63
0004a0 97ef      	SBIW R28,63
0004a1 97a5      	SBIW R28,37
0004a2 ea83      	LDI  R24,163
0004a3 e0a0      	LDI  R26,LOW(0)
0004a4 e0b0      	LDI  R27,HIGH(0)
0004a5 ebe6      	LDI  R30,LOW(_0x97*2)
0004a6 e0f0      	LDI  R31,HIGH(_0x97*2)
0004a7 940e 0bb7 	CALL __INITLOCB
                 ;	res -> R17
                 ;	Sonar_Addr -> R16
                 ;	Sonar_range_1 -> R18,R19
                 ;	Sonar_range_2 -> R20,R21
                 ;	Sonar_range_3 -> Y+161
                 ;	Message -> Y+121
                 ;	readCnt -> Y+119
                 ;	t -> Y+117
                 ;	count -> Y+115
                 ;	finalnum -> Y+113
                 ;	fnd -> Y+89
                 ;	angle -> Y+87
                 ;	STATE -> Y+86
                 ;	user_state -> Y+83
                 ;	i -> Y+81
                 ;	user_pnumber -> Y+48
                 ;	check_pnumber -> Y+37
                 ;	user_name -> Y+36
                 ;	num -> Y+3
                 ;	empty_cnt -> Y+0
0004a9 ee00      	LDI  R16,224
                +
0004aa e020     +LDI R18 , LOW ( 0 )
0004ab e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
0004ac e040     +LDI R20 , LOW ( 0 )
0004ad e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
0004ae b3e1      	IN   R30,0x11
0004af 60e3      	ORI  R30,LOW(0x3)
0004b0 bbe1      	OUT  0x11,R30
                 ; 0000 0055     LCD_Init();
0004b1 dd09      	RCALL _LCD_Init
                 ; 0000 0056     Timer0_Init();
0004b2 dfb8      	RCALL _Timer0_Init
                 ; 0000 0057     FND_PORT_Init(); // Æ÷Æ®µé ÀÔÃâ·Â ÃÊ±â ¼³Á¤
0004b3 de25      	RCALL _FND_PORT_Init
                 ; 0000 0058     Init_TWI();
0004b4 dd15      	RCALL _Init_TWI
                 ; 0000 0059     Init_Timer1();
0004b5 de38      	RCALL _Init_Timer1
                 ; 0000 005A     delay_ms(1000);
0004b6 940e 09da 	CALL SUBOPT_0xD
                 ; 0000 005B     SREG |= 0x80;
0004b8 9478      	BSET 7
                 ; 0000 005C 
                 ; 0000 005D     OCR1A =4710;
0004b9 e6e6      	LDI  R30,LOW(4710)
0004ba e1f2      	LDI  R31,HIGH(4710)
0004bb bdfb      	OUT  0x2A+1,R31
0004bc bdea      	OUT  0x2A,R30
                 ; 0000 005E     startRanging(Sonar_Addr);
0004bd 930a      	ST   -Y,R16
0004be ddd9      	RCALL _startRanging
                 ; 0000 005F     ti_Cnt_1ms = 0;
0004bf 2444      	CLR  R4
                 ; 0000 0060     LCD_DelCnt_1ms = 0;
0004c0 2477      	CLR  R7
                 ; 0000 0061 
                 ; 0000 0062 
                 ; 0000 0063 
                 ; 0000 0064     while(1)
                 _0x98:
                 ; 0000 0065     {
                 ; 0000 0066         if(ti_Cnt_1ms > 100)  //2ÃÊ¿¡ ÇÑ¹øÁ¤µµ ÇÑ¼¾¼­¾¿ °»½Å
0004c1 e6e4      	LDI  R30,LOW(100)
0004c2 15e4      	CP   R30,R4
0004c3 f598      	BRSH _0x9B
                 ; 0000 0067         {
                 ; 0000 0068             if (Sonar_Addr == 0xE0){
0004c4 3e00      	CPI  R16,224
0004c5 f471      	BRNE _0x9C
                 ; 0000 0069                 Sonar_Addr = 0xEC;
0004c6 ee0c      	LDI  R16,LOW(236)
                 ; 0000 006A                 startRanging(Sonar_Addr);
0004c7 940e 09dd 	CALL SUBOPT_0xE
                 ; 0000 006B                 Sonar_range_1 = SRF_Run(Sonar_Addr);
0004c9 019f      	MOVW R18,R30
                 ; 0000 006C                 if (Sonar_range_1 > 30){
                +
0004ca 312f     +CPI R18 , LOW ( 31 )
0004cb e0e0     +LDI R30 , HIGH ( 31 )
0004cc 073e     +CPC R19 , R30
                 	__CPWRN 18,19,31
0004cd f018      	BRLO _0x9D
                 ; 0000 006D                     empty_cnt[0] ++;
0004ce 81e8      	LD   R30,Y
0004cf 5fef      	SUBI R30,-LOW(1)
0004d0 c001      	RJMP _0xF0
                 ; 0000 006E                 }
                 ; 0000 006F                 else{
                 _0x9D:
                 ; 0000 0070                     empty_cnt[0] =0;
0004d1 e0e0      	LDI  R30,LOW(0)
                 _0xF0:
0004d2 83e8      	ST   Y,R30
                 ; 0000 0071                 }
                 ; 0000 0072 
                 ; 0000 0073             }
                 ; 0000 0074             else if (Sonar_Addr == 0xEC) {
0004d3 c021      	RJMP _0x9F
                 _0x9C:
0004d4 3e0c      	CPI  R16,236
0004d5 f471      	BRNE _0xA0
                 ; 0000 0075                 Sonar_Addr = 0xE2;
0004d6 ee02      	LDI  R16,LOW(226)
                 ; 0000 0076                 startRanging(Sonar_Addr);
0004d7 940e 09dd 	CALL SUBOPT_0xE
                 ; 0000 0077                 Sonar_range_2 = SRF_Run(Sonar_Addr);
0004d9 01af      	MOVW R20,R30
                 ; 0000 0078                 if (Sonar_range_1 > 30){
                +
0004da 312f     +CPI R18 , LOW ( 31 )
0004db e0e0     +LDI R30 , HIGH ( 31 )
0004dc 073e     +CPC R19 , R30
                 	__CPWRN 18,19,31
0004dd f018      	BRLO _0xA1
                 ; 0000 0079                     empty_cnt[1] ++;
0004de 81e9      	LDD  R30,Y+1
0004df 5fef      	SUBI R30,-LOW(1)
0004e0 c001      	RJMP _0xF1
                 ; 0000 007A                 }
                 ; 0000 007B                 else{
                 _0xA1:
                 ; 0000 007C                     empty_cnt[1] =0;
0004e1 e0e0      	LDI  R30,LOW(0)
                 _0xF1:
0004e2 83e9      	STD  Y+1,R30
                 ; 0000 007D                 }
                 ; 0000 007E             }
                 ; 0000 007F             else{
0004e3 c011      	RJMP _0xA3
                 _0xA0:
                 ; 0000 0080                 Sonar_Addr = 0xE0;
0004e4 ee00      	LDI  R16,LOW(224)
                 ; 0000 0081                 startRanging(Sonar_Addr);
0004e5 940e 09dd 	CALL SUBOPT_0xE
                 ; 0000 0082                 Sonar_range_3 = SRF_Run(Sonar_Addr);
                +
0004e7 01de     +MOVW R26 , R28
0004e8 55af     +SUBI R26 , LOW ( - 161 )
0004e9 4fbf     +SBCI R27 , HIGH ( - 161 )
0004ea 93ed     +ST X + , R30
0004eb 93fc     +ST X , R31
                 	__PUTW1SX 161
                 ; 0000 0083                 if (Sonar_range_1 > 30){
                +
0004ec 312f     +CPI R18 , LOW ( 31 )
0004ed e0e0     +LDI R30 , HIGH ( 31 )
0004ee 073e     +CPC R19 , R30
                 	__CPWRN 18,19,31
0004ef f018      	BRLO _0xA4
                 ; 0000 0084                     empty_cnt[2] ++;
0004f0 81ea      	LDD  R30,Y+2
0004f1 5fef      	SUBI R30,-LOW(1)
0004f2 c001      	RJMP _0xF2
                 ; 0000 0085                 }
                 ; 0000 0086                 else{
                 _0xA4:
                 ; 0000 0087                     empty_cnt[2] =0;
0004f3 e0e0      	LDI  R30,LOW(0)
                 _0xF2:
0004f4 83ea      	STD  Y+2,R30
                 ; 0000 0088                 }
                 ; 0000 0089             }
                 _0xA3:
                 _0x9F:
                 ; 0000 008A 
                 ; 0000 008B 
                 ; 0000 008C             /*   ÃÊÀ½ÆÄ È® ÀÎ *//*
                 ; 0000 008D             LCD_Clear();
                 ; 0000 008E             sprintf(Message, "%03dcm", Sonar_range_1);
                 ; 0000 008F             LCD_Pos(0,0);
                 ; 0000 0090             LCD_Str(Message);
                 ; 0000 0091 
                 ; 0000 0092             sprintf(Message, "%03dcm", Sonar_range_2);
                 ; 0000 0093             LCD_Pos(1,0);
                 ; 0000 0094             LCD_Str(Message);
                 ; 0000 0095 
                 ; 0000 0096             sprintf(Message, "%03dcm", Sonar_range_3);
                 ; 0000 0097             LCD_Pos(1,5);
                 ; 0000 0098             LCD_Str(Message); */
                 ; 0000 0099 
                 ; 0000 009A             LCD_DelCnt_1ms = 0;
0004f5 2477      	CLR  R7
                 ; 0000 009B             ti_Cnt_1ms = 0;
0004f6 2444      	CLR  R4
                 ; 0000 009C         }
                 ; 0000 009D         t= Changenum(KeyScan());
                 _0x9B:
0004f7 de3e      	RCALL _KeyScan
0004f8 93ea      	ST   -Y,R30
0004f9 de81      	RCALL _Changenum
0004fa e0f0      	LDI  R31,0
                +
0004fb 01de     +MOVW R26 , R28
0004fc 58ab     +SUBI R26 , LOW ( - 117 )
0004fd 4fbf     +SBCI R27 , HIGH ( - 117 )
0004fe 93ed     +ST X + , R30
0004ff 93fc     +ST X , R31
                 	__PUTW1SX 117
                 ; 0000 009E         if(t<11 & t>0 ) //¼ýÀÚ°¡ ´­¸®¸é »õ·Î¿î °ªÀ» ÀúÀåÇÏµµ·Ï count°ª ¼³Á¤
000500 940e 09e3 	CALL SUBOPT_0xF
000502 e0eb      	LDI  R30,LOW(11)
000503 e0f0      	LDI  R31,HIGH(11)
000504 940e 0b41 	CALL __LTW12
000506 2e1e      	MOV  R1,R30
000507 940e 09e3 	CALL SUBOPT_0xF
000509 e0e0      	LDI  R30,LOW(0)
00050a e0f0      	LDI  R31,HIGH(0)
00050b 940e 0b47 	CALL __GTW12
00050d 21e1      	AND  R30,R1
00050e f029      	BREQ _0xA6
                 ; 0000 009F             {
                 ; 0000 00A0                 count++;
00050f 940e 09ea 	CALL SUBOPT_0x10
                 ; 0000 00A1                 delay_ms(50);
000511 940e 09f3 	CALL SUBOPT_0x11
                 ; 0000 00A2             }
                 ; 0000 00A3         else if(t==0 & zero_flag) //zero_flag°¡ ½ÇÇàµÈ °æ¿ì¿¡¸¸ 0À¸·Î ÀÔ·Â
000513 c028      	RJMP _0xA7
                 _0xA6:
000514 940e 09e3 	CALL SUBOPT_0xF
000516 e0e0      	LDI  R30,LOW(0)
000517 e0f0      	LDI  R31,HIGH(0)
000518 940e 0b3b 	CALL __EQW12
00051a 21e5      	AND  R30,R5
00051b f031      	BREQ _0xA8
                 ; 0000 00A4             {
                 ; 0000 00A5                 count++;
00051c 940e 09ea 	CALL SUBOPT_0x10
                 ; 0000 00A6                 zero_flag =0; //°è¼Ó 0À¸·Î ÀÔ·ÂµÈ »óÅÂ°¡ ¾ÈµÇ°Ô zero_flag¸¦ ´Ù½Ã 0À¸·Î
00051e 2455      	CLR  R5
                 ; 0000 00A7                 delay_ms(50);
00051f 940e 09f3 	CALL SUBOPT_0x11
                 ; 0000 00A8             }
                 ; 0000 00A9         else if(t==13) // FND Ãâ·Â¼ýÀÚ ¸®¼Â¹öÆ° ±â´É
000521 c01a      	RJMP _0xA9
                 _0xA8:
000522 940e 09e3 	CALL SUBOPT_0xF
000524 971d      	SBIW R26,13
000525 f481      	BRNE _0xAA
                 ; 0000 00AA             {
                 ; 0000 00AB                 fnd[0]=0,fnd[1]=0,fnd[2]=0,fnd[3]=0;
000526 940e 09f6 	CALL SUBOPT_0x12
000528 940e 09fd 	CALL SUBOPT_0x13
00052a e0e0      	LDI  R30,LOW(0)
                +
00052b 01de     +MOVW R26 , R28
00052c 5aa3     +SUBI R26 , LOW ( - 93 )
00052d 4fbf     +SBCI R27 , HIGH ( - 93 )
00052e 93ed     +ST X + , R30
00052f 93ec     +ST X , R30
                 	__CLRW1SX 93
                +
000530 01de     +MOVW R26 , R28
000531 5aa1     +SUBI R26 , LOW ( - 95 )
000532 4fbf     +SBCI R27 , HIGH ( - 95 )
000533 93ed     +ST X + , R30
000534 93ec     +ST X , R30
                 	__CLRW1SX 95
                 ; 0000 00AC             }
                 ; 0000 00AD         else if (t ==14)
000535 c006      	RJMP _0xAB
                 _0xAA:
000536 940e 09e3 	CALL SUBOPT_0xF
000538 971e      	SBIW R26,14
000539 f411      	BRNE _0xAC
                 ; 0000 00AE             {
                 ; 0000 00AF                STATE = START;
00053a 940e 0a04 	CALL SUBOPT_0x14
                 ; 0000 00B0             }
                 ; 0000 00B1 
                 ; 0000 00B2         if((count%2) ==0){ //count°¡ Â¦¼öÀÏ¶§ µé¾î¿Â t°ªÀ» ÀúÀåÇÏ°í
                 _0xAC:
                 _0xAB:
                 _0xA9:
                 _0xA7:
                +
00053c 01de     +MOVW R26 , R28
00053d 58ad     +SUBI R26 , LOW ( - 115 )
00053e 4fbf     +SBCI R27 , HIGH ( - 115 )
00053f 900d     +LD R0 , X +
000540 91bc     +LD R27 , X
000541 2da0     +MOV R26 , R0
                 	__GETW2SX 115
000542 e0e2      	LDI  R30,LOW(2)
000543 e0f0      	LDI  R31,HIGH(2)
000544 940e 0b75 	CALL __MODW21
000546 9730      	SBIW R30,0
000547 f5e1      	BRNE _0xAD
                 ; 0000 00B3                             //´Ù½Ã count¸¦ È¦¼ö·Î ¸¸µë
                 ; 0000 00B4             for(i=11;i>0;i--) {
000548 e0eb      	LDI  R30,LOW(11)
000549 e0f0      	LDI  R31,HIGH(11)
                +
00054a 01de     +MOVW R26 , R28
00054b 5aaf     +SUBI R26 , LOW ( - 81 )
00054c 4fbf     +SBCI R27 , HIGH ( - 81 )
00054d 93ed     +ST X + , R30
00054e 93fc     +ST X , R31
                 	__PUTW1SX 81
                 _0xAF:
00054f 940e 0a0a 	CALL SUBOPT_0x15
000551 940e 0ba5 	CALL __CPW02
000553 f52c      	BRGE _0xB0
                 ; 0000 00B5                 fnd[i] = fnd[i-1];
000554 940e 0a11 	CALL SUBOPT_0x16
000556 01de      	MOVW R26,R28
000557 5aa7      	SUBI R26,LOW(-(89))
000558 4fbf      	SBCI R27,HIGH(-(89))
000559 0fee      	LSL  R30
00055a 1fff      	ROL  R31
00055b 0fea      	ADD  R30,R26
00055c 1ffb      	ADC  R31,R27
00055d 01bf      	MOVW R22,R30
00055e 940e 0a11 	CALL SUBOPT_0x16
000560 9731      	SBIW R30,1
000561 01de      	MOVW R26,R28
000562 5aa7      	SUBI R26,LOW(-(89))
000563 4fbf      	SBCI R27,HIGH(-(89))
000564 0fee      	LSL  R30
000565 1fff      	ROL  R31
000566 0fae      	ADD  R26,R30
000567 1fbf      	ADC  R27,R31
000568 940e 0b91 	CALL __GETW1P
00056a 01db      	MOVW R26,R22
00056b 93ed      	ST   X+,R30
00056c 93fc      	ST   X,R31
                 ; 0000 00B6                 delay_us(10);
                +
00056d e381     +LDI R24 , LOW ( 49 )
                +__DELAY_USB_LOOP :
00056e 958a     +DEC R24
00056f f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 49
                 ; 0000 00B7             }
000570 01de      	MOVW R26,R28
000571 5aaf      	SUBI R26,LOW(-(81))
000572 4fbf      	SBCI R27,HIGH(-(81))
000573 91ed      	LD   R30,X+
000574 91fd      	LD   R31,X+
000575 9731      	SBIW R30,1
000576 93fe      	ST   -X,R31
000577 93ee      	ST   -X,R30
000578 cfd6      	RJMP _0xAF
                 _0xB0:
                 ; 0000 00B8             fnd[0] = t;
000579 940e 0a18 	CALL SUBOPT_0x17
                +
00057b 01de     +MOVW R26 , R28
00057c 5aa7     +SUBI R26 , LOW ( - 89 )
00057d 4fbf     +SBCI R27 , HIGH ( - 89 )
00057e 93ed     +ST X + , R30
00057f 93fc     +ST X , R31
                 	__PUTW1SX 89
                 ; 0000 00B9             count++;
000580 940e 09ea 	CALL SUBOPT_0x10
                 ; 0000 00BA             delay_ms(50);
000582 940e 09f3 	CALL SUBOPT_0x11
                 ; 0000 00BB         }
                 ; 0000 00BC         finalnum = 1000*fnd[3] + 100*fnd[2] + 10*fnd[1] + fnd[0];
                 _0xAD:
                +
000584 01fe     +MOVW R30 , R28
000585 5ae1     +SUBI R30 , LOW ( - 95 )
000586 4fff     +SBCI R31 , HIGH ( - 95 )
000587 9001     +LD R0 , Z +
000588 81f0     +LD R31 , Z
000589 2de0     +MOV R30 , R0
                 	__GETW1SX 95
00058a eea8      	LDI  R26,LOW(1000)
00058b e0b3      	LDI  R27,HIGH(1000)
00058c 940e 0b55 	CALL __MULW12
00058e 01bf      	MOVW R22,R30
                +
00058f 01fe     +MOVW R30 , R28
000590 5ae3     +SUBI R30 , LOW ( - 93 )
000591 4fff     +SBCI R31 , HIGH ( - 93 )
000592 9001     +LD R0 , Z +
000593 81f0     +LD R31 , Z
000594 2de0     +MOV R30 , R0
                 	__GETW1SX 93
000595 e6a4      	LDI  R26,LOW(100)
000596 e0b0      	LDI  R27,HIGH(100)
000597 940e 0b55 	CALL __MULW12
                +
000599 0f6e     +ADD R22 , R30
00059a 1f7f     +ADC R23 , R31
                 	__ADDWRR 22,23,30,31
00059b 940e 0a1f 	CALL SUBOPT_0x18
00059d e0aa      	LDI  R26,LOW(10)
00059e e0b0      	LDI  R27,HIGH(10)
00059f 940e 0b55 	CALL __MULW12
0005a1 0fe6      	ADD  R30,R22
0005a2 1ff7      	ADC  R31,R23
0005a3 940e 0a26 	CALL SUBOPT_0x19
0005a5 0fea      	ADD  R30,R26
0005a6 1ffb      	ADC  R31,R27
                +
0005a7 01de     +MOVW R26 , R28
0005a8 58af     +SUBI R26 , LOW ( - 113 )
0005a9 4fbf     +SBCI R27 , HIGH ( - 113 )
0005aa 93ed     +ST X + , R30
0005ab 93fc     +ST X , R31
                 	__PUTW1SX 113
                 ; 0000 00BD         OUTFND(finalnum); //FND Ãâ·Â
0005ac 93fa      	ST   -Y,R31
0005ad 93ea      	ST   -Y,R30
0005ae de24      	RCALL _OUTFND
                 ; 0000 00BE         buzzer_play_function(t); //¼ýÀÚ¿¡ ¸Â´Â À½ Ãâ·Â
0005af 940e 0a18 	CALL SUBOPT_0x17
0005b1 93fa      	ST   -Y,R31
0005b2 93ea      	ST   -Y,R30
0005b3 de63      	RCALL _buzzer_play_function
                 ; 0000 00BF 
                 ; 0000 00C0 
                 ; 0000 00C1 
                 ; 0000 00C2 
                 ; 0000 00C3 
                 ; 0000 00C4 
                 ; 0000 00C5         if ( (user_state[0] == 'O') && (empty_cnt[0] >= 15 )){
0005b4 940e 0a2d 	CALL SUBOPT_0x1A
0005b6 34af      	CPI  R26,LOW(0x4F)
0005b7 f419      	BRNE _0xB2
0005b8 81a8      	LD   R26,Y
0005b9 30af      	CPI  R26,LOW(0xF)
0005ba f408      	BRSH _0xB3
                 _0xB2:
0005bb c005      	RJMP _0xB1
                 _0xB3:
                 ; 0000 00C6             user_state[0] == 'E';
0005bc 940e 0a2d 	CALL SUBOPT_0x1A
0005be e4e5      	LDI  R30,LOW(69)
0005bf 940e 0b36 	CALL __EQB12
                 ; 0000 00C7         }
                 ; 0000 00C8 
                 ; 0000 00C9 
                 ; 0000 00CA 
                 ; 0000 00CB         switch (STATE) {  //LCDÃ³
                 _0xB1:
                +
0005c1 01fe     +MOVW R30 , R28
0005c2 5aea     +SUBI R30 , LOW ( - 86 )
0005c3 4fff     +SBCI R31 , HIGH ( - 86 )
0005c4 81e0     +LD R30 , Z
                 	__GETB1SX 86
0005c5 e0f0      	LDI  R31,0
                 ; 0000 00CC 
                 ; 0000 00CD             case NONE: //±âº» »óÅÂ
0005c6 9730      	SBIW R30,0
0005c7 f011      	BREQ PC+3
0005c8 940c 0610 	JMP _0xB7
                 ; 0000 00CE                 if (fnd[1] <=3 && fnd[1] >0 && fnd[0] == 10) {
0005ca 940e 0a32 	CALL SUBOPT_0x1B
0005cc 9714      	SBIW R26,4
0005cd f44c      	BRGE _0xB9
0005ce 940e 0a32 	CALL SUBOPT_0x1B
0005d0 940e 0ba5 	CALL __CPW02
0005d2 f424      	BRGE _0xB9
0005d3 940e 0a26 	CALL SUBOPT_0x19
0005d5 971a      	SBIW R26,10
0005d6 f009      	BREQ _0xBA
                 _0xB9:
0005d7 c007      	RJMP _0xB8
                 _0xBA:
                 ; 0000 00CF                     user_name = fnd[1]-1;
0005d8 940e 0a1f 	CALL SUBOPT_0x18
0005da 9731      	SBIW R30,1
0005db a3ec      	STD  Y+36,R30
                 ; 0000 00D0                     STATE=INPUT_PHONE_INIT ;
0005dc e0e3      	LDI  R30,LOW(3)
0005dd 940e 0a39 	CALL SUBOPT_0x1C
                 ; 0000 00D1                 }
                 ; 0000 00D2                 if (fnd[1]==4 && fnd[0] == 10) { //Å»Ãâ ¸ðµå
                 _0xB8:
0005df 940e 0a32 	CALL SUBOPT_0x1B
0005e1 9714      	SBIW R26,4
0005e2 f421      	BRNE _0xBC
0005e3 940e 0a26 	CALL SUBOPT_0x19
0005e5 971a      	SBIW R26,10
0005e6 f009      	BREQ _0xBD
                 _0xBC:
0005e7 c027      	RJMP _0xBB
                 _0xBD:
                 ; 0000 00D3                     LCD_Clear();
0005e8 940e 0a3e 	CALL SUBOPT_0x1D
                 ; 0000 00D4                     LCD_Pos(0,0);
                 ; 0000 00D5                     LCD_Str("Choose Seat");
                +
0005ea e1e5     +LDI R30 , LOW ( _0xBE + ( 0 ) )
0005eb e0f5     +LDI R31 , HIGH ( _0xBE + ( 0 ) )
                 	__POINTW1MN _0xBE,0
0005ec 940e 0a45 	CALL SUBOPT_0x1E
                 ; 0000 00D6                     LCD_Pos(1,0);
0005ee 940e 0a49 	CALL SUBOPT_0x1F
                 ; 0000 00D7                     if (user_state[0] == 'O') LCD_Str("1  ");
0005f0 940e 0a2d 	CALL SUBOPT_0x1A
0005f2 34af      	CPI  R26,LOW(0x4F)
0005f3 f421      	BRNE _0xBF
                +
0005f4 e2e1     +LDI R30 , LOW ( _0xBE + ( 12 ) )
0005f5 e0f5     +LDI R31 , HIGH ( _0xBE + ( 12 ) )
                 	__POINTW1MN _0xBE,12
0005f6 940e 0a45 	CALL SUBOPT_0x1E
                 ; 0000 00D8                     if (user_state[1] == 'O') LCD_Str("2  ");
                 _0xBF:
                +
0005f8 01de     +MOVW R26 , R28
0005f9 5aac     +SUBI R26 , LOW ( - 84 )
0005fa 4fbf     +SBCI R27 , HIGH ( - 84 )
0005fb 91ac     +LD R26 , X
                 	__GETB2SX 84
0005fc 34af      	CPI  R26,LOW(0x4F)
0005fd f421      	BRNE _0xC0
                +
0005fe e2e5     +LDI R30 , LOW ( _0xBE + ( 16 ) )
0005ff e0f5     +LDI R31 , HIGH ( _0xBE + ( 16 ) )
                 	__POINTW1MN _0xBE,16
000600 940e 0a45 	CALL SUBOPT_0x1E
                 ; 0000 00D9                     if (user_state[2] == 'O') LCD_Str("3  ");
                 _0xC0:
                +
000602 01de     +MOVW R26 , R28
000603 5aab     +SUBI R26 , LOW ( - 85 )
000604 4fbf     +SBCI R27 , HIGH ( - 85 )
000605 91ac     +LD R26 , X
                 	__GETB2SX 85
000606 34af      	CPI  R26,LOW(0x4F)
000607 f421      	BRNE _0xC1
                +
000608 e2e9     +LDI R30 , LOW ( _0xBE + ( 20 ) )
000609 e0f5     +LDI R31 , HIGH ( _0xBE + ( 20 ) )
                 	__POINTW1MN _0xBE,20
00060a 940e 0a45 	CALL SUBOPT_0x1E
                 ; 0000 00DA                     STATE=EXIT_CHOOSE ;
                 _0xC1:
00060c e0e6      	LDI  R30,LOW(6)
00060d 940e 0a39 	CALL SUBOPT_0x1C
                 ; 0000 00DB                 }
                 ; 0000 00DC                 break;
                 _0xBB:
00060f c1b8      	RJMP _0xB6
                 ; 0000 00DD 
                 ; 0000 00DE             case START: //¾÷·Îµå
                 _0xB7:
000610 30e1      	CPI  R30,LOW(0x1)
000611 e0a0      	LDI  R26,HIGH(0x1)
000612 07fa      	CPC  R31,R26
000613 f581      	BRNE _0xC2
                 ; 0000 00DF                 LCD_Pos(0,0);
000614 e0e0      	LDI  R30,LOW(0)
000615 93ea      	ST   -Y,R30
000616 93ea      	ST   -Y,R30
000617 db7e      	RCALL _LCD_Pos
                 ; 0000 00E0                 LCD_Str("StudyRoom  4:OUT");
                +
000618 e2ed     +LDI R30 , LOW ( _0xBE + ( 24 ) )
000619 e0f5     +LDI R31 , HIGH ( _0xBE + ( 24 ) )
                 	__POINTW1MN _0xBE,24
00061a 940e 0a45 	CALL SUBOPT_0x1E
                 ; 0000 00E1                 sprintf(Message, "1:%c 2:%c 3:%c", user_state[0],user_state[1],user_state[2]);
00061c 01fe      	MOVW R30,R28
00061d 58e7      	SUBI R30,LOW(-(121))
00061e 4fff      	SBCI R31,HIGH(-(121))
00061f 93fa      	ST   -Y,R31
000620 93ea      	ST   -Y,R30
                +
000621 e9ea     +LDI R30 , LOW ( 2 * _0x0 + ( 62 ) )
000622 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 62 ) )
                 	__POINTW1FN _0x0,62
000623 93fa      	ST   -Y,R31
000624 93ea      	ST   -Y,R30
                +
000625 01fe     +MOVW R30 , R28
000626 5ae9     +SUBI R30 , LOW ( - 87 )
000627 4fff     +SBCI R31 , HIGH ( - 87 )
000628 81e0     +LD R30 , Z
                 	__GETB1SX 87
000629 940e 0a4f 	CALL SUBOPT_0x20
                +
00062b 01fe     +MOVW R30 , R28
00062c 5ae4     +SUBI R30 , LOW ( - 92 )
00062d 4fff     +SBCI R31 , HIGH ( - 92 )
00062e 81e0     +LD R30 , Z
                 	__GETB1SX 92
00062f 940e 0a4f 	CALL SUBOPT_0x20
                +
000631 01fe     +MOVW R30 , R28
000632 59ef     +SUBI R30 , LOW ( - 97 )
000633 4fff     +SBCI R31 , HIGH ( - 97 )
000634 81e0     +LD R30 , Z
                 	__GETB1SX 97
000635 940e 0a4f 	CALL SUBOPT_0x20
000637 e08c      	LDI  R24,12
000638 940e 0937 	CALL _sprintf
00063a 9660      	ADIW R28,16
                 ; 0000 00E2                 LCD_Pos(1,0);
00063b 940e 0a49 	CALL SUBOPT_0x1F
                 ; 0000 00E3                 LCD_Str(Message);
00063d 01fe      	MOVW R30,R28
00063e 58e7      	SUBI R30,LOW(-(121))
00063f 4fff      	SBCI R31,HIGH(-(121))
000640 940e 0a45 	CALL SUBOPT_0x1E
                 ; 0000 00E4                 STATE = NONE;
000642 e0e0      	LDI  R30,LOW(0)
000643 c180      	RJMP _0xF3
                 ; 0000 00E5                 break;
                 ; 0000 00E6 
                 ; 0000 00E7             case INPUT_PHONE: //ÀÔÀå : Æù¹øÈ£ ÀÔ·Â
                 _0xC2:
000644 30e2      	CPI  R30,LOW(0x2)
000645 e0a0      	LDI  R26,HIGH(0x2)
000646 07fa      	CPC  R31,R26
000647 f5e1      	BRNE _0xC3
                 ; 0000 00E8 
                 ; 0000 00E9                 if (fnd[0] == 10){
000648 940e 0a26 	CALL SUBOPT_0x19
00064a 971a      	SBIW R26,10
00064b f599      	BRNE _0xC4
                 ; 0000 00EA                     sprintf(user_pnumber[user_name], "%d%d%d%d%d%d%d%d%d%d%d", fnd[11],fnd[10],fnd[9],fnd[8],fnd[7],fnd[6],fnd[5],fnd[4],fnd[3],fnd[2],fnd[1]);
00064c 940e 0a55 	CALL SUBOPT_0x21
00064e 940e 0a5a 	CALL SUBOPT_0x22
000650 940e 0a5f 	CALL SUBOPT_0x23
                 ; 0000 00EB                     user_state[user_name] ='X';
000652 940e 0ad3 	CALL SUBOPT_0x24
000654 e5e8      	LDI  R30,LOW(88)
000655 93ec      	ST   X,R30
                 ; 0000 00EC                     for(i=0;i<11;i++){
000656 e0e0      	LDI  R30,LOW(0)
                +
000657 01de     +MOVW R26 , R28
000658 5aaf     +SUBI R26 , LOW ( - 81 )
000659 4fbf     +SBCI R27 , HIGH ( - 81 )
00065a 93ed     +ST X + , R30
00065b 93ec     +ST X , R30
                 	__CLRW1SX 81
                 _0xC6:
00065c 940e 0a0a 	CALL SUBOPT_0x15
00065e 971b      	SBIW R26,11
00065f f4e4      	BRGE _0xC7
                 ; 0000 00ED                         num[user_name][i] = user_pnumber[user_name][i];
000660 940e 0a55 	CALL SUBOPT_0x21
000662 01cf      	MOVW R24,R30
000663 01de      	MOVW R26,R28
000664 9613      	ADIW R26,3
000665 0fea      	ADD  R30,R26
000666 1ffb      	ADC  R31,R27
000667 940e 0a0a 	CALL SUBOPT_0x15
000669 0fea      	ADD  R30,R26
00066a 1ffb      	ADC  R31,R27
00066b 01bf      	MOVW R22,R30
00066c 01fc      	MOVW R30,R24
00066d 940e 0a5a 	CALL SUBOPT_0x22
00066f 940e 0a0a 	CALL SUBOPT_0x15
000671 0fae      	ADD  R26,R30
000672 1fbf      	ADC  R27,R31
000673 91ec      	LD   R30,X
000674 01db      	MOVW R26,R22
000675 93ec      	ST   X,R30
                 ; 0000 00EE                     }
000676 01de      	MOVW R26,R28
000677 5aaf      	SUBI R26,LOW(-(81))
000678 4fbf      	SBCI R27,HIGH(-(81))
000679 940e 0adb 	CALL SUBOPT_0x25
00067b cfe0      	RJMP _0xC6
                 _0xC7:
                 ; 0000 00EF                     STATE = CHECK_PNUM_INIT;
00067c e0e5      	LDI  R30,LOW(5)
00067d 940e 0a39 	CALL SUBOPT_0x1C
                 ; 0000 00F0                 }
                 ; 0000 00F1                 delay_ms(10);
                 _0xC4:
00067f e0ea      	LDI  R30,LOW(10)
000680 e0f0      	LDI  R31,HIGH(10)
000681 940e 0998 	CALL SUBOPT_0x2
                 ; 0000 00F2                 break;
000683 c144      	RJMP _0xB6
                 ; 0000 00F3 
                 ; 0000 00F4             case INPUT_PHONE_INIT:
                 _0xC3:
000684 30e3      	CPI  R30,LOW(0x3)
000685 e0a0      	LDI  R26,HIGH(0x3)
000686 07fa      	CPC  R31,R26
000687 f4d9      	BRNE _0xC8
                 ; 0000 00F5                 fnd[0]=0;
000688 940e 09f6 	CALL SUBOPT_0x12
                 ; 0000 00F6                 LCD_Clear();
00068a 940e 0a3e 	CALL SUBOPT_0x1D
                 ; 0000 00F7                 LCD_Pos(0,0);
                 ; 0000 00F8                 LCD_Str("Input PhoneNum") ;
                +
00068c e3ee     +LDI R30 , LOW ( _0xBE + ( 41 ) )
00068d e0f5     +LDI R31 , HIGH ( _0xBE + ( 41 ) )
                 	__POINTW1MN _0xBE,41
00068e 940e 0a45 	CALL SUBOPT_0x1E
                 ; 0000 00F9                 STATE = INPUT_PHONE;
000690 e0e2      	LDI  R30,LOW(2)
000691 940e 0a39 	CALL SUBOPT_0x1C
                 ; 0000 00FA 
                 ; 0000 00FB                 if (user_state[user_name] == 'O'){
000693 940e 0ad3 	CALL SUBOPT_0x24
000695 91ac      	LD   R26,X
000696 34af      	CPI  R26,LOW(0x4F)
000697 f451      	BRNE _0xC9
                 ; 0000 00FC                     LCD_Clear();
000698 940e 0a3e 	CALL SUBOPT_0x1D
                 ; 0000 00FD                     LCD_Pos(0,0);
                 ; 0000 00FE                     LCD_Str("Someone Used");
                +
00069a e4ed     +LDI R30 , LOW ( _0xBE + ( 56 ) )
00069b e0f5     +LDI R31 , HIGH ( _0xBE + ( 56 ) )
                 	__POINTW1MN _0xBE,56
00069c 940e 0a45 	CALL SUBOPT_0x1E
                 ; 0000 00FF                     delay_ms(1000);
00069e 940e 09da 	CALL SUBOPT_0xD
                 ; 0000 0100                     STATE = START;
0006a0 940e 0a04 	CALL SUBOPT_0x14
                 ; 0000 0101                 }
                 ; 0000 0102 
                 ; 0000 0103                 break;
                 _0xC9:
0006a2 c125      	RJMP _0xB6
                 ; 0000 0104             case CHECK_PNUM:
                 _0xC8:
0006a3 30e4      	CPI  R30,LOW(0x4)
0006a4 e0a0      	LDI  R26,HIGH(0x4)
0006a5 07fa      	CPC  R31,R26
0006a6 f509      	BRNE _0xCA
                 ; 0000 0105 
                 ; 0000 0106                 if (fnd[1] == 1 && fnd[0] == 10){
0006a7 940e 0a32 	CALL SUBOPT_0x1B
0006a9 9711      	SBIW R26,1
0006aa f421      	BRNE _0xCC
0006ab 940e 0a26 	CALL SUBOPT_0x19
0006ad 971a      	SBIW R26,10
0006ae f009      	BREQ _0xCD
                 _0xCC:
0006af c00b      	RJMP _0xCB
                 _0xCD:
                 ; 0000 0107                     user_state[user_name] = 'O';
0006b0 940e 0ad3 	CALL SUBOPT_0x24
0006b2 e4ef      	LDI  R30,LOW(79)
0006b3 93ec      	ST   X,R30
                 ; 0000 0108                     /*OCR1A = 3000;
                 ; 0000 0109                     LCD_Clear();
                 ; 0000 010A                     LCD_Pos(0,0);
                 ; 0000 010B                     LCD_Str("Door Open") ;
                 ; 0000 010C                     delay_ms(5000);
                 ; 0000 010D                     OCR1A = 4710;*/
                 ; 0000 010E                     STATE = START;
0006b4 940e 0a04 	CALL SUBOPT_0x14
                 ; 0000 010F                     fnd[0]=0;
0006b6 940e 09f6 	CALL SUBOPT_0x12
                 ; 0000 0110                     user_name = 4;
0006b8 e0e4      	LDI  R30,LOW(4)
0006b9 a3ec      	STD  Y+36,R30
                 ; 0000 0111                 }
                 ; 0000 0112                 else if (fnd[1] == 2 && fnd[0] == 10) STATE = INPUT_PHONE_INIT;
0006ba c00c      	RJMP _0xCE
                 _0xCB:
0006bb 940e 0a32 	CALL SUBOPT_0x1B
0006bd 9712      	SBIW R26,2
0006be f421      	BRNE _0xD0
0006bf 940e 0a26 	CALL SUBOPT_0x19
0006c1 971a      	SBIW R26,10
0006c2 f009      	BREQ _0xD1
                 _0xD0:
0006c3 c003      	RJMP _0xCF
                 _0xD1:
0006c4 e0e3      	LDI  R30,LOW(3)
0006c5 940e 0a39 	CALL SUBOPT_0x1C
                 ; 0000 0113             break;
                 _0xCF:
                 _0xCE:
0006c7 c100      	RJMP _0xB6
                 ; 0000 0114             case CHECK_PNUM_INIT:
                 _0xCA:
0006c8 30e5      	CPI  R30,LOW(0x5)
0006c9 e0a0      	LDI  R26,HIGH(0x5)
0006ca 07fa      	CPC  R31,R26
0006cb f4a1      	BRNE _0xD2
                 ; 0000 0115                 fnd[0]=0;
0006cc 940e 09f6 	CALL SUBOPT_0x12
                 ; 0000 0116                 LCD_Clear();
0006ce 940e 0a3e 	CALL SUBOPT_0x1D
                 ; 0000 0117                 LCD_Pos(0,0);
                 ; 0000 0118                 LCD_Str(user_pnumber[user_name]);
0006d0 940e 0a55 	CALL SUBOPT_0x21
0006d2 940e 0a5a 	CALL SUBOPT_0x22
0006d4 940e 0a45 	CALL SUBOPT_0x1E
                 ; 0000 0119                 LCD_Pos(1,0);
0006d6 940e 0a49 	CALL SUBOPT_0x1F
                 ; 0000 011A                 LCD_Str("1:Yes  2:No");
                +
0006d8 e5ea     +LDI R30 , LOW ( _0xBE + ( 69 ) )
0006d9 e0f5     +LDI R31 , HIGH ( _0xBE + ( 69 ) )
                 	__POINTW1MN _0xBE,69
0006da 940e 0a45 	CALL SUBOPT_0x1E
                 ; 0000 011B                 fnd[1] = 0;
0006dc 940e 09fd 	CALL SUBOPT_0x13
                 ; 0000 011C                 STATE = CHECK_PNUM;
0006de e0e4      	LDI  R30,LOW(4)
0006df c0e4      	RJMP _0xF3
                 ; 0000 011D             break;
                 ; 0000 011E 
                 ; 0000 011F             case EXIT_CHOOSE:  //ÅðÀå ¹øÈ£ ¼±
                 _0xD2:
0006e0 30e6      	CPI  R30,LOW(0x6)
0006e1 e0a0      	LDI  R26,HIGH(0x6)
0006e2 07fa      	CPC  R31,R26
0006e3 f539      	BRNE _0xD3
                 ; 0000 0120 
                 ; 0000 0121                 user_name = fnd[1]-1;
0006e4 940e 0a1f 	CALL SUBOPT_0x18
0006e6 9731      	SBIW R30,1
0006e7 a3ec      	STD  Y+36,R30
                 ; 0000 0122                 if (fnd[1] <=3 && fnd[1] >0 && fnd[0] == 10){
0006e8 940e 0a32 	CALL SUBOPT_0x1B
0006ea 9714      	SBIW R26,4
0006eb f44c      	BRGE _0xD5
0006ec 940e 0a32 	CALL SUBOPT_0x1B
0006ee 940e 0ba5 	CALL __CPW02
0006f0 f424      	BRGE _0xD5
0006f1 940e 0a26 	CALL SUBOPT_0x19
0006f3 971a      	SBIW R26,10
0006f4 f009      	BREQ _0xD6
                 _0xD5:
0006f5 c014      	RJMP _0xD4
                 _0xD6:
                 ; 0000 0123 
                 ; 0000 0124                     STATE = INPUT_PHONE_OUT_INIT;
0006f6 e0ea      	LDI  R30,LOW(10)
0006f7 940e 0a39 	CALL SUBOPT_0x1C
                 ; 0000 0125 
                 ; 0000 0126                     if (user_state[user_name] == 'X'){
0006f9 940e 0ad3 	CALL SUBOPT_0x24
0006fb 91ac      	LD   R26,X
0006fc 35a8      	CPI  R26,LOW(0x58)
0006fd f461      	BRNE _0xD7
                 ; 0000 0127                         LCD_Clear();
0006fe 940e 0a3e 	CALL SUBOPT_0x1D
                 ; 0000 0128                         LCD_Pos(0,0);
                 ; 0000 0129                         LCD_Str("Empty Seat");
                +
000700 e6e6     +LDI R30 , LOW ( _0xBE + ( 81 ) )
000701 e0f5     +LDI R31 , HIGH ( _0xBE + ( 81 ) )
                 	__POINTW1MN _0xBE,81
000702 940e 0a45 	CALL SUBOPT_0x1E
                 ; 0000 012A                         delay_ms(1000);
000704 940e 09da 	CALL SUBOPT_0xD
                 ; 0000 012B                         fnd[0]=0;
000706 940e 09f6 	CALL SUBOPT_0x12
                 ; 0000 012C                         STATE = START;
000708 940e 0a04 	CALL SUBOPT_0x14
                 ; 0000 012D                     }
                 ; 0000 012E                 }
                 _0xD7:
                 ; 0000 012F 
                 ; 0000 0130 
                 ; 0000 0131 
                 ; 0000 0132             break;
                 _0xD4:
00070a c0bd      	RJMP _0xB6
                 ; 0000 0133              case CHECK_PNUM_OUT_INIT:
                 _0xD3:
00070b 30e8      	CPI  R30,LOW(0x8)
00070c e0a0      	LDI  R26,HIGH(0x8)
00070d 07fa      	CPC  R31,R26
00070e f491      	BRNE _0xD8
                 ; 0000 0134                  fnd[0]=0;
00070f 940e 09f6 	CALL SUBOPT_0x12
                 ; 0000 0135                  fnd[1] = 0;
000711 940e 09fd 	CALL SUBOPT_0x13
                 ; 0000 0136                  LCD_Clear();
000713 940e 0a3e 	CALL SUBOPT_0x1D
                 ; 0000 0137                  LCD_Pos(0,0);
                 ; 0000 0138                  LCD_Str(check_pnumber);
000715 01fe      	MOVW R30,R28
000716 96b5      	ADIW R30,37
000717 940e 0a45 	CALL SUBOPT_0x1E
                 ; 0000 0139                  LCD_Pos(1,0);
000719 940e 0a49 	CALL SUBOPT_0x1F
                 ; 0000 013A 
                 ; 0000 013B                  LCD_Str("1:Yes  2:No");
                +
00071b e7e1     +LDI R30 , LOW ( _0xBE + ( 92 ) )
00071c e0f5     +LDI R31 , HIGH ( _0xBE + ( 92 ) )
                 	__POINTW1MN _0xBE,92
00071d 940e 0a45 	CALL SUBOPT_0x1E
                 ; 0000 013C                  STATE = CHECK_PNUM_OUT;
00071f e0e7      	LDI  R30,LOW(7)
000720 c0a3      	RJMP _0xF3
                 ; 0000 013D 
                 ; 0000 013E 
                 ; 0000 013F             break;
                 ; 0000 0140             case CHECK_PNUM_OUT:   //ºñ¹Ð¹øÈ£ ÀÏÄ¡½Ã Å»Ãâ
                 _0xD8:
000721 30e7      	CPI  R30,LOW(0x7)
000722 e0a0      	LDI  R26,HIGH(0x7)
000723 07fa      	CPC  R31,R26
000724 f011      	BREQ PC+3
000725 940c 07a3 	JMP _0xD9
                 ; 0000 0141 
                 ; 0000 0142                  if (fnd[1] == 1 && fnd[0] == 10){
000727 940e 0a32 	CALL SUBOPT_0x1B
000729 9711      	SBIW R26,1
00072a f421      	BRNE _0xDB
00072b 940e 0a26 	CALL SUBOPT_0x19
00072d 971a      	SBIW R26,10
00072e f009      	BREQ _0xDC
                 _0xDB:
00072f c066      	RJMP _0xDA
                 _0xDC:
                 ; 0000 0143                    int cnt=0;
                 ; 0000 0144                    for(i=0;i<11;i++){
000730 9722      	SBIW R28,2
000731 e0e0      	LDI  R30,LOW(0)
000732 83e8      	ST   Y,R30
000733 83e9      	STD  Y+1,R30
                 ;	Sonar_range_3 -> Y+163
                 ;	Message -> Y+123
                 ;	readCnt -> Y+121
                 ;	t -> Y+119
                 ;	count -> Y+117
                 ;	finalnum -> Y+115
                 ;	fnd -> Y+91
                 ;	angle -> Y+89
                 ;	STATE -> Y+88
                 ;	user_state -> Y+85
                 ;	i -> Y+83
                 ;	user_pnumber -> Y+50
                 ;	check_pnumber -> Y+39
                 ;	user_name -> Y+38
                 ;	num -> Y+5
                 ;	empty_cnt -> Y+2
                 ;	cnt -> Y+0
                +
000734 01de     +MOVW R26 , R28
000735 5aad     +SUBI R26 , LOW ( - 83 )
000736 4fbf     +SBCI R27 , HIGH ( - 83 )
000737 93ed     +ST X + , R30
000738 93ec     +ST X , R30
                 	__CLRW1SX 83
                 _0xDE:
000739 940e 0ae1 	CALL SUBOPT_0x26
00073b 971b      	SBIW R26,11
00073c f52c      	BRGE _0xDF
                 ; 0000 0145                       if(num[user_name][i] == check_pnumber[i] ) cnt ++;  }
00073d a1ee      	LDD  R30,Y+38
00073e e0ab      	LDI  R26,LOW(11)
00073f 9fea      	MUL  R30,R26
000740 01f0      	MOVW R30,R0
000741 01de      	MOVW R26,R28
000742 9615      	ADIW R26,5
000743 0fea      	ADD  R30,R26
000744 1ffb      	ADC  R31,R27
000745 940e 0ae1 	CALL SUBOPT_0x26
000747 0fae      	ADD  R26,R30
000748 1fbf      	ADC  R27,R31
000749 901c      	LD   R1,X
                +
00074a 01fe     +MOVW R30 , R28
00074b 5aed     +SUBI R30 , LOW ( - 83 )
00074c 4fff     +SBCI R31 , HIGH ( - 83 )
00074d 9001     +LD R0 , Z +
00074e 81f0     +LD R31 , Z
00074f 2de0     +MOV R30 , R0
                 	__GETW1SX 83
000750 01de      	MOVW R26,R28
000751 9697      	ADIW R26,39
000752 0fae      	ADD  R26,R30
000753 1fbf      	ADC  R27,R31
000754 91ec      	LD   R30,X
000755 15e1      	CP   R30,R1
000756 f429      	BRNE _0xE0
000757 81e8      	LD   R30,Y
000758 81f9      	LDD  R31,Y+1
000759 9631      	ADIW R30,1
00075a 83e8      	ST   Y,R30
00075b 83f9      	STD  Y+1,R31
                 _0xE0:
00075c 01de      	MOVW R26,R28
00075d 5aad      	SUBI R26,LOW(-(83))
00075e 4fbf      	SBCI R27,HIGH(-(83))
00075f 940e 0adb 	CALL SUBOPT_0x25
000761 cfd7      	RJMP _0xDE
                 _0xDF:
                 ; 0000 0146 
                 ; 0000 0147                     if (cnt == 11 ){  //ºñ¹Ð¹øÈ£ ÀÏÄ¡
000762 81a8      	LD   R26,Y
000763 81b9      	LDD  R27,Y+1
000764 971b      	SBIW R26,11
000765 f4e9      	BRNE _0xE1
                 ; 0000 0148                        LCD_Clear();
000766 940e 0a3e 	CALL SUBOPT_0x1D
                 ; 0000 0149                        LCD_Pos(0,0);
                 ; 0000 014A                        LCD_Str("User Check") ;
                +
000768 e7ed     +LDI R30 , LOW ( _0xBE + ( 104 ) )
000769 e0f5     +LDI R31 , HIGH ( _0xBE + ( 104 ) )
                 	__POINTW1MN _0xBE,104
00076a 940e 0a45 	CALL SUBOPT_0x1E
                 ; 0000 014B                        LCD_Pos(1,0);
00076c 940e 0a49 	CALL SUBOPT_0x1F
                 ; 0000 014C                        LCD_Str("Good Bye") ;
                +
00076e e8e8     +LDI R30 , LOW ( _0xBE + ( 115 ) )
00076f e0f5     +LDI R31 , HIGH ( _0xBE + ( 115 ) )
                 	__POINTW1MN _0xBE,115
000770 940e 0a45 	CALL SUBOPT_0x1E
                 ; 0000 014D                        /*OCR1A = 3000;
                 ; 0000 014E                         delay_ms(5000);
                 ; 0000 014F                         OCR1A = 4710;    */
                 ; 0000 0150                       user_state[user_name] ='X';
000772 a1ee      	LDD  R30,Y+38
000773 e0f0      	LDI  R31,0
000774 01de      	MOVW R26,R28
000775 5aab      	SUBI R26,LOW(-(85))
000776 4fbf      	SBCI R27,HIGH(-(85))
000777 0fae      	ADD  R26,R30
000778 1fbf      	ADC  R27,R31
000779 e5e8      	LDI  R30,LOW(88)
00077a 93ec      	ST   X,R30
                 ; 0000 0151                       STATE = START;
00077b e0e1      	LDI  R30,LOW(1)
                +
00077c 01de     +MOVW R26 , R28
00077d 5aa8     +SUBI R26 , LOW ( - 88 )
00077e 4fbf     +SBCI R27 , HIGH ( - 88 )
00077f 93ec     +ST X , R30
                 	__PUTB1SX 88
                 ; 0000 0152                       fnd[0] = 0;
000780 940e 09fd 	CALL SUBOPT_0x13
                 ; 0000 0153                     }
                 ; 0000 0154                     else{ //ºñ¹Ð¹øÈ£ ºÒÀÏÄ¡
000782 c011      	RJMP _0xE2
                 _0xE1:
                 ; 0000 0155                       LCD_Clear();
000783 940e 0a3e 	CALL SUBOPT_0x1D
                 ; 0000 0156                       LCD_Pos(0,0);
                 ; 0000 0157                       LCD_Str("Wrong Password") ;
                +
000785 e9e1     +LDI R30 , LOW ( _0xBE + ( 124 ) )
000786 e0f5     +LDI R31 , HIGH ( _0xBE + ( 124 ) )
                 	__POINTW1MN _0xBE,124
000787 940e 0a45 	CALL SUBOPT_0x1E
                 ; 0000 0158                       delay_ms(2000);
000789 ede0      	LDI  R30,LOW(2000)
00078a e0f7      	LDI  R31,HIGH(2000)
00078b 940e 0998 	CALL SUBOPT_0x2
                 ; 0000 0159                       fnd[0] = 0;
00078d 940e 09fd 	CALL SUBOPT_0x13
                 ; 0000 015A                       STATE = START;
00078f e0e1      	LDI  R30,LOW(1)
                +
000790 01de     +MOVW R26 , R28
000791 5aa8     +SUBI R26 , LOW ( - 88 )
000792 4fbf     +SBCI R27 , HIGH ( - 88 )
000793 93ec     +ST X , R30
                 	__PUTB1SX 88
                 ; 0000 015B                     }
                 _0xE2:
                 ; 0000 015C                 }
000794 9622      	ADIW R28,2
                 ; 0000 015D                 else if (fnd[1] == 2 && fnd[0] == 10) STATE = INPUT_PHONE_OUT_INIT;
000795 c00c      	RJMP _0xE3
                 _0xDA:
000796 940e 0a32 	CALL SUBOPT_0x1B
000798 9712      	SBIW R26,2
000799 f421      	BRNE _0xE5
00079a 940e 0a26 	CALL SUBOPT_0x19
00079c 971a      	SBIW R26,10
00079d f009      	BREQ _0xE6
                 _0xE5:
00079e c003      	RJMP _0xE4
                 _0xE6:
00079f e0ea      	LDI  R30,LOW(10)
0007a0 940e 0a39 	CALL SUBOPT_0x1C
                 ; 0000 015E 
                 ; 0000 015F 
                 ; 0000 0160             break;
                 _0xE4:
                 _0xE3:
0007a2 c025      	RJMP _0xB6
                 ; 0000 0161             case INPUT_PHONE_OUT: //ÅðÀå : Æù¹øÈ£ ÀÔ·Â
                 _0xD9:
0007a3 30e9      	CPI  R30,LOW(0x9)
0007a4 e0a0      	LDI  R26,HIGH(0x9)
0007a5 07fa      	CPC  R31,R26
0007a6 f481      	BRNE _0xE7
                 ; 0000 0162 
                 ; 0000 0163                 if (fnd[0] == 10){
0007a7 940e 0a26 	CALL SUBOPT_0x19
0007a9 971a      	SBIW R26,10
0007aa f439      	BRNE _0xE8
                 ; 0000 0164                     sprintf(check_pnumber, "%d%d%d%d%d%d%d%d%d%d%d", fnd[11],fnd[10],fnd[9],fnd[8],fnd[7],fnd[6],fnd[5],fnd[4],fnd[3],fnd[2],fnd[1]);
0007ab 01fe      	MOVW R30,R28
0007ac 96b5      	ADIW R30,37
0007ad 940e 0a5f 	CALL SUBOPT_0x23
                 ; 0000 0165 
                 ; 0000 0166                     STATE = CHECK_PNUM_OUT_INIT;
0007af e0e8      	LDI  R30,LOW(8)
0007b0 940e 0a39 	CALL SUBOPT_0x1C
                 ; 0000 0167                 }
                 ; 0000 0168                 delay_ms(10);
                 _0xE8:
0007b2 e0ea      	LDI  R30,LOW(10)
0007b3 e0f0      	LDI  R31,HIGH(10)
0007b4 940e 0998 	CALL SUBOPT_0x2
                 ; 0000 0169                 break;
0007b6 c011      	RJMP _0xB6
                 ; 0000 016A 
                 ; 0000 016B              case INPUT_PHONE_OUT_INIT: //ÅðÀå : Æù¹øÈ£ ÀÔ·Â
                 _0xE7:
0007b7 30ea      	CPI  R30,LOW(0xA)
0007b8 e0a0      	LDI  R26,HIGH(0xA)
0007b9 07fa      	CPC  R31,R26
0007ba f469      	BRNE _0xB6
                 ; 0000 016C 
                 ; 0000 016D 
                 ; 0000 016E                 fnd[0]=0;
0007bb 940e 09f6 	CALL SUBOPT_0x12
                 ; 0000 016F                 LCD_Clear();
0007bd 940e 0a3e 	CALL SUBOPT_0x1D
                 ; 0000 0170                 LCD_Pos(0,0);
                 ; 0000 0171                 LCD_Str("Input PhoneNum") ;
                +
0007bf eae0     +LDI R30 , LOW ( _0xBE + ( 139 ) )
0007c0 e0f5     +LDI R31 , HIGH ( _0xBE + ( 139 ) )
                 	__POINTW1MN _0xBE,139
0007c1 940e 0a45 	CALL SUBOPT_0x1E
                 ; 0000 0172                 STATE = INPUT_PHONE_OUT;
0007c3 e0e9      	LDI  R30,LOW(9)
                 _0xF3:
                +
0007c4 01de     +MOVW R26 , R28
0007c5 5aaa     +SUBI R26 , LOW ( - 86 )
0007c6 4fbf     +SBCI R27 , HIGH ( - 86 )
0007c7 93ec     +ST X , R30
                 	__PUTB1SX 86
                 ; 0000 0173                 break;
                 ; 0000 0174 
                 ; 0000 0175 
                 ; 0000 0176         }
                 _0xB6:
                 ; 0000 0177 
                 ; 0000 0178     }
0007c8 ccf8      	RJMP _0x98
                 ; 0000 0179 }
                 _0xEA:
0007c9 cfff      	RJMP _0xEA
                 
                 	.DSEG
                 _0xBE:
000515           	.BYTE 0x9A
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
0007ca 931a      	ST   -Y,R17
0007cb 930a      	ST   -Y,R16
0007cc 81aa      	LDD  R26,Y+2
0007cd 81bb      	LDD  R27,Y+2+1
0007ce 9612      	ADIW R26,2
0007cf 940e 0b91 	CALL __GETW1P
0007d1 9730      	SBIW R30,0
0007d2 f129      	BREQ _0x2000010
0007d3 81aa      	LDD  R26,Y+2
0007d4 81bb      	LDD  R27,Y+2+1
0007d5 9614      	ADIW R26,4
0007d6 940e 0b91 	CALL __GETW1P
0007d8 018f      	MOVW R16,R30
0007d9 9730      	SBIW R30,0
0007da f061      	BREQ _0x2000012
                +
0007db 3002     +CPI R16 , LOW ( 2 )
0007dc e0e0     +LDI R30 , HIGH ( 2 )
0007dd 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0007de f0c0      	BRLO _0x2000013
0007df 01f8      	MOVW R30,R16
0007e0 9731      	SBIW R30,1
0007e1 018f      	MOVW R16,R30
                +
0007e2 81aa     +LDD R26 , Y + 2
0007e3 81bb     +LDD R27 , Y + 2 + 1
0007e4 9614     +ADIW R26 , 4
0007e5 93ed     +ST X + , R30
0007e6 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
0007e7 81aa      	LDD  R26,Y+2
0007e8 81bb      	LDD  R27,Y+2+1
0007e9 9612      	ADIW R26,2
0007ea 940e 0adb 	CALL SUBOPT_0x25
0007ec 9731      	SBIW R30,1
0007ed 81ac      	LDD  R26,Y+4
0007ee 83a0      	STD  Z+0,R26
0007ef 81aa      	LDD  R26,Y+2
0007f0 81bb      	LDD  R27,Y+2+1
0007f1 940e 0b91 	CALL __GETW1P
0007f3 23ff      	TST  R31
0007f4 f012      	BRMI _0x2000014
0007f5 940e 0adb 	CALL SUBOPT_0x25
                 _0x2000014:
                 _0x2000013:
0007f7 c006      	RJMP _0x2000015
                 _0x2000010:
0007f8 81aa      	LDD  R26,Y+2
0007f9 81bb      	LDD  R27,Y+2+1
0007fa efef      	LDI  R30,LOW(65535)
0007fb efff      	LDI  R31,HIGH(65535)
0007fc 93ed      	ST   X+,R30
0007fd 93fc      	ST   X,R31
                 _0x2000015:
0007fe 8119      	LDD  R17,Y+1
0007ff 8108      	LDD  R16,Y+0
                 _0x2060002:
000800 9625      	ADIW R28,5
000801 9508      	RET
                 __print_G100:
000802 9726      	SBIW R28,6
000803 940e 0ba9 	CALL __SAVELOCR6
000805 e010      	LDI  R17,0
000806 85ac      	LDD  R26,Y+12
000807 85bd      	LDD  R27,Y+12+1
000808 e0e0      	LDI  R30,LOW(0)
000809 e0f0      	LDI  R31,HIGH(0)
00080a 93ed      	ST   X+,R30
00080b 93fc      	ST   X,R31
                 _0x2000016:
00080c 89ea      	LDD  R30,Y+18
00080d 89fb      	LDD  R31,Y+18+1
00080e 9631      	ADIW R30,1
00080f 8bea      	STD  Y+18,R30
000810 8bfb      	STD  Y+18+1,R31
000811 9731      	SBIW R30,1
000812 91e4      	LPM  R30,Z
000813 2f2e      	MOV  R18,R30
000814 30e0      	CPI  R30,0
000815 f411      	BRNE PC+3
000816 940c 092f 	JMP _0x2000018
000818 2fe1      	MOV  R30,R17
000819 30e0      	CPI  R30,0
00081a f439      	BRNE _0x200001C
00081b 3225      	CPI  R18,37
00081c f411      	BRNE _0x200001D
00081d e011      	LDI  R17,LOW(1)
00081e c002      	RJMP _0x200001E
                 _0x200001D:
00081f 940e 0ae8 	CALL SUBOPT_0x27
                 _0x200001E:
000821 c10c      	RJMP _0x200001B
                 _0x200001C:
000822 30e1      	CPI  R30,LOW(0x1)
000823 f4a9      	BRNE _0x200001F
000824 3225      	CPI  R18,37
000825 f419      	BRNE _0x2000020
000826 940e 0ae8 	CALL SUBOPT_0x27
000828 c104      	RJMP _0x20000C9
                 _0x2000020:
000829 e012      	LDI  R17,LOW(2)
00082a e040      	LDI  R20,LOW(0)
00082b e000      	LDI  R16,LOW(0)
00082c 322d      	CPI  R18,45
00082d f411      	BRNE _0x2000021
00082e e001      	LDI  R16,LOW(1)
00082f c0fe      	RJMP _0x200001B
                 _0x2000021:
000830 322b      	CPI  R18,43
000831 f411      	BRNE _0x2000022
000832 e24b      	LDI  R20,LOW(43)
000833 c0fa      	RJMP _0x200001B
                 _0x2000022:
000834 3220      	CPI  R18,32
000835 f411      	BRNE _0x2000023
000836 e240      	LDI  R20,LOW(32)
000837 c0f6      	RJMP _0x200001B
                 _0x2000023:
000838 c002      	RJMP _0x2000024
                 _0x200001F:
000839 30e2      	CPI  R30,LOW(0x2)
00083a f439      	BRNE _0x2000025
                 _0x2000024:
00083b e050      	LDI  R21,LOW(0)
00083c e013      	LDI  R17,LOW(3)
00083d 3320      	CPI  R18,48
00083e f411      	BRNE _0x2000026
00083f 6800      	ORI  R16,LOW(128)
000840 c0ed      	RJMP _0x200001B
                 _0x2000026:
000841 c004      	RJMP _0x2000027
                 _0x2000025:
000842 30e3      	CPI  R30,LOW(0x3)
000843 f011      	BREQ PC+3
000844 940c 092e 	JMP _0x200001B
                 _0x2000027:
000846 3320      	CPI  R18,48
000847 f010      	BRLO _0x200002A
000848 332a      	CPI  R18,58
000849 f008      	BRLO _0x200002B
                 _0x200002A:
00084a c007      	RJMP _0x2000029
                 _0x200002B:
00084b e0aa      	LDI  R26,LOW(10)
00084c 9f5a      	MUL  R21,R26
00084d 2d50      	MOV  R21,R0
00084e 2fe2      	MOV  R30,R18
00084f 53e0      	SUBI R30,LOW(48)
000850 0f5e      	ADD  R21,R30
000851 c0dc      	RJMP _0x200001B
                 _0x2000029:
000852 2fe2      	MOV  R30,R18
000853 36e3      	CPI  R30,LOW(0x63)
000854 f449      	BRNE _0x200002F
000855 940e 0af1 	CALL SUBOPT_0x28
000857 89e8      	LDD  R30,Y+16
000858 89f9      	LDD  R31,Y+16+1
000859 81a4      	LDD  R26,Z+4
00085a 93aa      	ST   -Y,R26
00085b 940e 0af7 	CALL SUBOPT_0x29
00085d c0cf      	RJMP _0x2000030
                 _0x200002F:
00085e 37e3      	CPI  R30,LOW(0x73)
00085f f441      	BRNE _0x2000032
000860 940e 0af1 	CALL SUBOPT_0x28
000862 940e 0aff 	CALL SUBOPT_0x2A
000864 940e 096d 	CALL _strlen
000866 2f1e      	MOV  R17,R30
000867 c00a      	RJMP _0x2000033
                 _0x2000032:
000868 37e0      	CPI  R30,LOW(0x70)
000869 f461      	BRNE _0x2000035
00086a 940e 0af1 	CALL SUBOPT_0x28
00086c 940e 0aff 	CALL SUBOPT_0x2A
00086e 940e 0977 	CALL _strlenf
000870 2f1e      	MOV  R17,R30
000871 6008      	ORI  R16,LOW(8)
                 _0x2000033:
000872 6002      	ORI  R16,LOW(2)
000873 770f      	ANDI R16,LOW(127)
000874 e030      	LDI  R19,LOW(0)
000875 c035      	RJMP _0x2000036
                 _0x2000035:
000876 36e4      	CPI  R30,LOW(0x64)
000877 f011      	BREQ _0x2000039
000878 36e9      	CPI  R30,LOW(0x69)
000879 f411      	BRNE _0x200003A
                 _0x2000039:
00087a 6004      	ORI  R16,LOW(4)
00087b c002      	RJMP _0x200003B
                 _0x200003A:
00087c 37e5      	CPI  R30,LOW(0x75)
00087d f431      	BRNE _0x200003C
                 _0x200003B:
00087e e8ec      	LDI  R30,LOW(_tbl10_G100*2)
00087f e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000880 83ee      	STD  Y+6,R30
000881 83ff      	STD  Y+6+1,R31
000882 e015      	LDI  R17,LOW(5)
000883 c00d      	RJMP _0x200003D
                 _0x200003C:
000884 35e8      	CPI  R30,LOW(0x58)
000885 f411      	BRNE _0x200003F
000886 6008      	ORI  R16,LOW(8)
000887 c004      	RJMP _0x2000040
                 _0x200003F:
000888 37e8      	CPI  R30,LOW(0x78)
000889 f011      	BREQ PC+3
00088a 940c 092d 	JMP _0x2000071
                 _0x2000040:
00088c e9e6      	LDI  R30,LOW(_tbl16_G100*2)
00088d e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
00088e 83ee      	STD  Y+6,R30
00088f 83ff      	STD  Y+6+1,R31
000890 e014      	LDI  R17,LOW(4)
                 _0x200003D:
000891 ff02      	SBRS R16,2
000892 c014      	RJMP _0x2000042
000893 940e 0af1 	CALL SUBOPT_0x28
000895 940e 0b09 	CALL SUBOPT_0x2B
000897 85ab      	LDD  R26,Y+11
000898 23aa      	TST  R26
000899 f43a      	BRPL _0x2000043
00089a 85ea      	LDD  R30,Y+10
00089b 85fb      	LDD  R31,Y+10+1
00089c 940e 0b28 	CALL __ANEGW1
00089e 87ea      	STD  Y+10,R30
00089f 87fb      	STD  Y+10+1,R31
0008a0 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
0008a1 3040      	CPI  R20,0
0008a2 f011      	BREQ _0x2000044
0008a3 5f1f      	SUBI R17,-LOW(1)
0008a4 c001      	RJMP _0x2000045
                 _0x2000044:
0008a5 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
0008a6 c004      	RJMP _0x2000046
                 _0x2000042:
0008a7 940e 0af1 	CALL SUBOPT_0x28
0008a9 940e 0b09 	CALL SUBOPT_0x2B
                 _0x2000046:
                 _0x2000036:
0008ab fd00      	SBRC R16,0
0008ac c011      	RJMP _0x2000047
                 _0x2000048:
0008ad 1715      	CP   R17,R21
0008ae f478      	BRSH _0x200004A
0008af ff07      	SBRS R16,7
0008b0 c008      	RJMP _0x200004B
0008b1 ff02      	SBRS R16,2
0008b2 c004      	RJMP _0x200004C
0008b3 7f0b      	ANDI R16,LOW(251)
0008b4 2f24      	MOV  R18,R20
0008b5 5011      	SUBI R17,LOW(1)
0008b6 c001      	RJMP _0x200004D
                 _0x200004C:
0008b7 e320      	LDI  R18,LOW(48)
                 _0x200004D:
0008b8 c001      	RJMP _0x200004E
                 _0x200004B:
0008b9 e220      	LDI  R18,LOW(32)
                 _0x200004E:
0008ba 940e 0ae8 	CALL SUBOPT_0x27
0008bc 5051      	SUBI R21,LOW(1)
0008bd cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
0008be 2f31      	MOV  R19,R17
0008bf ff01      	SBRS R16,1
0008c0 c017      	RJMP _0x200004F
                 _0x2000050:
0008c1 3030      	CPI  R19,0
0008c2 f0a1      	BREQ _0x2000052
0008c3 ff03      	SBRS R16,3
0008c4 c006      	RJMP _0x2000053
0008c5 81ee      	LDD  R30,Y+6
0008c6 81ff      	LDD  R31,Y+6+1
0008c7 9125      	LPM  R18,Z+
0008c8 83ee      	STD  Y+6,R30
0008c9 83ff      	STD  Y+6+1,R31
0008ca c005      	RJMP _0x2000054
                 _0x2000053:
0008cb 81ae      	LDD  R26,Y+6
0008cc 81bf      	LDD  R27,Y+6+1
0008cd 912d      	LD   R18,X+
0008ce 83ae      	STD  Y+6,R26
0008cf 83bf      	STD  Y+6+1,R27
                 _0x2000054:
0008d0 940e 0ae8 	CALL SUBOPT_0x27
0008d2 3050      	CPI  R21,0
0008d3 f009      	BREQ _0x2000055
0008d4 5051      	SUBI R21,LOW(1)
                 _0x2000055:
0008d5 5031      	SUBI R19,LOW(1)
0008d6 cfea      	RJMP _0x2000050
                 _0x2000052:
0008d7 c04b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
0008d8 e320      	LDI  R18,LOW(48)
0008d9 81ee      	LDD  R30,Y+6
0008da 81ff      	LDD  R31,Y+6+1
0008db 940e 0b95 	CALL __GETW1PF
0008dd 87e8      	STD  Y+8,R30
0008de 87f9      	STD  Y+8+1,R31
0008df 81ee      	LDD  R30,Y+6
0008e0 81ff      	LDD  R31,Y+6+1
0008e1 9632      	ADIW R30,2
0008e2 83ee      	STD  Y+6,R30
0008e3 83ff      	STD  Y+6+1,R31
                 _0x200005A:
0008e4 85e8      	LDD  R30,Y+8
0008e5 85f9      	LDD  R31,Y+8+1
0008e6 85aa      	LDD  R26,Y+10
0008e7 85bb      	LDD  R27,Y+10+1
0008e8 17ae      	CP   R26,R30
0008e9 07bf      	CPC  R27,R31
0008ea f050      	BRLO _0x200005C
0008eb 5f2f      	SUBI R18,-LOW(1)
0008ec 85a8      	LDD  R26,Y+8
0008ed 85b9      	LDD  R27,Y+8+1
0008ee 85ea      	LDD  R30,Y+10
0008ef 85fb      	LDD  R31,Y+10+1
0008f0 1bea      	SUB  R30,R26
0008f1 0bfb      	SBC  R31,R27
0008f2 87ea      	STD  Y+10,R30
0008f3 87fb      	STD  Y+10+1,R31
0008f4 cfef      	RJMP _0x200005A
                 _0x200005C:
0008f5 332a      	CPI  R18,58
0008f6 f028      	BRLO _0x200005D
0008f7 ff03      	SBRS R16,3
0008f8 c002      	RJMP _0x200005E
0008f9 5f29      	SUBI R18,-LOW(7)
0008fa c001      	RJMP _0x200005F
                 _0x200005E:
0008fb 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
0008fc fd04      	SBRC R16,4
0008fd c01a      	RJMP _0x2000061
0008fe 3321      	CPI  R18,49
0008ff f420      	BRSH _0x2000063
000900 85a8      	LDD  R26,Y+8
000901 85b9      	LDD  R27,Y+8+1
000902 9711      	SBIW R26,1
000903 f409      	BRNE _0x2000062
                 _0x2000063:
000904 c009      	RJMP _0x20000CA
                 _0x2000062:
000905 1753      	CP   R21,R19
000906 f010      	BRLO _0x2000067
000907 ff00      	SBRS R16,0
000908 c001      	RJMP _0x2000068
                 _0x2000067:
000909 c013      	RJMP _0x2000066
                 _0x2000068:
00090a e220      	LDI  R18,LOW(32)
00090b ff07      	SBRS R16,7
00090c c00b      	RJMP _0x2000069
00090d e320      	LDI  R18,LOW(48)
                 _0x20000CA:
00090e 6100      	ORI  R16,LOW(16)
00090f ff02      	SBRS R16,2
000910 c007      	RJMP _0x200006A
000911 7f0b      	ANDI R16,LOW(251)
000912 934a      	ST   -Y,R20
000913 940e 0af7 	CALL SUBOPT_0x29
000915 3050      	CPI  R21,0
000916 f009      	BREQ _0x200006B
000917 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
000918 940e 0ae8 	CALL SUBOPT_0x27
00091a 3050      	CPI  R21,0
00091b f009      	BREQ _0x200006C
00091c 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
00091d 5031      	SUBI R19,LOW(1)
00091e 85a8      	LDD  R26,Y+8
00091f 85b9      	LDD  R27,Y+8+1
000920 9712      	SBIW R26,2
000921 f008      	BRLO _0x2000059
000922 cfb5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
000923 ff00      	SBRS R16,0
000924 c008      	RJMP _0x200006D
                 _0x200006E:
000925 3050      	CPI  R21,0
000926 f031      	BREQ _0x2000070
000927 5051      	SUBI R21,LOW(1)
000928 e2e0      	LDI  R30,LOW(32)
000929 93ea      	ST   -Y,R30
00092a 940e 0af7 	CALL SUBOPT_0x29
00092c cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000C9:
00092d e010      	LDI  R17,LOW(0)
                 _0x200001B:
00092e cedd      	RJMP _0x2000016
                 _0x2000018:
00092f 85ac      	LDD  R26,Y+12
000930 85bd      	LDD  R27,Y+12+1
000931 940e 0b91 	CALL __GETW1P
000933 940e 0bb0 	CALL __LOADLOCR6
000935 9664      	ADIW R28,20
000936 9508      	RET
                 _sprintf:
000937 92ff      	PUSH R15
000938 2ef8      	MOV  R15,R24
000939 9726      	SBIW R28,6
00093a 940e 0bab 	CALL __SAVELOCR4
00093c 940e 0b11 	CALL SUBOPT_0x2C
00093e 9730      	SBIW R30,0
00093f f419      	BRNE _0x2000072
000940 efef      	LDI  R30,LOW(65535)
000941 efff      	LDI  R31,HIGH(65535)
000942 c025      	RJMP _0x2060001
                 _0x2000072:
000943 01de      	MOVW R26,R28
000944 9616      	ADIW R26,6
000945 940e 0b24 	CALL __ADDW2R15
000947 018d      	MOVW R16,R26
000948 940e 0b11 	CALL SUBOPT_0x2C
00094a 83ee      	STD  Y+6,R30
00094b 83ff      	STD  Y+6+1,R31
00094c e0e0      	LDI  R30,LOW(0)
00094d 87e8      	STD  Y+8,R30
00094e 87e9      	STD  Y+8+1,R30
00094f 01de      	MOVW R26,R28
000950 961a      	ADIW R26,10
000951 940e 0b24 	CALL __ADDW2R15
000953 940e 0b91 	CALL __GETW1P
000955 93fa      	ST   -Y,R31
000956 93ea      	ST   -Y,R30
000957 931a      	ST   -Y,R17
000958 930a      	ST   -Y,R16
000959 ecea      	LDI  R30,LOW(_put_buff_G100)
00095a e0f7      	LDI  R31,HIGH(_put_buff_G100)
00095b 93fa      	ST   -Y,R31
00095c 93ea      	ST   -Y,R30
00095d 01fe      	MOVW R30,R28
00095e 963a      	ADIW R30,10
00095f 93fa      	ST   -Y,R31
000960 93ea      	ST   -Y,R30
000961 dea0      	RCALL __print_G100
000962 019f      	MOVW R18,R30
000963 81ae      	LDD  R26,Y+6
000964 81bf      	LDD  R27,Y+6+1
000965 e0e0      	LDI  R30,LOW(0)
000966 93ec      	ST   X,R30
000967 01f9      	MOVW R30,R18
                 _0x2060001:
000968 940e 0bb2 	CALL __LOADLOCR4
00096a 962a      	ADIW R28,10
00096b 90ff      	POP  R15
00096c 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
00096d 91a9          ld   r26,y+
00096e 91b9          ld   r27,y+
00096f 27ee          clr  r30
000970 27ff          clr  r31
                 strlen0:
000971 916d          ld   r22,x+
000972 2366          tst  r22
000973 f011          breq strlen1
000974 9631          adiw r30,1
000975 cffb          rjmp strlen0
                 strlen1:
000976 9508          ret
                 _strlenf:
000977 27aa          clr  r26
000978 27bb          clr  r27
000979 91e9          ld   r30,y+
00097a 91f9          ld   r31,y+
                 strlenf0:
00097b 9005      	lpm  r0,z+
00097c 2000          tst  r0
00097d f011          breq strlenf1
00097e 9611          adiw r26,1
00097f cffb          rjmp strlenf0
                 strlenf1:
000980 01fd          movw r30,r26
000981 9508          ret
                 
                 	.DSEG
                 _Port_char:
0005af           	.BYTE 0x10
                 _Port_fnd:
0005bf           	.BYTE 0x8
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
000982 93e0 0065 	STS  101,R30
000984 91e0 0065 	LDS  R30,101
000986 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1:
000987 60e1      	ORI  R30,1
000988 93e0 0065 	STS  101,R30
                +
00098a ef86     +LDI R24 , LOW ( 246 )
                +__DELAY_USB_LOOP :
00098b 958a     +DEC R24
00098c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 246
00098d 81e8      	LD   R30,Y
00098e bbeb      	OUT  0x1B,R30
                +
00098f ef86     +LDI R24 , LOW ( 246 )
                +__DELAY_USB_LOOP :
000990 958a     +DEC R24
000991 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 246
000992 91e0 0065 	LDS  R30,101
000994 7fee      	ANDI R30,0xFE
000995 93e0 0065 	STS  101,R30
000997 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2:
000998 93fa      	ST   -Y,R31
000999 93ea      	ST   -Y,R30
00099a 940c 0b18 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3:
00099c e0e1      	LDI  R30,LOW(1)
00099d e0f0      	LDI  R31,HIGH(1)
00099e cff9      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
00099f e3e8      	LDI  R30,LOW(56)
0009a0 93ea      	ST   -Y,R30
0009a1 940e 0186 	CALL _LCD_Comm
0009a3 e0e4      	LDI  R30,LOW(4)
0009a4 93ea      	ST   -Y,R30
0009a5 940c 0191 	JMP  _LCD_delay
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5:
0009a7 93ea      	ST   -Y,R30
0009a8 940e 0186 	CALL _LCD_Comm
0009aa e0e4      	LDI  R30,LOW(4)
0009ab 93ea      	ST   -Y,R30
0009ac 940c 0191 	JMP  _LCD_delay
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
0009ae 81e8      	LD   R30,Y
0009af 93e0 0073 	STS  115,R30
0009b1 e8e4      	LDI  R30,LOW(132)
0009b2 93e0 0074 	STS  116,R30
0009b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7:
0009b5 93e0 0065 	STS  101,R30
0009b7 81ec      	LDD  R30,Y+4
0009b8 81fd      	LDD  R31,Y+4+1
0009b9 93fa      	ST   -Y,R31
0009ba 93ea      	ST   -Y,R30
0009bb 940c 0303 	JMP  _myDelay_us
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x8:
0009bd 81a9      	LDD  R26,Y+1
0009be 27bb      	CLR  R27
0009bf e0e4      	LDI  R30,LOW(4)
0009c0 e0f0      	LDI  R31,HIGH(4)
0009c1 940e 0b75 	CALL __MODW21
0009c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x9:
0009c4 81a9      	LDD  R26,Y+1
0009c5 e0b0      	LDI  R27,0
0009c6 e0e4      	LDI  R30,LOW(4)
0009c7 e0f0      	LDI  R31,HIGH(4)
0009c8 940e 0b6d 	CALL __DIVW21
0009ca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
0009cb 940e 0b2c 	CALL __LSLW2
0009cd 01bf      	MOVW R22,R30
0009ce cfee      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xB:
0009cf e0f0      	LDI  R31,0
0009d0 55e1      	SUBI R30,LOW(-_Port_char)
0009d1 4ffa      	SBCI R31,HIGH(-_Port_char)
0009d2 81e0      	LD   R30,Z
0009d3 93e0 0062 	STS  98,R30
0009d5 cfc6      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xC:
0009d6 93fa      	ST   -Y,R31
0009d7 93ea      	ST   -Y,R30
0009d8 940c 0316 	JMP  _Buzzer_play
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
0009da eee8      	LDI  R30,LOW(1000)
0009db e0f3      	LDI  R31,HIGH(1000)
0009dc cfbb      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xE:
0009dd 930a      	ST   -Y,R16
0009de 940e 0298 	CALL _startRanging
0009e0 930a      	ST   -Y,R16
0009e1 940c 047b 	JMP  _SRF_Run
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xF:
                +
0009e3 01de     +MOVW R26 , R28
0009e4 58ab     +SUBI R26 , LOW ( - 117 )
0009e5 4fbf     +SBCI R27 , HIGH ( - 117 )
0009e6 900d     +LD R0 , X +
0009e7 91bc     +LD R27 , X
0009e8 2da0     +MOV R26 , R0
                 	__GETW2SX 117
0009e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x10:
0009ea 01de      	MOVW R26,R28
0009eb 58ad      	SUBI R26,LOW(-(115))
0009ec 4fbf      	SBCI R27,HIGH(-(115))
0009ed 91ed      	LD   R30,X+
0009ee 91fd      	LD   R31,X+
0009ef 9631      	ADIW R30,1
0009f0 93fe      	ST   -X,R31
0009f1 93ee      	ST   -X,R30
0009f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
0009f3 e3e2      	LDI  R30,LOW(50)
0009f4 e0f0      	LDI  R31,HIGH(50)
0009f5 cfa2      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x12:
0009f6 e0e0      	LDI  R30,LOW(0)
                +
0009f7 01de     +MOVW R26 , R28
0009f8 5aa7     +SUBI R26 , LOW ( - 89 )
0009f9 4fbf     +SBCI R27 , HIGH ( - 89 )
0009fa 93ed     +ST X + , R30
0009fb 93ec     +ST X , R30
                 	__CLRW1SX 89
0009fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x13:
0009fd e0e0      	LDI  R30,LOW(0)
                +
0009fe 01de     +MOVW R26 , R28
0009ff 5aa5     +SUBI R26 , LOW ( - 91 )
000a00 4fbf     +SBCI R27 , HIGH ( - 91 )
000a01 93ed     +ST X + , R30
000a02 93ec     +ST X , R30
                 	__CLRW1SX 91
000a03 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x14:
000a04 e0e1      	LDI  R30,LOW(1)
                +
000a05 01de     +MOVW R26 , R28
000a06 5aaa     +SUBI R26 , LOW ( - 86 )
000a07 4fbf     +SBCI R27 , HIGH ( - 86 )
000a08 93ec     +ST X , R30
                 	__PUTB1SX 86
000a09 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x15:
                +
000a0a 01de     +MOVW R26 , R28
000a0b 5aaf     +SUBI R26 , LOW ( - 81 )
000a0c 4fbf     +SBCI R27 , HIGH ( - 81 )
000a0d 900d     +LD R0 , X +
000a0e 91bc     +LD R27 , X
000a0f 2da0     +MOV R26 , R0
                 	__GETW2SX 81
000a10 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16:
                +
000a11 01fe     +MOVW R30 , R28
000a12 5aef     +SUBI R30 , LOW ( - 81 )
000a13 4fff     +SBCI R31 , HIGH ( - 81 )
000a14 9001     +LD R0 , Z +
000a15 81f0     +LD R31 , Z
000a16 2de0     +MOV R30 , R0
                 	__GETW1SX 81
000a17 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x17:
                +
000a18 01fe     +MOVW R30 , R28
000a19 58eb     +SUBI R30 , LOW ( - 117 )
000a1a 4fff     +SBCI R31 , HIGH ( - 117 )
000a1b 9001     +LD R0 , Z +
000a1c 81f0     +LD R31 , Z
000a1d 2de0     +MOV R30 , R0
                 	__GETW1SX 117
000a1e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x18:
                +
000a1f 01fe     +MOVW R30 , R28
000a20 5ae5     +SUBI R30 , LOW ( - 91 )
000a21 4fff     +SBCI R31 , HIGH ( - 91 )
000a22 9001     +LD R0 , Z +
000a23 81f0     +LD R31 , Z
000a24 2de0     +MOV R30 , R0
                 	__GETW1SX 91
000a25 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x19:
                +
000a26 01de     +MOVW R26 , R28
000a27 5aa7     +SUBI R26 , LOW ( - 89 )
000a28 4fbf     +SBCI R27 , HIGH ( - 89 )
000a29 900d     +LD R0 , X +
000a2a 91bc     +LD R27 , X
000a2b 2da0     +MOV R26 , R0
                 	__GETW2SX 89
000a2c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
                +
000a2d 01de     +MOVW R26 , R28
000a2e 5aad     +SUBI R26 , LOW ( - 83 )
000a2f 4fbf     +SBCI R27 , HIGH ( - 83 )
000a30 91ac     +LD R26 , X
                 	__GETB2SX 83
000a31 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x1B:
                +
000a32 01de     +MOVW R26 , R28
000a33 5aa5     +SUBI R26 , LOW ( - 91 )
000a34 4fbf     +SBCI R27 , HIGH ( - 91 )
000a35 900d     +LD R0 , X +
000a36 91bc     +LD R27 , X
000a37 2da0     +MOV R26 , R0
                 	__GETW2SX 91
000a38 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1C:
                +
000a39 01de     +MOVW R26 , R28
000a3a 5aaa     +SUBI R26 , LOW ( - 86 )
000a3b 4fbf     +SBCI R27 , HIGH ( - 86 )
000a3c 93ec     +ST X , R30
                 	__PUTB1SX 86
000a3d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x1D:
000a3e 940e 01b4 	CALL _LCD_Clear
000a40 e0e0      	LDI  R30,LOW(0)
000a41 93ea      	ST   -Y,R30
000a42 93ea      	ST   -Y,R30
000a43 940c 0196 	JMP  _LCD_Pos
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x1E:
000a45 93fa      	ST   -Y,R31
000a46 93ea      	ST   -Y,R30
000a47 940c 01a6 	JMP  _LCD_Str
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1F:
000a49 e0e1      	LDI  R30,LOW(1)
000a4a 93ea      	ST   -Y,R30
000a4b e0e0      	LDI  R30,LOW(0)
000a4c 93ea      	ST   -Y,R30
000a4d 940c 0196 	JMP  _LCD_Pos
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x20:
000a4f 27ff      	CLR  R31
000a50 2766      	CLR  R22
000a51 2777      	CLR  R23
000a52 940e 0b99 	CALL __PUTPARD1
000a54 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
000a55 a1ec      	LDD  R30,Y+36
000a56 e0ab      	LDI  R26,LOW(11)
000a57 9fea      	MUL  R30,R26
000a58 01f0      	MOVW R30,R0
000a59 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22:
000a5a 01de      	MOVW R26,R28
000a5b 96d0      	ADIW R26,48
000a5c 0fea      	ADD  R30,R26
000a5d 1ffb      	ADC  R31,R27
000a5e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:111 WORDS
                 SUBOPT_0x23:
000a5f 93fa      	ST   -Y,R31
000a60 93ea      	ST   -Y,R30
                +
000a61 eae9     +LDI R30 , LOW ( 2 * _0x0 + ( 77 ) )
000a62 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 77 ) )
                 	__POINTW1FN _0x0,77
000a63 93fa      	ST   -Y,R31
000a64 93ea      	ST   -Y,R30
                +
000a65 01fe     +MOVW R30 , R28
000a66 58ed     +SUBI R30 , LOW ( - 115 )
000a67 4fff     +SBCI R31 , HIGH ( - 115 )
000a68 9001     +LD R0 , Z +
000a69 81f0     +LD R31 , Z
000a6a 2de0     +MOV R30 , R0
                 	__GETW1SX 115
000a6b 940e 0b31 	CALL __CWD1
000a6d 940e 0b99 	CALL __PUTPARD1
000a6f dfa8      	RCALL SUBOPT_0x17
000a70 940e 0b31 	CALL __CWD1
000a72 940e 0b99 	CALL __PUTPARD1
                +
000a74 01fe     +MOVW R30 , R28
000a75 58e9     +SUBI R30 , LOW ( - 119 )
000a76 4fff     +SBCI R31 , HIGH ( - 119 )
000a77 9001     +LD R0 , Z +
000a78 81f0     +LD R31 , Z
000a79 2de0     +MOV R30 , R0
                 	__GETW1SX 119
000a7a 940e 0b31 	CALL __CWD1
000a7c 940e 0b99 	CALL __PUTPARD1
                +
000a7e 01fe     +MOVW R30 , R28
000a7f 58e7     +SUBI R30 , LOW ( - 121 )
000a80 4fff     +SBCI R31 , HIGH ( - 121 )
000a81 9001     +LD R0 , Z +
000a82 81f0     +LD R31 , Z
000a83 2de0     +MOV R30 , R0
                 	__GETW1SX 121
000a84 940e 0b31 	CALL __CWD1
000a86 940e 0b99 	CALL __PUTPARD1
                +
000a88 01fe     +MOVW R30 , R28
000a89 58e5     +SUBI R30 , LOW ( - 123 )
000a8a 4fff     +SBCI R31 , HIGH ( - 123 )
000a8b 9001     +LD R0 , Z +
000a8c 81f0     +LD R31 , Z
000a8d 2de0     +MOV R30 , R0
                 	__GETW1SX 123
000a8e 940e 0b31 	CALL __CWD1
000a90 940e 0b99 	CALL __PUTPARD1
                +
000a92 01fe     +MOVW R30 , R28
000a93 58e3     +SUBI R30 , LOW ( - 125 )
000a94 4fff     +SBCI R31 , HIGH ( - 125 )
000a95 9001     +LD R0 , Z +
000a96 81f0     +LD R31 , Z
000a97 2de0     +MOV R30 , R0
                 	__GETW1SX 125
000a98 940e 0b31 	CALL __CWD1
000a9a 940e 0b99 	CALL __PUTPARD1
                +
000a9c 01fe     +MOVW R30 , R28
000a9d 58e1     +SUBI R30 , LOW ( - 127 )
000a9e 4fff     +SBCI R31 , HIGH ( - 127 )
000a9f 9001     +LD R0 , Z +
000aa0 81f0     +LD R31 , Z
000aa1 2de0     +MOV R30 , R0
                 	__GETW1SX 127
000aa2 940e 0b31 	CALL __CWD1
000aa4 940e 0b99 	CALL __PUTPARD1
                +
000aa6 01fe     +MOVW R30 , R28
000aa7 57ef     +SUBI R30 , LOW ( - 129 )
000aa8 4fff     +SBCI R31 , HIGH ( - 129 )
000aa9 9001     +LD R0 , Z +
000aaa 81f0     +LD R31 , Z
000aab 2de0     +MOV R30 , R0
                 	__GETW1SX 129
000aac 940e 0b31 	CALL __CWD1
000aae 940e 0b99 	CALL __PUTPARD1
                +
000ab0 01fe     +MOVW R30 , R28
000ab1 57ed     +SUBI R30 , LOW ( - 131 )
000ab2 4fff     +SBCI R31 , HIGH ( - 131 )
000ab3 9001     +LD R0 , Z +
000ab4 81f0     +LD R31 , Z
000ab5 2de0     +MOV R30 , R0
                 	__GETW1SX 131
000ab6 940e 0b31 	CALL __CWD1
000ab8 940e 0b99 	CALL __PUTPARD1
                +
000aba 01fe     +MOVW R30 , R28
000abb 57eb     +SUBI R30 , LOW ( - 133 )
000abc 4fff     +SBCI R31 , HIGH ( - 133 )
000abd 9001     +LD R0 , Z +
000abe 81f0     +LD R31 , Z
000abf 2de0     +MOV R30 , R0
                 	__GETW1SX 133
000ac0 940e 0b31 	CALL __CWD1
000ac2 940e 0b99 	CALL __PUTPARD1
                +
000ac4 01fe     +MOVW R30 , R28
000ac5 57e9     +SUBI R30 , LOW ( - 135 )
000ac6 4fff     +SBCI R31 , HIGH ( - 135 )
000ac7 9001     +LD R0 , Z +
000ac8 81f0     +LD R31 , Z
000ac9 2de0     +MOV R30 , R0
                 	__GETW1SX 135
000aca 940e 0b31 	CALL __CWD1
000acc 940e 0b99 	CALL __PUTPARD1
000ace e28c      	LDI  R24,44
000acf 940e 0937 	CALL _sprintf
000ad1 96e0      	ADIW R28,48
000ad2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x24:
000ad3 a1ec      	LDD  R30,Y+36
000ad4 e0f0      	LDI  R31,0
000ad5 01de      	MOVW R26,R28
000ad6 5aad      	SUBI R26,LOW(-(83))
000ad7 4fbf      	SBCI R27,HIGH(-(83))
000ad8 0fae      	ADD  R26,R30
000ad9 1fbf      	ADC  R27,R31
000ada 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x25:
000adb 91ed      	LD   R30,X+
000adc 91fd      	LD   R31,X+
000add 9631      	ADIW R30,1
000ade 93fe      	ST   -X,R31
000adf 93ee      	ST   -X,R30
000ae0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26:
                +
000ae1 01de     +MOVW R26 , R28
000ae2 5aad     +SUBI R26 , LOW ( - 83 )
000ae3 4fbf     +SBCI R27 , HIGH ( - 83 )
000ae4 900d     +LD R0 , X +
000ae5 91bc     +LD R27 , X
000ae6 2da0     +MOV R26 , R0
                 	__GETW2SX 83
000ae7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x27:
000ae8 932a      	ST   -Y,R18
000ae9 85ed      	LDD  R30,Y+13
000aea 85fe      	LDD  R31,Y+13+1
000aeb 93fa      	ST   -Y,R31
000aec 93ea      	ST   -Y,R30
000aed 89e9      	LDD  R30,Y+17
000aee 89fa      	LDD  R31,Y+17+1
000aef 9509      	ICALL
000af0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x28:
000af1 89e8      	LDD  R30,Y+16
000af2 89f9      	LDD  R31,Y+16+1
000af3 9734      	SBIW R30,4
000af4 8be8      	STD  Y+16,R30
000af5 8bf9      	STD  Y+16+1,R31
000af6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x29:
000af7 85ed      	LDD  R30,Y+13
000af8 85fe      	LDD  R31,Y+13+1
000af9 93fa      	ST   -Y,R31
000afa 93ea      	ST   -Y,R30
000afb 89e9      	LDD  R30,Y+17
000afc 89fa      	LDD  R31,Y+17+1
000afd 9509      	ICALL
000afe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2A:
000aff 89a8      	LDD  R26,Y+16
000b00 89b9      	LDD  R27,Y+16+1
000b01 9614      	ADIW R26,4
000b02 940e 0b91 	CALL __GETW1P
000b04 83ee      	STD  Y+6,R30
000b05 83ff      	STD  Y+6+1,R31
000b06 93fa      	ST   -Y,R31
000b07 93ea      	ST   -Y,R30
000b08 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2B:
000b09 89a8      	LDD  R26,Y+16
000b0a 89b9      	LDD  R27,Y+16+1
000b0b 9614      	ADIW R26,4
000b0c 940e 0b91 	CALL __GETW1P
000b0e 87ea      	STD  Y+10,R30
000b0f 87fb      	STD  Y+10+1,R31
000b10 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
000b11 01de      	MOVW R26,R28
000b12 961c      	ADIW R26,12
000b13 940e 0b24 	CALL __ADDW2R15
000b15 940e 0b91 	CALL __GETW1P
000b17 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000b18 91e9      	ld   r30,y+
000b19 91f9      	ld   r31,y+
000b1a 9630      	adiw r30,0
000b1b f039      	breq __delay_ms1
                 __delay_ms0:
                +
000b1c e686     +LDI R24 , LOW ( 0xE66 )
000b1d e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
000b1e 9701     +SBIW R24 , 1
000b1f f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
000b20 95a8      	wdr
000b21 9731      	sbiw r30,1
000b22 f7c9      	brne __delay_ms0
                 __delay_ms1:
000b23 9508      	ret
                 
                 __ADDW2R15:
000b24 2400      	CLR  R0
000b25 0daf      	ADD  R26,R15
000b26 1db0      	ADC  R27,R0
000b27 9508      	RET
                 
                 __ANEGW1:
000b28 95f1      	NEG  R31
000b29 95e1      	NEG  R30
000b2a 40f0      	SBCI R31,0
000b2b 9508      	RET
                 
                 __LSLW2:
000b2c 0fee      	LSL  R30
000b2d 1fff      	ROL  R31
000b2e 0fee      	LSL  R30
000b2f 1fff      	ROL  R31
000b30 9508      	RET
                 
                 __CWD1:
000b31 2f6f      	MOV  R22,R31
000b32 0f66      	ADD  R22,R22
000b33 0b66      	SBC  R22,R22
000b34 2f76      	MOV  R23,R22
000b35 9508      	RET
                 
                 __EQB12:
000b36 17ea      	CP   R30,R26
000b37 e0e1      	LDI  R30,1
000b38 f009      	BREQ __EQB12T
000b39 27ee      	CLR  R30
                 __EQB12T:
000b3a 9508      	RET
                 
                 __EQW12:
000b3b 17ea      	CP   R30,R26
000b3c 07fb      	CPC  R31,R27
000b3d e0e1      	LDI  R30,1
000b3e f009      	BREQ __EQW12T
000b3f 27ee      	CLR  R30
                 __EQW12T:
000b40 9508      	RET
                 
                 __LTW12:
000b41 17ae      	CP   R26,R30
000b42 07bf      	CPC  R27,R31
000b43 e0e1      	LDI  R30,1
000b44 f00c      	BRLT __LTW12T
000b45 27ee      	CLR  R30
                 __LTW12T:
000b46 9508      	RET
                 
                 __GTW12:
000b47 17ea      	CP   R30,R26
000b48 07fb      	CPC  R31,R27
000b49 e0e1      	LDI  R30,1
000b4a f00c      	BRLT __GTW12T
000b4b 27ee      	CLR  R30
                 __GTW12T:
000b4c 9508      	RET
                 
                 __MULW12U:
000b4d 9ffa      	MUL  R31,R26
000b4e 2df0      	MOV  R31,R0
000b4f 9feb      	MUL  R30,R27
000b50 0df0      	ADD  R31,R0
000b51 9fea      	MUL  R30,R26
000b52 2de0      	MOV  R30,R0
000b53 0df1      	ADD  R31,R1
000b54 9508      	RET
                 
                 __MULW12:
000b55 d02d      	RCALL __CHKSIGNW
000b56 dff6      	RCALL __MULW12U
000b57 f40e      	BRTC __MULW121
000b58 dfcf      	RCALL __ANEGW1
                 __MULW121:
000b59 9508      	RET
                 
                 __DIVW21U:
000b5a 2400      	CLR  R0
000b5b 2411      	CLR  R1
000b5c e190      	LDI  R25,16
                 __DIVW21U1:
000b5d 0faa      	LSL  R26
000b5e 1fbb      	ROL  R27
000b5f 1c00      	ROL  R0
000b60 1c11      	ROL  R1
000b61 1a0e      	SUB  R0,R30
000b62 0a1f      	SBC  R1,R31
000b63 f418      	BRCC __DIVW21U2
000b64 0e0e      	ADD  R0,R30
000b65 1e1f      	ADC  R1,R31
000b66 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000b67 60a1      	SBR  R26,1
                 __DIVW21U3:
000b68 959a      	DEC  R25
000b69 f799      	BRNE __DIVW21U1
000b6a 01fd      	MOVW R30,R26
000b6b 01d0      	MOVW R26,R0
000b6c 9508      	RET
                 
                 __DIVW21:
000b6d d015      	RCALL __CHKSIGNW
000b6e dfeb      	RCALL __DIVW21U
000b6f f40e      	BRTC __DIVW211
000b70 dfb7      	RCALL __ANEGW1
                 __DIVW211:
000b71 9508      	RET
                 
                 __MODW21U:
000b72 dfe7      	RCALL __DIVW21U
000b73 01fd      	MOVW R30,R26
000b74 9508      	RET
                 
                 __MODW21:
000b75 94e8      	CLT
000b76 ffb7      	SBRS R27,7
000b77 c004      	RJMP __MODW211
000b78 95a0      	COM  R26
000b79 95b0      	COM  R27
000b7a 9611      	ADIW R26,1
000b7b 9468      	SET
                 __MODW211:
000b7c fdf7      	SBRC R31,7
000b7d dfaa      	RCALL __ANEGW1
000b7e dfdb      	RCALL __DIVW21U
000b7f 01fd      	MOVW R30,R26
000b80 f40e      	BRTC __MODW212
000b81 dfa6      	RCALL __ANEGW1
                 __MODW212:
000b82 9508      	RET
                 
                 __CHKSIGNW:
000b83 94e8      	CLT
000b84 fff7      	SBRS R31,7
000b85 c002      	RJMP __CHKSW1
000b86 dfa1      	RCALL __ANEGW1
000b87 9468      	SET
                 __CHKSW1:
000b88 ffb7      	SBRS R27,7
000b89 c006      	RJMP __CHKSW2
000b8a 95a0      	COM  R26
000b8b 95b0      	COM  R27
000b8c 9611      	ADIW R26,1
000b8d f800      	BLD  R0,0
000b8e 9403      	INC  R0
000b8f fa00      	BST  R0,0
                 __CHKSW2:
000b90 9508      	RET
                 
                 __GETW1P:
000b91 91ed      	LD   R30,X+
000b92 91fc      	LD   R31,X
000b93 9711      	SBIW R26,1
000b94 9508      	RET
                 
                 __GETW1PF:
000b95 9005      	LPM  R0,Z+
000b96 91f4      	LPM  R31,Z
000b97 2de0      	MOV  R30,R0
000b98 9508      	RET
                 
                 __PUTPARD1:
000b99 937a      	ST   -Y,R23
000b9a 936a      	ST   -Y,R22
000b9b 93fa      	ST   -Y,R31
000b9c 93ea      	ST   -Y,R30
000b9d 9508      	RET
                 
                 __SWAPW12:
000b9e 2e1b      	MOV  R1,R27
000b9f 2fbf      	MOV  R27,R31
000ba0 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000ba1 2e1a      	MOV  R1,R26
000ba2 2fae      	MOV  R26,R30
000ba3 2de1      	MOV  R30,R1
000ba4 9508      	RET
                 
                 __CPW02:
000ba5 2400      	CLR  R0
000ba6 160a      	CP   R0,R26
000ba7 060b      	CPC  R0,R27
000ba8 9508      	RET
                 
                 __SAVELOCR6:
000ba9 935a      	ST   -Y,R21
                 __SAVELOCR5:
000baa 934a      	ST   -Y,R20
                 __SAVELOCR4:
000bab 933a      	ST   -Y,R19
                 __SAVELOCR3:
000bac 932a      	ST   -Y,R18
                 __SAVELOCR2:
000bad 931a      	ST   -Y,R17
000bae 930a      	ST   -Y,R16
000baf 9508      	RET
                 
                 __LOADLOCR6:
000bb0 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000bb1 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000bb2 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000bb3 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000bb4 8119      	LDD  R17,Y+1
000bb5 8108      	LD   R16,Y
000bb6 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
000bb7 0fac      	ADD  R26,R28
000bb8 1fbd      	ADC  R27,R29
                 __INITLOC0:
000bb9 9005      	LPM  R0,Z+
000bba 920d      	ST   X+,R0
000bbb 958a      	DEC  R24
000bbc f7e1      	BRNE __INITLOC0
000bbd 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  80 r1 :  14 r2 :   0 r3 :   0 r4 :   4 r5 :   3 r6 :   0 r7 :   5 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  95 r17:  86 r18:  43 r19:  27 r20:  14 r21:  19 r22:  25 r23:   5 
r24:  27 r25:   5 r26: 295 r27: 113 r28:  85 r29:   2 r30: 719 r31: 269 
x  :  87 y  : 312 z  :  52 
Registers used: 25 out of 35 (71.4%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  20 add   :  26 
adiw  :  43 and   :   2 andi  :  12 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  40 
brge  :   7 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  11 
brlt  :   2 brmi  :   1 brne  :  82 brpl  :   1 brsh  :   8 brtc  :   3 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   1 bst   :   1 call  : 275 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  24 cls   :   0 clt   :   2 clv   :   0 clz   :   0 com   :   4 
cp    :  14 cpc   :  38 cpi   :  85 cpse  :   0 dec   :   8 des   :   0 
elpm  :   0 eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 
ijmp  :   0 in    :  15 inc   :   3 jmp   :  53 ld    :  90 ldd   : 143 
ldi   : 336 lds   :  15 lpm   :  15 lsl   :   8 lsr   :   0 mov   :  87 
movw  : 108 mul   :  10 muls  :   1 mulsu :   0 neg   :   2 nop   :   1 
or    :   2 ori   :  18 out   :  34 pop   :   6 push  :   6 rcall :  52 
ret   :  74 reti  :   2 rjmp  : 141 rol   :   8 ror   :   0 sbc   :   4 
sbci  :  60 sbi   :   4 sbic  :   0 sbis  :   0 sbiw  :  51 sbr   :   1 
sbrc  :   3 sbrs  :  13 sec   :   0 seh   :   0 sei   :   0 sen   :   0 
ser   :   0 ses   :   0 set   :   2 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    : 168 std   :  37 sts   :  20 sub   :   3 subi  :  77 
swap  :   0 tst   :   4 wdr   :   1 
Instructions used: 68 out of 117 (58.1%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00177c   5508    504   6012  131072   4.6%
[.dseg] 0x000100 0x0005c7      0    199    199    4351   4.6%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 7 warnings
