
AVRASM ver. 2.1.30  C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm Wed Dec 08 10:23:40 2021

C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1061): warning: Register r5 already defined by the .DEF directive
C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1062): warning: Register r4 already defined by the .DEF directive
C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1063): warning: Register r7 already defined by the .DEF directive
C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1064): warning: Register r6 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 14.745600 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _zero_flag=R5
                 	.DEF _ti_Cnt_1ms=R4
                 	.DEF _LCD_DelCnt_1ms=R7
                 	.DEF _Distance_cnt_1ms=R6
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0146 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0305 	JMP  _compare
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0478 	JMP  _timer0_comp
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
000046 2710
000047 03e8
000048 0064
000049 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00004a 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00004b 1000
00004c 0100
00004d 0010
00004e 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x5A:
00004f f9c0
000050 b0a4
000051 9299
000052 d882      	.DB  0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xD8
000053 9080
000054 8388
000055 a1c4
000056 8e84      	.DB  0x80,0x90,0x88,0x83,0xC4,0xA1,0x84,0x8E
                 _0x5B:
000057 001f
000058 002f
000059 004f
C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1119): warning: .cseg .db misalignment - padding zero byte
00005a 008f      	.DB  0x1F,0x0,0x2F,0x0,0x4F,0x0,0x8F
                 _0x97:
00005b 0000
00005c 0000
00005d 0000
00005e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005f 0000
000060 0000
000061 0000
000062 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000063 0000
000064 0000
000065 0000
000066 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000067 0000
000068 0000
000069 0000
00006a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006b 0000
00006c 0000
00006d 0000
00006e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006f 0000
000070 0000
000071 0000
000072 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000073 0000
000074 0000
000075 0000
000076 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000077 0000
000078 0000
000079 0000
00007a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007b 0000
00007c 0000
00007d 0000
00007e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007f 0000
000080 0000
000081 0000
000082 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000083 0000
000084 5800
000085 5858
000086 0001      	.DB  0x0,0x0,0x0,0x58,0x58,0x58,0x1,0x0
000087 0000
000088 0000
000089 0000
00008a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008b 0000
00008c 0000
00008d 0000
00008e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00008f 0000
000090 0000
000091 0000
000092 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000093 0000
000094 0000
000095 0000
000096 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000097 0000
000098 0000
000099 0000
00009a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009b 0000
00009c 0000
00009d 0000
00009e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009f 0000
0000a0 0000
0000a1 0000
0000a2 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a3 0000
0000a4 0000
0000a5 0000
0000a6 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000a7 0000
0000a8 0000
0000a9 0000
0000aa 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ab 0000
C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1141): warning: .cseg .db misalignment - padding zero byte
0000ac 0000      	.DB  0x0,0x0,0x0
                 _0xF1:
C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1143): warning: .cseg .db misalignment - padding zero byte
0000ad 0000      	.DB  0x0
                 _0x0:
0000ae 2020
0000af 2020
0000b0 2020
0000b1 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0000b2 2020
0000b3 2020
0000b4 2020
0000b5 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0000b6 2020
0000b7 2020
0000b8 2500
0000b9 3330      	.DB  0x20,0x20,0x20,0x20,0x0,0x25,0x30,0x33
0000ba 6364
0000bb 006d
0000bc 6843
0000bd 6f6f      	.DB  0x64,0x63,0x6D,0x0,0x43,0x68,0x6F,0x6F
0000be 6573
0000bf 5320
0000c0 6165
0000c1 0074      	.DB  0x73,0x65,0x20,0x53,0x65,0x61,0x74,0x0
0000c2 2031
0000c3 0020
0000c4 2032
0000c5 0020      	.DB  0x31,0x20,0x20,0x0,0x32,0x20,0x20,0x0
0000c6 2033
0000c7 0020
0000c8 7453
0000c9 6475      	.DB  0x33,0x20,0x20,0x0,0x53,0x74,0x75,0x64
0000ca 5279
0000cb 6f6f
0000cc 206d
0000cd 3420      	.DB  0x79,0x52,0x6F,0x6F,0x6D,0x20,0x20,0x34
0000ce 4f3a
0000cf 5455
0000d0 3100
0000d1 253a      	.DB  0x3A,0x4F,0x55,0x54,0x0,0x31,0x3A,0x25
0000d2 2063
0000d3 3a32
0000d4 6325
0000d5 3320      	.DB  0x63,0x20,0x32,0x3A,0x25,0x63,0x20,0x33
0000d6 253a
0000d7 0063
0000d8 6425
0000d9 6425      	.DB  0x3A,0x25,0x63,0x0,0x25,0x64,0x25,0x64
0000da 6425
0000db 6425
0000dc 6425
0000dd 6425      	.DB  0x25,0x64,0x25,0x64,0x25,0x64,0x25,0x64
0000de 6425
0000df 6425
0000e0 6425
0000e1 6425      	.DB  0x25,0x64,0x25,0x64,0x25,0x64,0x25,0x64
0000e2 6425
0000e3 4900
0000e4 706e
0000e5 7475      	.DB  0x25,0x64,0x0,0x49,0x6E,0x70,0x75,0x74
0000e6 5020
0000e7 6f68
0000e8 656e
0000e9 754e      	.DB  0x20,0x50,0x68,0x6F,0x6E,0x65,0x4E,0x75
0000ea 006d
0000eb 6f53
0000ec 656d
0000ed 6e6f      	.DB  0x6D,0x0,0x53,0x6F,0x6D,0x65,0x6F,0x6E
0000ee 2065
0000ef 7355
0000f0 6465
0000f1 3100      	.DB  0x65,0x20,0x55,0x73,0x65,0x64,0x0,0x31
0000f2 593a
0000f3 7365
0000f4 2020
0000f5 3a32      	.DB  0x3A,0x59,0x65,0x73,0x20,0x20,0x32,0x3A
0000f6 6f4e
0000f7 4500
0000f8 706d
0000f9 7974      	.DB  0x4E,0x6F,0x0,0x45,0x6D,0x70,0x74,0x79
0000fa 5320
0000fb 6165
0000fc 0074
0000fd 7355      	.DB  0x20,0x53,0x65,0x61,0x74,0x0,0x55,0x73
0000fe 7265
0000ff 4320
000100 6568
000101 6b63      	.DB  0x65,0x72,0x20,0x43,0x68,0x65,0x63,0x6B
000102 4700
000103 6f6f
000104 2064
000105 7942      	.DB  0x0,0x47,0x6F,0x6F,0x64,0x20,0x42,0x79
000106 0065
000107 7257
000108 6e6f
000109 2067      	.DB  0x65,0x0,0x57,0x72,0x6F,0x6E,0x67,0x20
00010a 6150
00010b 7373
00010c 6f77
00010d 6472      	.DB  0x50,0x61,0x73,0x73,0x77,0x6F,0x72,0x64
C:\Users\Á¤¹Î±Ô\Desktop\git\C_atmega128\SMART_STUDYROOM\List\smart_studyroom.asm(1169): warning: .cseg .db misalignment - padding zero byte
00010e 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00010f 0015      	.DW  0x15
000110 0500      	.DW  _0xA
000111 015c      	.DW  _0x0*2
                 
000112 0010      	.DW  0x10
000113 05af      	.DW  _Port_char
000114 009e      	.DW  _0x5A*2
                 
000115 0007      	.DW  0x07
000116 05bf      	.DW  _Port_fnd
000117 00ae      	.DW  _0x5B*2
                 
000118 000c      	.DW  0x0C
000119 0515      	.DW  _0xBD
00011a 0178      	.DW  _0x0*2+28
                 
00011b 0004      	.DW  0x04
00011c 0521      	.DW  _0xBD+12
00011d 0184      	.DW  _0x0*2+40
                 
00011e 0004      	.DW  0x04
00011f 0525      	.DW  _0xBD+16
000120 0188      	.DW  _0x0*2+44
                 
000121 0004      	.DW  0x04
000122 0529      	.DW  _0xBD+20
000123 018c      	.DW  _0x0*2+48
                 
000124 0011      	.DW  0x11
000125 052d      	.DW  _0xBD+24
000126 0190      	.DW  _0x0*2+52
                 
000127 000f      	.DW  0x0F
000128 053e      	.DW  _0xBD+41
000129 01c7      	.DW  _0x0*2+107
                 
00012a 000d      	.DW  0x0D
00012b 054d      	.DW  _0xBD+56
00012c 01d6      	.DW  _0x0*2+122
                 
00012d 000c      	.DW  0x0C
00012e 055a      	.DW  _0xBD+69
00012f 01e3      	.DW  _0x0*2+135
                 
000130 000b      	.DW  0x0B
000131 0566      	.DW  _0xBD+81
000132 01ef      	.DW  _0x0*2+147
                 
000133 000c      	.DW  0x0C
000134 0571      	.DW  _0xBD+92
000135 01e3      	.DW  _0x0*2+135
                 
000136 000b      	.DW  0x0B
000137 057d      	.DW  _0xBD+104
000138 01fa      	.DW  _0x0*2+158
                 
000139 0009      	.DW  0x09
00013a 0588      	.DW  _0xBD+115
00013b 0205      	.DW  _0x0*2+169
                 
00013c 000f      	.DW  0x0F
00013d 0591      	.DW  _0xBD+124
00013e 020e      	.DW  _0x0*2+178
                 
00013f 000f      	.DW  0x0F
000140 05a0      	.DW  _0xBD+139
000141 01c7      	.DW  _0x0*2+107
                 
000142 0001      	.DW  0x01
000143 0005      	.DW  0x05
000144 015a      	.DW  _0xF1*2
                 
                 _0xFFFFFFFF:
000145 0000      	.DW  0
                 
                 __RESET:
000146 94f8      	CLI
000147 27ee      	CLR  R30
000148 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000149 e0f1      	LDI  R31,1
00014a bff5      	OUT  MCUCR,R31
00014b bfe5      	OUT  MCUCR,R30
00014c 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
00014e e1f8      	LDI  R31,0x18
00014f bdf1      	OUT  WDTCR,R31
000150 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000151 e08d      	LDI  R24,(14-2)+1
000152 e0a2      	LDI  R26,2
000153 27bb      	CLR  R27
                 __CLEAR_REG:
000154 93ed      	ST   X+,R30
000155 958a      	DEC  R24
000156 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000157 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000158 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000159 e0a0      	LDI  R26,LOW(__SRAM_START)
00015a e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00015b 93ed      	ST   X+,R30
00015c 9701      	SBIW R24,1
00015d f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00015e e1ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00015f e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000160 9185      	LPM  R24,Z+
000161 9195      	LPM  R25,Z+
000162 9700      	SBIW R24,0
000163 f061      	BREQ __GLOBAL_INI_END
000164 91a5      	LPM  R26,Z+
000165 91b5      	LPM  R27,Z+
000166 9005      	LPM  R0,Z+
000167 9015      	LPM  R1,Z+
000168 01bf      	MOVW R22,R30
000169 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00016a 9005      	LPM  R0,Z+
00016b 920d      	ST   X+,R0
00016c 9701      	SBIW R24,1
00016d f7e1      	BRNE __GLOBAL_INI_LOOP
00016e 01fb      	MOVW R30,R22
00016f cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
000170 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000171 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000172 bfed      	OUT  SPL,R30
000173 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000174 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000175 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000176 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000177 940c 04a3 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include "lcd.h"
                 
                 	.CSEG
                 _LCD_PORT_Init:
000179 efef      	LDI  R30,LOW(255)
00017a bbea      	OUT  0x1A,R30
00017b e1ef      	LDI  R30,LOW(31)
00017c 93e0 0064 	STS  100,R30
00017e 9508      	RET
                 _LCD_Data:
                 ;	ch -> Y+0
00017f 91e0 0065 	LDS  R30,101
000181 60e4      	ORI  R30,4
000182 940e 09a4 	CALL SUBOPT_0x0
000184 7fed      	ANDI R30,0xFD
000185 940e 09a4 	CALL SUBOPT_0x0
000187 940e 09a9 	CALL SUBOPT_0x1
000189 c119      	RJMP _0x2060009
                 _LCD_Comm:
                 ;	ch -> Y+0
00018a 91e0 0065 	LDS  R30,101
00018c 7feb      	ANDI R30,0xFB
00018d 940e 09a4 	CALL SUBOPT_0x0
00018f 7fed      	ANDI R30,0xFD
000190 940e 09a4 	CALL SUBOPT_0x0
000192 940e 09a9 	CALL SUBOPT_0x1
000194 c10e      	RJMP _0x2060009
                 _LCD_delay:
                 ;	ms -> Y+0
000195 81e8      	LD   R30,Y
000196 e0f0      	LDI  R31,0
000197 940e 09ba 	CALL SUBOPT_0x2
000199 c109      	RJMP _0x2060009
                 _LCD_Pos:
                 ;	col -> Y+1
                 ;	row -> Y+0
00019a 81e9      	LDD  R30,Y+1
00019b e4a0      	LDI  R26,LOW(64)
00019c 02ea      	MULS R30,R26
00019d 01f0      	MOVW R30,R0
00019e 81a8      	LD   R26,Y
00019f 0fea      	ADD  R30,R26
0001a0 68e0      	ORI  R30,0x80
0001a1 93ea      	ST   -Y,R30
0001a2 dfe7      	RCALL _LCD_Comm
0001a3 c2c9      	RJMP _0x2060004
                 _LCD_Char:
                 ;	c -> Y+0
0001a4 81e8      	LD   R30,Y
0001a5 93ea      	ST   -Y,R30
0001a6 dfd8      	RCALL _LCD_Data
0001a7 940e 09be 	CALL SUBOPT_0x3
0001a9 c0f9      	RJMP _0x2060009
                 _LCD_Str:
                 ;	*str -> Y+0
                 _0x3:
0001aa 81a8      	LD   R26,Y
0001ab 81b9      	LDD  R27,Y+1
0001ac 91ec      	LD   R30,X
0001ad 30e0      	CPI  R30,0
0001ae f041      	BREQ _0x5
0001af 93ea      	ST   -Y,R30
0001b0 dff3      	RCALL _LCD_Char
0001b1 81e8      	LD   R30,Y
0001b2 81f9      	LDD  R31,Y+1
0001b3 9631      	ADIW R30,1
0001b4 83e8      	ST   Y,R30
0001b5 83f9      	STD  Y+1,R31
0001b6 cff3      	RJMP _0x3
                 _0x5:
0001b7 c2b5      	RJMP _0x2060004
                 ;	*str -> Y+1
                 ;	loop_count -> R17
                 
                 	.DSEG
                 _0xA:
000500           	.BYTE 0x15
                 
                 	.CSEG
                 _LCD_Clear:
0001b8 e0e1      	LDI  R30,LOW(1)
0001b9 93ea      	ST   -Y,R30
0001ba dfcf      	RCALL _LCD_Comm
0001bb e0e2      	LDI  R30,LOW(2)
0001bc 93ea      	ST   -Y,R30
0001bd dfd7      	RCALL _LCD_delay
0001be 9508      	RET
                 _LCD_Init:
0001bf dfb9      	RCALL _LCD_PORT_Init
0001c0 940e 09c1 	CALL SUBOPT_0x4
0001c2 940e 09c1 	CALL SUBOPT_0x4
0001c4 940e 09c1 	CALL SUBOPT_0x4
0001c6 e0ee      	LDI  R30,LOW(14)
0001c7 940e 09c9 	CALL SUBOPT_0x5
0001c9 e0e6      	LDI  R30,LOW(6)
0001ca 940e 09c9 	CALL SUBOPT_0x5
0001cc dfeb      	RCALL _LCD_Clear
0001cd 9508      	RET
                 ;	p -> Y+0
                 ;	p -> Y+0
                 ;#include "twi.h"
                 _Init_TWI:
0001ce e3e2      	LDI  R30,LOW(50)
0001cf 93e0 0070 	STS  112,R30
0001d1 e0e4      	LDI  R30,LOW(4)
0001d2 93e0 0074 	STS  116,R30
0001d4 e0e0      	LDI  R30,LOW(0)
0001d5 93e0 0071 	STS  113,R30
0001d7 9508      	RET
                 _TWI_TransCheck_ACK:
0001d8 931a      	ST   -Y,R17
0001d9 930a      	ST   -Y,R16
                 ;	Stat -> Y+2
                 ;	ExtDev_ErrCnt -> R16,R17
                +
0001da e000     +LDI R16 , LOW ( 0 )
0001db e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x12:
0001dc 91e0 0074 	LDS  R30,116
0001de 78e0      	ANDI R30,LOW(0x80)
0001df f461      	BRNE _0x14
0001e0 01d8      	MOVW R26,R16
                +
0001e1 5f0f     +SUBI R16 , LOW ( - 1 )
0001e2 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0001e3 3da1      	CPI  R26,LOW(0x7D1)
0001e4 e0e7      	LDI  R30,HIGH(0x7D1)
0001e5 07be      	CPC  R27,R30
0001e6 f020      	BRLO _0x15
0001e7 e0e1      	LDI  R30,LOW(1)
0001e8 8119      	LDD  R17,Y+1
0001e9 8108      	LDD  R16,Y+0
0001ea c047      	RJMP _0x206000A
                 _0x15:
0001eb cff0      	RJMP _0x12
                 _0x14:
0001ec 91e0 0071 	LDS  R30,113
0001ee 7fe8      	ANDI R30,LOW(0xF8)
0001ef 2fae      	MOV  R26,R30
0001f0 81ea      	LDD  R30,Y+2
0001f1 17ea      	CP   R30,R26
0001f2 f021      	BREQ _0x16
0001f3 e0e2      	LDI  R30,LOW(2)
0001f4 8119      	LDD  R17,Y+1
0001f5 8108      	LDD  R16,Y+0
0001f6 c03b      	RJMP _0x206000A
                 _0x16:
0001f7 e0e0      	LDI  R30,LOW(0)
0001f8 8119      	LDD  R17,Y+1
0001f9 8108      	LDD  R16,Y+0
0001fa c037      	RJMP _0x206000A
                 _TWI_Start:
0001fb eae4      	LDI  R30,LOW(164)
0001fc 93e0 0074 	STS  116,R30
0001fe e0e8      	LDI  R30,LOW(8)
0001ff c014      	RJMP _0x206000B
                 _TWI_Write_SLAW:
                 ;	Addr -> Y+0
000200 940e 09d0 	CALL SUBOPT_0x6
000202 e1e8      	LDI  R30,LOW(24)
000203 93ea      	ST   -Y,R30
000204 dfd3      	RCALL _TWI_TransCheck_ACK
000205 c09d      	RJMP _0x2060009
                 _TWI_Write_Data:
                 ;	Data -> Y+0
000206 940e 09d0 	CALL SUBOPT_0x6
000208 e2e8      	LDI  R30,LOW(40)
000209 93ea      	ST   -Y,R30
00020a dfcd      	RCALL _TWI_TransCheck_ACK
00020b c097      	RJMP _0x2060009
                 _TWI_Stop:
00020c e9e4      	LDI  R30,LOW(148)
00020d 93e0 0074 	STS  116,R30
00020f 9508      	RET
                 _TWI_Restart:
000210 eae4      	LDI  R30,LOW(164)
000211 93e0 0074 	STS  116,R30
000213 e1e0      	LDI  R30,LOW(16)
                 _0x206000B:
000214 93ea      	ST   -Y,R30
000215 dfc2      	RCALL _TWI_TransCheck_ACK
000216 9508      	RET
                 ;	Data -> Y+2
                 ;	Addr -> Y+1
                 ;	ret_err -> R17
                 _TWI_Write_SLAR:
                 ;	Addr -> Y+0
000217 81e8      	LD   R30,Y
000218 60e1      	ORI  R30,1
000219 93e0 0073 	STS  115,R30
00021b e8e4      	LDI  R30,LOW(132)
00021c 93e0 0074 	STS  116,R30
00021e e4e0      	LDI  R30,LOW(64)
00021f 93ea      	ST   -Y,R30
000220 dfb7      	RCALL _TWI_TransCheck_ACK
000221 c081      	RJMP _0x2060009
                 ;	*Data -> Y+1
                 ;	ret_err -> R17
                 _TWI_Read_Data_NACK:
000222 931a      	ST   -Y,R17
                 ;	*Data -> Y+1
                 ;	ret_err -> R17
000223 e010      	LDI  R17,0
000224 e8e4      	LDI  R30,LOW(132)
000225 93e0 0074 	STS  116,R30
000227 e5e8      	LDI  R30,LOW(88)
000228 93ea      	ST   -Y,R30
000229 dfae      	RCALL _TWI_TransCheck_ACK
00022a 2f1e      	MOV  R17,R30
00022b 91e0 0073 	LDS  R30,115
00022d 81a9      	LDD  R26,Y+1
00022e 81ba      	LDD  R27,Y+1+1
00022f 93ec      	ST   X,R30
000230 e0e0      	LDI  R30,LOW(0)
000231 8118      	LDD  R17,Y+0
                 _0x206000A:
000232 9623      	ADIW R28,3
000233 9508      	RET
                 ;	Addr -> Y+4
                 ;	*Data -> Y+2
                 ;	rec_data -> R17
                 ;	ret_err -> R16
                 ;	Slave_Addr -> Y+0
                 ;	*Data -> Y+1
                 ;	ret_err -> R17
                 ;	*Data -> Y+2
                 ;	ret_err -> R17
                 ;	rec_data -> R16
                 ;	devAddr -> Y+5
                 ;	regAddr -> Y+4
                 ;	*Data -> Y+2
                 ;	rec_data -> R17
                 ;	ret_err -> R16
                 ;#include "srf02.h"
                 _SRF02_I2C_Write:
000234 931a      	ST   -Y,R17
                 ;	address -> Y+3
                 ;	reg -> Y+2
                 ;	data -> Y+1
                 ;	ret_err -> R17
000235 e010      	LDI  R17,0
000236 dfc4      	RCALL _TWI_Start
000237 2f1e      	MOV  R17,R30
000238 81eb      	LDD  R30,Y+3
000239 93ea      	ST   -Y,R30
00023a dfc5      	RCALL _TWI_Write_SLAW
00023b 2f1e      	MOV  R17,R30
00023c 3010      	CPI  R17,0
00023d f019      	BREQ _0x29
00023e 2fe1      	MOV  R30,R17
00023f 8118      	LDD  R17,Y+0
000240 c0d7      	RJMP _0x2060007
                 _0x29:
000241 81ea      	LDD  R30,Y+2
000242 93ea      	ST   -Y,R30
000243 dfc2      	RCALL _TWI_Write_Data
000244 2f1e      	MOV  R17,R30
000245 3010      	CPI  R17,0
000246 f019      	BREQ _0x2A
000247 2fe1      	MOV  R30,R17
000248 8118      	LDD  R17,Y+0
000249 c0ce      	RJMP _0x2060007
                 _0x2A:
00024a 81e9      	LDD  R30,Y+1
00024b 93ea      	ST   -Y,R30
00024c dfb9      	RCALL _TWI_Write_Data
00024d 2f1e      	MOV  R17,R30
00024e 3010      	CPI  R17,0
00024f f019      	BREQ _0x2B
000250 2fe1      	MOV  R30,R17
000251 8118      	LDD  R17,Y+0
000252 c0c5      	RJMP _0x2060007
                 _0x2B:
000253 dfb8      	RCALL _TWI_Stop
000254 e0e0      	LDI  R30,LOW(0)
000255 8118      	LDD  R17,Y+0
000256 c0c1      	RJMP _0x2060007
                 _SRF02_I2C_Read:
000257 931a      	ST   -Y,R17
000258 930a      	ST   -Y,R16
                 ;	address -> Y+5
                 ;	reg -> Y+4
                 ;	*Data -> Y+2
                 ;	read_data -> R17
                 ;	ret_err -> R16
000259 e010      	LDI  R17,0
00025a e000      	LDI  R16,0
00025b df9f      	RCALL _TWI_Start
00025c 2f0e      	MOV  R16,R30
00025d 81ed      	LDD  R30,Y+5
00025e 93ea      	ST   -Y,R30
00025f dfa0      	RCALL _TWI_Write_SLAW
000260 2f0e      	MOV  R16,R30
000261 3000      	CPI  R16,0
000262 f021      	BREQ _0x2C
000263 2fe0      	MOV  R30,R16
000264 8119      	LDD  R17,Y+1
000265 8108      	LDD  R16,Y+0
000266 c1b2      	RJMP _0x2060005
                 _0x2C:
000267 81ec      	LDD  R30,Y+4
000268 93ea      	ST   -Y,R30
000269 df9c      	RCALL _TWI_Write_Data
00026a 2f0e      	MOV  R16,R30
00026b 3000      	CPI  R16,0
00026c f021      	BREQ _0x2D
00026d 2fe0      	MOV  R30,R16
00026e 8119      	LDD  R17,Y+1
00026f 8108      	LDD  R16,Y+0
000270 c1a8      	RJMP _0x2060005
                 _0x2D:
000271 df9e      	RCALL _TWI_Restart
000272 2f0e      	MOV  R16,R30
000273 9ac3      	SBI  0x18,3
000274 3000      	CPI  R16,0
000275 f021      	BREQ _0x2E
000276 2fe0      	MOV  R30,R16
000277 8119      	LDD  R17,Y+1
000278 8108      	LDD  R16,Y+0
000279 c19f      	RJMP _0x2060005
                 _0x2E:
00027a 81ed      	LDD  R30,Y+5
00027b 93ea      	ST   -Y,R30
00027c df9a      	RCALL _TWI_Write_SLAR
00027d 2f0e      	MOV  R16,R30
00027e 9ac4      	SBI  0x18,4
00027f 3000      	CPI  R16,0
000280 f021      	BREQ _0x2F
000281 2fe0      	MOV  R30,R16
000282 8119      	LDD  R17,Y+1
000283 8108      	LDD  R16,Y+0
000284 c194      	RJMP _0x2060005
                 _0x2F:
000285 b7ed      	IN   R30,SPL
000286 b7fe      	IN   R31,SPH
000287 93fa      	ST   -Y,R31
000288 93ea      	ST   -Y,R30
000289 931f      	PUSH R17
00028a df97      	RCALL _TWI_Read_Data_NACK
00028b 911f      	POP  R17
00028c 2f0e      	MOV  R16,R30
00028d 9ac5      	SBI  0x18,5
00028e 3000      	CPI  R16,0
00028f f021      	BREQ _0x30
000290 2fe0      	MOV  R30,R16
000291 8119      	LDD  R17,Y+1
000292 8108      	LDD  R16,Y+0
000293 c185      	RJMP _0x2060005
                 _0x30:
000294 df77      	RCALL _TWI_Stop
000295 81aa      	LDD  R26,Y+2
000296 81bb      	LDD  R27,Y+2+1
000297 931c      	ST   X,R17
000298 e0e0      	LDI  R30,LOW(0)
000299 8119      	LDD  R17,Y+1
00029a 8108      	LDD  R16,Y+0
00029b c17d      	RJMP _0x2060005
                 _startRanging:
                 ;	addr -> Y+0
00029c 81e8      	LD   R30,Y
00029d 93ea      	ST   -Y,R30
00029e e0e0      	LDI  R30,LOW(0)
00029f 93ea      	ST   -Y,R30
0002a0 e5e1      	LDI  R30,LOW(81)
0002a1 93ea      	ST   -Y,R30
0002a2 df91      	RCALL _SRF02_I2C_Write
                 _0x2060009:
0002a3 9621      	ADIW R28,1
0002a4 9508      	RET
                 _getRange:
0002a5 931a      	ST   -Y,R17
0002a6 930a      	ST   -Y,R16
                 ;	addr -> Y+4
                 ;	*pDistance -> Y+2
                 ;	temp -> R17
                 ;	res -> R16
0002a7 e000      	LDI  R16,0
0002a8 81ec      	LDD  R30,Y+4
0002a9 93ea      	ST   -Y,R30
0002aa e0e2      	LDI  R30,LOW(2)
0002ab 93ea      	ST   -Y,R30
0002ac b7ed      	IN   R30,SPL
0002ad b7fe      	IN   R31,SPH
0002ae 93fa      	ST   -Y,R31
0002af 93ea      	ST   -Y,R30
0002b0 931f      	PUSH R17
0002b1 dfa5      	RCALL _SRF02_I2C_Read
0002b2 911f      	POP  R17
0002b3 2f0e      	MOV  R16,R30
0002b4 3000      	CPI  R16,0
0002b5 f509      	BRNE _0x2060008
0002b6 2ff1      	MOV  R31,R17
0002b7 e0e0      	LDI  R30,LOW(0)
0002b8 81aa      	LDD  R26,Y+2
0002b9 81bb      	LDD  R27,Y+2+1
0002ba 93ed      	ST   X+,R30
0002bb 93fc      	ST   X,R31
0002bc 81ec      	LDD  R30,Y+4
0002bd 93ea      	ST   -Y,R30
0002be e0e3      	LDI  R30,LOW(3)
0002bf 93ea      	ST   -Y,R30
0002c0 b7ed      	IN   R30,SPL
0002c1 b7fe      	IN   R31,SPH
0002c2 93fa      	ST   -Y,R31
0002c3 93ea      	ST   -Y,R30
0002c4 931f      	PUSH R17
0002c5 df91      	RCALL _SRF02_I2C_Read
0002c6 911f      	POP  R17
0002c7 2f0e      	MOV  R16,R30
0002c8 3000      	CPI  R16,0
0002c9 f469      	BRNE _0x2060008
0002ca 81aa      	LDD  R26,Y+2
0002cb 81bb      	LDD  R27,Y+2+1
0002cc 010d      	MOVW R0,R26
0002cd 940e 0bc7 	CALL __GETW1P
0002cf 01df      	MOVW R26,R30
0002d0 2fe1      	MOV  R30,R17
0002d1 e0f0      	LDI  R31,0
0002d2 2bea      	OR   R30,R26
0002d3 2bfb      	OR   R31,R27
0002d4 01d0      	MOVW R26,R0
0002d5 93ed      	ST   X+,R30
0002d6 93fc      	ST   X,R31
                 _0x2060008:
0002d7 2fe0      	MOV  R30,R16
0002d8 e0f0      	LDI  R31,0
0002d9 8119      	LDD  R17,Y+1
0002da 8108      	LDD  R16,Y+0
0002db 9625      	ADIW R28,5
0002dc 9508      	RET
                 ;	ori -> Y+2
                 ;	des -> Y+1
                 ;	res -> R17
                 ;#include "Keypad.h"
                 
                 	.DSEG
                 
                 	.CSEG
                 _FND_PORT_Init:
0002dd b1e2      	IN   R30,0x2
0002de 6fe0      	ORI  R30,LOW(0xF0)
0002df b9e2      	OUT  0x2,R30
0002e0 91e0 0061 	LDS  R30,97
0002e2 6fef      	ORI  R30,LOW(0xFF)
0002e3 93e0 0061 	STS  97,R30
0002e5 b3e4      	IN   R30,0x14
0002e6 60ef      	ORI  R30,LOW(0xF)
0002e7 bbe4      	OUT  0x14,R30
0002e8 91e0 0064 	LDS  R30,100
0002ea 61e0      	ORI  R30,0x10
0002eb 93e0 0064 	STS  100,R30
0002ed 9abd      	SBI  0x17,5
0002ee b3e5      	IN   R30,0x15
0002ef 6fef      	ORI  R30,LOW(0xFF)
0002f0 bbe5      	OUT  0x15,R30
0002f1 9508      	RET
                 _Init_Timer1:
0002f2 e8e2      	LDI  R30,LOW(130)
0002f3 bdef      	OUT  0x2F,R30
0002f4 e1ea      	LDI  R30,LOW(26)
0002f5 bdee      	OUT  0x2E,R30
0002f6 e0e0      	LDI  R30,LOW(0)
0002f7 e0f0      	LDI  R31,HIGH(0)
0002f8 bdfd      	OUT  0x2C+1,R31
0002f9 bdec      	OUT  0x2C,R30
0002fa efef      	LDI  R30,LOW(36863)
0002fb e8ff      	LDI  R31,HIGH(36863)
0002fc bdf7      	OUT  0x26+1,R31
0002fd bde6      	OUT  0x26,R30
0002fe e6e6      	LDI  R30,LOW(4710)
0002ff e1f2      	LDI  R31,HIGH(4710)
000300 bdfb      	OUT  0x2A+1,R31
000301 bdea      	OUT  0x2A,R30
000302 b7e7      	IN   R30,0x37
000303 61e0      	ORI  R30,0x10
000304 c171      	RJMP _0x2060003
                 _compare:
000305 0000      	nop
000306 9518      	RETI
                 _myDelay_us:
000307 931a      	ST   -Y,R17
000308 930a      	ST   -Y,R16
                 ;	delay -> Y+2
                 ;	loop -> R16,R17
                +
000309 e000     +LDI R16 , LOW ( 0 )
00030a e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x5D:
00030b 81ea      	LDD  R30,Y+2
00030c 81fb      	LDD  R31,Y+2+1
00030d 170e      	CP   R16,R30
00030e 071f      	CPC  R17,R31
00030f f430      	BRSH _0x5E
                +
000310 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000311 958a     +DEC R24
000312 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
                +
000313 5f0f     +SUBI R16 , LOW ( - 1 )
000314 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000315 cff5      	RJMP _0x5D
                 _0x5E:
000316 8119      	LDD  R17,Y+1
000317 8108      	LDD  R16,Y+0
                 _0x2060007:
000318 9624      	ADIW R28,4
000319 9508      	RET
                 _Buzzer_play:
00031a 940e 0be1 	CALL __SAVELOCR4
                 ;	delay -> Y+4
                 ;	loop -> R16,R17
                 ;	Play_Tim -> R19
00031c e030      	LDI  R19,0
00031d 81ec      	LDD  R30,Y+4
00031e 81fd      	LDD  R31,Y+4+1
00031f e1a0      	LDI  R26,LOW(10000)
000320 e2b7      	LDI  R27,HIGH(10000)
000321 940e 0b90 	CALL __DIVW21U
000323 2f3e      	MOV  R19,R30
                +
000324 e000     +LDI R16 , LOW ( 0 )
000325 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x60:
000326 2fe3      	MOV  R30,R19
000327 01d8      	MOVW R26,R16
000328 e0f0      	LDI  R31,0
000329 17ae      	CP   R26,R30
00032a 07bf      	CPC  R27,R31
00032b f468      	BRSH _0x61
00032c 91e0 0065 	LDS  R30,101
00032e 61e0      	ORI  R30,0x10
00032f 940e 09d7 	CALL SUBOPT_0x7
000331 91e0 0065 	LDS  R30,101
000333 7eef      	ANDI R30,0xEF
000334 940e 09d7 	CALL SUBOPT_0x7
                +
000336 5f0f     +SUBI R16 , LOW ( - 1 )
000337 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000338 cfed      	RJMP _0x60
                 _0x61:
000339 c0dd      	RJMP _0x2060006
                 _KeyScan:
00033a 940e 0bdf 	CALL __SAVELOCR6
                 ;	key_scan_line -> R16,R17
                 ;	key_scan_loop -> R19
                 ;	getPinData -> R18
                 ;	key_num -> R20,R21
                +
00033c ef0e     +LDI R16 , LOW ( 254 )
00033d e010     +LDI R17 , HIGH ( 254 )
                 	__GETWRN 16,17,254
00033e e030      	LDI  R19,0
00033f e020      	LDI  R18,0
                +
000340 e040     +LDI R20 , LOW ( 0 )
000341 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
000342 e030      	LDI  R19,LOW(0)
                 _0x63:
000343 3034      	CPI  R19,4
000344 f5b8      	BRSH _0x64
000345 bb05      	OUT  0x15,R16
                +
000346 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000347 958a     +DEC R24
000348 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
000349 b3e3      	IN   R30,0x13
00034a 7fe0      	ANDI R30,LOW(0xF0)
00034b 2f2e      	MOV  R18,R30
00034c 3020      	CPI  R18,0
00034d f151      	BREQ _0x65
00034e 2fe2      	MOV  R30,R18
00034f e0f0      	LDI  R31,0
000350 31e0      	CPI  R30,LOW(0x10)
000351 e0a0      	LDI  R26,HIGH(0x10)
000352 07fa      	CPC  R31,R26
000353 f429      	BRNE _0x69
000354 e0e4      	LDI  R30,LOW(4)
000355 9fe3      	MUL  R30,R19
000356 01f0      	MOVW R30,R0
000357 9631      	ADIW R30,1
000358 c01a      	RJMP _0xEC
                 _0x69:
000359 32e0      	CPI  R30,LOW(0x20)
00035a e0a0      	LDI  R26,HIGH(0x20)
00035b 07fa      	CPC  R31,R26
00035c f429      	BRNE _0x6A
00035d e0e4      	LDI  R30,LOW(4)
00035e 9fe3      	MUL  R30,R19
00035f 01f0      	MOVW R30,R0
000360 9632      	ADIW R30,2
000361 c011      	RJMP _0xEC
                 _0x6A:
000362 34e0      	CPI  R30,LOW(0x40)
000363 e0a0      	LDI  R26,HIGH(0x40)
000364 07fa      	CPC  R31,R26
000365 f429      	BRNE _0x6B
000366 e0e4      	LDI  R30,LOW(4)
000367 9fe3      	MUL  R30,R19
000368 01f0      	MOVW R30,R0
000369 9633      	ADIW R30,3
00036a c008      	RJMP _0xEC
                 _0x6B:
00036b 38e0      	CPI  R30,LOW(0x80)
00036c e0a0      	LDI  R26,HIGH(0x80)
00036d 07fa      	CPC  R31,R26
00036e f429      	BRNE _0x68
00036f e0e4      	LDI  R30,LOW(4)
000370 9fe3      	MUL  R30,R19
000371 01f0      	MOVW R30,R0
000372 9634      	ADIW R30,4
                 _0xEC:
000373 01af      	MOVW R20,R30
                 _0x68:
000374 2fe4      	MOV  R30,R20
000375 940e 0be6 	CALL __LOADLOCR6
000377 c0a1      	RJMP _0x2060005
                 _0x65:
000378 0f00      	LSL  R16
000379 1f11      	ROL  R17
00037a 5f3f      	SUBI R19,-1
00037b cfc7      	RJMP _0x63
                 _0x64:
00037c 940e 0be6 	CALL __LOADLOCR6
00037e c09a      	RJMP _0x2060005
                 _Changenum:
00037f 931a      	ST   -Y,R17
                 ;	num -> Y+1
                 ;	return_num -> R17
000380 e010      	LDI  R17,0
000381 81e9      	LDD  R30,Y+1
000382 30e0      	CPI  R30,0
000383 f411      	BRNE _0x6D
000384 e010      	LDI  R17,LOW(0)
000385 c049      	RJMP _0x6E
                 _0x6D:
000386 940e 09df 	CALL SUBOPT_0x8
000388 9730      	SBIW R30,0
000389 f421      	BRNE _0x6F
00038a 940e 09e6 	CALL SUBOPT_0x9
00038c 5fe4      	SUBI R30,-LOW(12)
00038d c040      	RJMP _0xED
                 _0x6F:
00038e 940e 09e6 	CALL SUBOPT_0x9
000390 9730      	SBIW R30,0
000391 f449      	BRNE _0x71
000392 940e 09e6 	CALL SUBOPT_0x9
000394 0fee      	LSL  R30
000395 0fee      	LSL  R30
000396 2f6e      	MOV  R22,R30
000397 940e 09df 	CALL SUBOPT_0x8
000399 0fe6      	ADD  R30,R22
00039a c033      	RJMP _0xED
                 _0x71:
00039b 940e 09e6 	CALL SUBOPT_0x9
00039d 30e1      	CPI  R30,LOW(0x1)
00039e e0a0      	LDI  R26,HIGH(0x1)
00039f 07fa      	CPC  R31,R26
0003a0 f451      	BRNE _0x73
0003a1 940e 09e6 	CALL SUBOPT_0x9
0003a3 940e 09ed 	CALL SUBOPT_0xA
0003a5 01db      	MOVW R26,R22
0003a6 0fae      	ADD  R26,R30
0003a7 1fbf      	ADC  R27,R31
0003a8 e0e1      	LDI  R30,LOW(1)
0003a9 e0f0      	LDI  R31,HIGH(1)
0003aa c01f      	RJMP _0xEE
                 _0x73:
0003ab 940e 09e6 	CALL SUBOPT_0x9
0003ad 30e2      	CPI  R30,LOW(0x2)
0003ae e0a0      	LDI  R26,HIGH(0x2)
0003af 07fa      	CPC  R31,R26
0003b0 f451      	BRNE _0x75
0003b1 940e 09e6 	CALL SUBOPT_0x9
0003b3 940e 09ed 	CALL SUBOPT_0xA
0003b5 01db      	MOVW R26,R22
0003b6 0fae      	ADD  R26,R30
0003b7 1fbf      	ADC  R27,R31
0003b8 e0e2      	LDI  R30,LOW(2)
0003b9 e0f0      	LDI  R31,HIGH(2)
0003ba c00f      	RJMP _0xEE
                 _0x75:
0003bb 940e 09e6 	CALL SUBOPT_0x9
0003bd 30e3      	CPI  R30,LOW(0x3)
0003be e0a0      	LDI  R26,HIGH(0x3)
0003bf 07fa      	CPC  R31,R26
0003c0 f471      	BRNE _0x77
0003c1 940e 09e6 	CALL SUBOPT_0x9
0003c3 940e 09ed 	CALL SUBOPT_0xA
0003c5 01db      	MOVW R26,R22
0003c6 0fae      	ADD  R26,R30
0003c7 1fbf      	ADC  R27,R31
0003c8 e0e3      	LDI  R30,LOW(3)
0003c9 e0f0      	LDI  R31,HIGH(3)
                 _0xEE:
0003ca 940e 0bd4 	CALL __SWAPW12
0003cc 1bea      	SUB  R30,R26
0003cd 0bfb      	SBC  R31,R27
                 _0xED:
0003ce 2f1e      	MOV  R17,R30
                 _0x77:
                 _0x6E:
0003cf 301b      	CPI  R17,11
0003d0 f419      	BRNE _0x78
0003d1 e010      	LDI  R17,LOW(0)
0003d2 e0e1      	LDI  R30,LOW(1)
0003d3 2e5e      	MOV  R5,R30
                 _0x78:
0003d4 2fe1      	MOV  R30,R17
0003d5 8118      	LDD  R17,Y+0
0003d6 c096      	RJMP _0x2060004
                 _OUTFND:
0003d7 940e 0be1 	CALL __SAVELOCR4
                 ;	t -> Y+4
                 ;	FND0 -> R17
                 ;	FND1 -> R16
                 ;	FND2 -> R19
                 ;	FND3 -> R18
0003d9 81ac      	LDD  R26,Y+4
0003da 81bd      	LDD  R27,Y+4+1
0003db eee8      	LDI  R30,LOW(1000)
0003dc e0f3      	LDI  R31,HIGH(1000)
0003dd 940e 0b90 	CALL __DIVW21U
0003df 2f2e      	MOV  R18,R30
0003e0 81ac      	LDD  R26,Y+4
0003e1 81bd      	LDD  R27,Y+4+1
0003e2 eee8      	LDI  R30,LOW(1000)
0003e3 e0f3      	LDI  R31,HIGH(1000)
0003e4 940e 0ba8 	CALL __MODW21U
0003e6 01df      	MOVW R26,R30
0003e7 e6e4      	LDI  R30,LOW(100)
0003e8 e0f0      	LDI  R31,HIGH(100)
0003e9 940e 0b90 	CALL __DIVW21U
0003eb 2f3e      	MOV  R19,R30
0003ec 81ac      	LDD  R26,Y+4
0003ed 81bd      	LDD  R27,Y+4+1
0003ee e6e4      	LDI  R30,LOW(100)
0003ef e0f0      	LDI  R31,HIGH(100)
0003f0 940e 0ba8 	CALL __MODW21U
0003f2 01df      	MOVW R26,R30
0003f3 e0ea      	LDI  R30,LOW(10)
0003f4 e0f0      	LDI  R31,HIGH(10)
0003f5 940e 0b90 	CALL __DIVW21U
0003f7 2f0e      	MOV  R16,R30
0003f8 81ac      	LDD  R26,Y+4
0003f9 81bd      	LDD  R27,Y+4+1
0003fa e0ea      	LDI  R30,LOW(10)
0003fb e0f0      	LDI  R31,HIGH(10)
0003fc 940e 0ba8 	CALL __MODW21U
0003fe 2f1e      	MOV  R17,R30
0003ff 91e0 05bf 	LDS  R30,_Port_fnd
000401 b9e3      	OUT  0x3,R30
000402 2fe1      	MOV  R30,R17
000403 940e 09f1 	CALL SUBOPT_0xB
                +
000405 91e0 05c1+LDS R30 , _Port_fnd + ( 2 )
                 	__GETB1MN _Port_fnd,2
000407 b9e3      	OUT  0x3,R30
000408 2fe0      	MOV  R30,R16
000409 940e 09f1 	CALL SUBOPT_0xB
                +
00040b 91e0 05c3+LDS R30 , _Port_fnd + ( 4 )
                 	__GETB1MN _Port_fnd,4
00040d b9e3      	OUT  0x3,R30
00040e 2fe3      	MOV  R30,R19
00040f 940e 09f1 	CALL SUBOPT_0xB
                +
000411 91e0 05c5+LDS R30 , _Port_fnd + ( 6 )
                 	__GETB1MN _Port_fnd,6
000413 b9e3      	OUT  0x3,R30
000414 2fe2      	MOV  R30,R18
000415 940e 09f1 	CALL SUBOPT_0xB
                 _0x2060006:
000417 940e 0be8 	CALL __LOADLOCR4
                 _0x2060005:
000419 9626      	ADIW R28,6
00041a 9508      	RET
                 _buzzer_play_function:
                 ;	t -> Y+0
00041b 81e8      	LD   R30,Y
00041c 81f9      	LDD  R31,Y+1
00041d 30e1      	CPI  R30,LOW(0x1)
00041e e0a0      	LDI  R26,HIGH(0x1)
00041f 07fa      	CPC  R31,R26
000420 f429      	BRNE _0x7C
000421 e7e4      	LDI  R30,LOW(1908)
000422 e0f7      	LDI  R31,HIGH(1908)
000423 940e 09f8 	CALL SUBOPT_0xC
000425 c047      	RJMP _0x7B
                 _0x7C:
000426 30e2      	CPI  R30,LOW(0x2)
000427 e0a0      	LDI  R26,HIGH(0x2)
000428 07fa      	CPC  R31,R26
000429 f429      	BRNE _0x7D
00042a eae4      	LDI  R30,LOW(1700)
00042b e0f6      	LDI  R31,HIGH(1700)
00042c 940e 09f8 	CALL SUBOPT_0xC
00042e c03e      	RJMP _0x7B
                 _0x7D:
00042f 30e3      	CPI  R30,LOW(0x3)
000430 e0a0      	LDI  R26,HIGH(0x3)
000431 07fa      	CPC  R31,R26
000432 f429      	BRNE _0x7E
000433 eeeb      	LDI  R30,LOW(1515)
000434 e0f5      	LDI  R31,HIGH(1515)
000435 940e 09f8 	CALL SUBOPT_0xC
000437 c035      	RJMP _0x7B
                 _0x7E:
000438 30e4      	CPI  R30,LOW(0x4)
000439 e0a0      	LDI  R26,HIGH(0x4)
00043a 07fa      	CPC  R31,R26
00043b f429      	BRNE _0x7F
00043c e9e8      	LDI  R30,LOW(1432)
00043d e0f5      	LDI  R31,HIGH(1432)
00043e 940e 09f8 	CALL SUBOPT_0xC
000440 c02c      	RJMP _0x7B
                 _0x7F:
000441 30e5      	CPI  R30,LOW(0x5)
000442 e0a0      	LDI  R26,HIGH(0x5)
000443 07fa      	CPC  R31,R26
000444 f429      	BRNE _0x80
000445 efeb      	LDI  R30,LOW(1275)
000446 e0f4      	LDI  R31,HIGH(1275)
000447 940e 09f8 	CALL SUBOPT_0xC
000449 c023      	RJMP _0x7B
                 _0x80:
00044a 30e6      	CPI  R30,LOW(0x6)
00044b e0a0      	LDI  R26,HIGH(0x6)
00044c 07fa      	CPC  R31,R26
00044d f429      	BRNE _0x81
00044e e7e0      	LDI  R30,LOW(1136)
00044f e0f4      	LDI  R31,HIGH(1136)
000450 940e 09f8 	CALL SUBOPT_0xC
000452 c01a      	RJMP _0x7B
                 _0x81:
000453 30e7      	CPI  R30,LOW(0x7)
000454 e0a0      	LDI  R26,HIGH(0x7)
000455 07fa      	CPC  R31,R26
000456 f429      	BRNE _0x82
000457 efe4      	LDI  R30,LOW(1012)
000458 e0f3      	LDI  R31,HIGH(1012)
000459 940e 09f8 	CALL SUBOPT_0xC
00045b c011      	RJMP _0x7B
                 _0x82:
00045c 30e8      	CPI  R30,LOW(0x8)
00045d e0a0      	LDI  R26,HIGH(0x8)
00045e 07fa      	CPC  R31,R26
00045f f429      	BRNE _0x83
000460 ebea      	LDI  R30,LOW(954)
000461 e0f3      	LDI  R31,HIGH(954)
000462 940e 09f8 	CALL SUBOPT_0xC
000464 c008      	RJMP _0x7B
                 _0x83:
000465 30e9      	CPI  R30,LOW(0x9)
000466 e0a0      	LDI  R26,HIGH(0x9)
000467 07fa      	CPC  R31,R26
000468 f421      	BRNE _0x85
000469 e5e2      	LDI  R30,LOW(850)
00046a e0f3      	LDI  R31,HIGH(850)
00046b 940e 09f8 	CALL SUBOPT_0xC
                 _0x85:
                 _0x7B:
                 _0x2060004:
00046d 9622      	ADIW R28,2
00046e 9508      	RET
                 ;	num -> Y+1
                 ;	str -> R17
                 ;
                 ;/*»óÅÂ Á¤ÀÇ*/
                 ;#define NONE 0
                 ;#define START 1
                 ;#define INPUT_PHONE 2
                 ;#define INPUT_PHONE_INIT 3
                 ;#define CHECK_PNUM 4
                 ;#define CHECK_PNUM_INIT 5
                 ;#define EXIT_CHOOSE 6
                 ;#define CHECK_PNUM_OUT 7
                 ;#define CHECK_PNUM_OUT_INIT 8
                 ;#define INPUT_PHONE_OUT 9
                 ;#define INPUT_PHONE_OUT_INIT 10
                 ;
                 ;unsigned char ti_Cnt_1ms;  //ÃÊÀ½ÆÄ ¼¾¼­±¸µ¿À»À§ÇÑ cnt
                 ;unsigned char LCD_DelCnt_1ms;
                 ;unsigned char Distance_cnt_1ms; // ½Ã°£Áö³ª¸é ÀÚ¸®ºñ¿òÃ³¸®¸¦ À§ÇÑ cnt
                 ;
                 ;void Timer0_Init()  //ÃÊÀ½ÆÄ ¼¾¼­±¸µ¿ Å¸ÀÌ¸Ó ÀÎÅÍ·´Æ®
                 ; 0000 001B {
                 _Timer0_Init:
                 ; 0000 001C     TCCR0 = (1<<WGM01)|(1<<CS00)|(1<<CS01)|(1<<CS02);
00046f e0ef      	LDI  R30,LOW(15)
000470 bfe3      	OUT  0x33,R30
                 ; 0000 001D     TCNT0 = 0x00;
000471 e0e0      	LDI  R30,LOW(0)
000472 bfe2      	OUT  0x32,R30
                 ; 0000 001E     OCR0 = 100;
000473 e6e4      	LDI  R30,LOW(100)
000474 bfe1      	OUT  0x31,R30
                 ; 0000 001F     TIMSK = (1<<OCIE0);
000475 e0e2      	LDI  R30,LOW(2)
                 _0x2060003:
000476 bfe7      	OUT  0x37,R30
                 ; 0000 0020 }
000477 9508      	RET
                 ;
                 ;interrupt[TIM0_COMP] void timer0_comp(void)    //½ÇÁ¦ Ä«¿îÆ® Áõ°¡
                 ; 0000 0023 {
                 _timer0_comp:
000478 93ea      	ST   -Y,R30
000479 b7ef      	IN   R30,SREG
                 ; 0000 0024     ti_Cnt_1ms++;
00047a 9443      	INC  R4
                 ; 0000 0025     LCD_DelCnt_1ms++;
00047b 9473      	INC  R7
                 ; 0000 0026 
                 ; 0000 0027 }
00047c bfef      	OUT  SREG,R30
00047d 91e9      	LD   R30,Y+
00047e 9518      	RETI
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;int SRF_Run(char Sonar_Addr){    //SRF ÁÖ¼Ò·Î °ªÀ» ¹Þ¾Æ¿È
                 ; 0000 002E int SRF_Run(char Sonar_Addr){
                 _SRF_Run:
                 ; 0000 002F     unsigned char res;
                 ; 0000 0030     unsigned int Sonar_range;
                 ; 0000 0031 
                 ; 0000 0032     res = getRange(Sonar_Addr, &Sonar_range);
00047f 940e 0be1 	CALL __SAVELOCR4
                 ;	Sonar_Addr -> Y+4
                 ;	res -> R17
                 ;	Sonar_range -> R18,R19
000481 81ec      	LDD  R30,Y+4
000482 93ea      	ST   -Y,R30
000483 b7ed      	IN   R30,SPL
000484 b7fe      	IN   R31,SPH
000485 9731      	SBIW R30,1
000486 93fa      	ST   -Y,R31
000487 93ea      	ST   -Y,R30
000488 933f      	PUSH R19
000489 932f      	PUSH R18
00048a de1a      	RCALL _getRange
00048b 912f      	POP  R18
00048c 913f      	POP  R19
00048d 2f1e      	MOV  R17,R30
                 ; 0000 0033         if(res)
00048e 3010      	CPI  R17,0
00048f f031      	BREQ _0x94
                 ; 0000 0034         {
                 ; 0000 0035             return 0;
000490 e0e0      	LDI  R30,LOW(0)
000491 e0f0      	LDI  R31,HIGH(0)
000492 940e 0be8 	CALL __LOADLOCR4
000494 940c 0822 	JMP  _0x2060002
                 ; 0000 0036         }
                 ; 0000 0037         else if(LCD_DelCnt_1ms > 100)
                 _0x94:
000496 e6e4      	LDI  R30,LOW(100)
000497 15e7      	CP   R30,R7
000498 f430      	BRSH _0x96
                 ; 0000 0038         {
                 ; 0000 0039             LCD_DelCnt_1ms = 0;
000499 2477      	CLR  R7
                 ; 0000 003A             return Sonar_range;
00049a 01f9      	MOVW R30,R18
00049b 940e 0be8 	CALL __LOADLOCR4
00049d 940c 0822 	JMP  _0x2060002
                 ; 0000 003B         }
                 ; 0000 003C }
                 _0x96:
00049f 940e 0be8 	CALL __LOADLOCR4
0004a1 940c 0822 	JMP  _0x2060002
                 ;
                 ;
                 ;void main(void)
                 ; 0000 0040 {
                 _main:
                 ; 0000 0041     unsigned char res;
                 ; 0000 0042     char Sonar_Addr = 0xE0;
                 ; 0000 0043     unsigned int Sonar_range[3]={0,};
                 ; 0000 0044     char Message[40];
                 ; 0000 0045     int readCnt = 0;
                 ; 0000 0046     int t=0; //Å°ÆÐµå·Î ¹ÞÀº ¼ýÀÚ
                 ; 0000 0047     int count =0; //count º¯¼ö
                 ; 0000 0048     int finalnum=0; //FND¿¡ Ãâ·ÂÀ¸·Î ³Ö¾îÁÙ º¯¼ö
                 ; 0000 0049     int fnd[12]={0,};
                 ; 0000 004A     signed int angle=0; // ¼­ºê¸ðÅÍ °¢µµ·Î ³ÖÀ» º¯¼ö
                 ; 0000 004B     char STATE = START;
                 ; 0000 004C     char user_state[3] = {'X','X','X'};
                 ; 0000 004D     int i = 0;
                 ; 0000 004E     char user_pnumber[3][11]; //À¯Àú ºñ¹Ð¹øÈ£ ÀúÀå
                 ; 0000 004F     char check_pnumber[11]; //ºñ¹Ð¹øÈ£ ÀÏÄ¡È®ÀÎÀ»À§ÇÑ °ø°£
                 ; 0000 0050     char user_name; //1~3¹øÁß ¾î´ÀÁÂ¼® À¯Àú¸¦ °¡¸£Å°´ÂÁö ÀúÀå
                 ; 0000 0051     char num[3][11];
                 ; 0000 0052     char empty_cnt[3]={0,};
                 ; 0000 0053 
                 ; 0000 0054     DDRD |= 0x03;
0004a3 97ef      	SBIW R28,63
0004a4 97ef      	SBIW R28,63
0004a5 97a5      	SBIW R28,37
0004a6 ea83      	LDI  R24,163
0004a7 e0a0      	LDI  R26,LOW(0)
0004a8 e0b0      	LDI  R27,HIGH(0)
0004a9 ebe6      	LDI  R30,LOW(_0x97*2)
0004aa e0f0      	LDI  R31,HIGH(_0x97*2)
0004ab 940e 0bed 	CALL __INITLOCB
                 ;	res -> R17
                 ;	Sonar_Addr -> R16
                 ;	Sonar_range -> Y+157
                 ;	Message -> Y+117
                 ;	readCnt -> R18,R19
                 ;	t -> R20,R21
                 ;	count -> Y+115
                 ;	finalnum -> Y+113
                 ;	fnd -> Y+89
                 ;	angle -> Y+87
                 ;	STATE -> Y+86
                 ;	user_state -> Y+83
                 ;	i -> Y+81
                 ;	user_pnumber -> Y+48
                 ;	check_pnumber -> Y+37
                 ;	user_name -> Y+36
                 ;	num -> Y+3
                 ;	empty_cnt -> Y+0
0004ad ee00      	LDI  R16,224
                +
0004ae e020     +LDI R18 , LOW ( 0 )
0004af e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
0004b0 e040     +LDI R20 , LOW ( 0 )
0004b1 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
0004b2 b3e1      	IN   R30,0x11
0004b3 60e3      	ORI  R30,LOW(0x3)
0004b4 bbe1      	OUT  0x11,R30
                 ; 0000 0055     LCD_Init();
0004b5 dd09      	RCALL _LCD_Init
                 ; 0000 0056     Timer0_Init();
0004b6 dfb8      	RCALL _Timer0_Init
                 ; 0000 0057     FND_PORT_Init(); // Æ÷Æ®µé ÀÔÃâ·Â ÃÊ±â ¼³Á¤
0004b7 de25      	RCALL _FND_PORT_Init
                 ; 0000 0058     Init_TWI();
0004b8 dd15      	RCALL _Init_TWI
                 ; 0000 0059     Init_Timer1();
0004b9 de38      	RCALL _Init_Timer1
                 ; 0000 005A     delay_ms(1000);
0004ba 940e 09fc 	CALL SUBOPT_0xD
                 ; 0000 005B     SREG |= 0x80;
0004bc 9478      	BSET 7
                 ; 0000 005C 
                 ; 0000 005D     OCR1A =4710;
0004bd e6e6      	LDI  R30,LOW(4710)
0004be e1f2      	LDI  R31,HIGH(4710)
0004bf bdfb      	OUT  0x2A+1,R31
0004c0 bdea      	OUT  0x2A,R30
                 ; 0000 005E     startRanging(Sonar_Addr);
0004c1 930a      	ST   -Y,R16
0004c2 ddd9      	RCALL _startRanging
                 ; 0000 005F     ti_Cnt_1ms = 0;
0004c3 2444      	CLR  R4
                 ; 0000 0060     LCD_DelCnt_1ms = 0;
0004c4 2477      	CLR  R7
                 ; 0000 0061 
                 ; 0000 0062 
                 ; 0000 0063 
                 ; 0000 0064     while(1)
                 _0x98:
                 ; 0000 0065     {
                 ; 0000 0066         if(ti_Cnt_1ms > 100)  //2ÃÊ¿¡ ÇÑ¹øÁ¤µµ ÇÑ¼¾¼­¾¿ °»½Å
0004c5 e6e4      	LDI  R30,LOW(100)
0004c6 15e4      	CP   R30,R4
0004c7 f010      	BRLO PC+3
0004c8 940c 053e 	JMP _0x9B
                 ; 0000 0067         {
                 ; 0000 0068             if (Sonar_Addr == 0xE0){
0004ca 3e00      	CPI  R16,224
0004cb f459      	BRNE _0x9C
                 ; 0000 0069                 Sonar_Addr = 0xEC;
0004cc ee0c      	LDI  R16,LOW(236)
                 ; 0000 006A                 startRanging(Sonar_Addr);
0004cd 930a      	ST   -Y,R16
0004ce ddcd      	RCALL _startRanging
                 ; 0000 006B                 Sonar_range[0] = SRF_Run(Sonar_Addr);
0004cf 930a      	ST   -Y,R16
0004d0 dfae      	RCALL _SRF_Run
                +
0004d1 01de     +MOVW R26 , R28
0004d2 56a3     +SUBI R26 , LOW ( - 157 )
0004d3 4fbf     +SBCI R27 , HIGH ( - 157 )
0004d4 93ed     +ST X + , R30
0004d5 93fc     +ST X , R31
                 	__PUTW1SX 157
                 ; 0000 006C 
                 ; 0000 006D 
                 ; 0000 006E             }
                 ; 0000 006F             else if (Sonar_Addr == 0xEC) {
0004d6 c019      	RJMP _0x9D
                 _0x9C:
0004d7 3e0c      	CPI  R16,236
0004d8 f459      	BRNE _0x9E
                 ; 0000 0070                 Sonar_Addr = 0xE2;
0004d9 ee02      	LDI  R16,LOW(226)
                 ; 0000 0071                 startRanging(Sonar_Addr);
0004da 940e 09ff 	CALL SUBOPT_0xE
                 ; 0000 0072                 Sonar_range[1] = SRF_Run(Sonar_Addr);
0004dc 9632      	ADIW R30,2
0004dd 93ff      	PUSH R31
0004de 93ef      	PUSH R30
0004df 930a      	ST   -Y,R16
0004e0 df9e      	RCALL _SRF_Run
0004e1 91af      	POP  R26
0004e2 91bf      	POP  R27
0004e3 c00a      	RJMP _0xEF
                 ; 0000 0073 
                 ; 0000 0074             }
                 ; 0000 0075             else{
                 _0x9E:
                 ; 0000 0076                 Sonar_Addr = 0xE0;
0004e4 ee00      	LDI  R16,LOW(224)
                 ; 0000 0077                 startRanging(Sonar_Addr);
0004e5 940e 09ff 	CALL SUBOPT_0xE
                 ; 0000 0078                 Sonar_range[2] = SRF_Run(Sonar_Addr);
0004e7 9634      	ADIW R30,4
0004e8 93ff      	PUSH R31
0004e9 93ef      	PUSH R30
0004ea 930a      	ST   -Y,R16
0004eb df93      	RCALL _SRF_Run
0004ec 91af      	POP  R26
0004ed 91bf      	POP  R27
                 _0xEF:
0004ee 93ed      	ST   X+,R30
0004ef 93fc      	ST   X,R31
                 ; 0000 0079 
                 ; 0000 007A             }
                 _0x9D:
                 ; 0000 007B 
                 ; 0000 007C 
                 ; 0000 007D             /*   ÃÊÀ½ÆÄ È® ÀÎ *//*
                 ; 0000 007E             LCD_Clear();
                 ; 0000 007F             sprintf(Message, "%03dcm", Sonar_range[0]);
                 ; 0000 0080             LCD_Pos(0,0);
                 ; 0000 0081             LCD_Str(Message);
                 ; 0000 0082 
                 ; 0000 0083             sprintf(Message, "%03dcm", Sonar_range[1]);
                 ; 0000 0084             LCD_Pos(1,0);
                 ; 0000 0085             LCD_Str(Message);
                 ; 0000 0086 
                 ; 0000 0087             sprintf(Message, "%03dcm", Sonar_range[2]);
                 ; 0000 0088             LCD_Pos(1,5);
                 ; 0000 0089             LCD_Str(Message); */
                 ; 0000 008A 
                 ; 0000 008B 
                 ; 0000 008C             for (i=0;i<3;i++){
0004f0 940e 0a06 	CALL SUBOPT_0xF
                 _0xA1:
0004f2 940e 0a0d 	CALL SUBOPT_0x10
0004f4 9713      	SBIW R26,3
0004f5 f014      	BRLT PC+3
0004f6 940c 053c 	JMP _0xA2
                 ; 0000 008D                 if ( (Sonar_range[i] > 30)&&(user_state[i] == 'O') ){
0004f8 940e 0a14 	CALL SUBOPT_0x11
0004fa 01de      	MOVW R26,R28
0004fb 56a3      	SUBI R26,LOW(-(157))
0004fc 4fbf      	SBCI R27,HIGH(-(157))
0004fd 940e 0a1b 	CALL SUBOPT_0x12
0004ff 977f      	SBIW R30,31
000500 f028      	BRLO _0xA4
000501 940e 0a22 	CALL SUBOPT_0x13
000503 91ac      	LD   R26,X
000504 34af      	CPI  R26,LOW(0x4F)
000505 f009      	BREQ _0xA5
                 _0xA4:
000506 c022      	RJMP _0xA3
                 _0xA5:
                 ; 0000 008E                    empty_cnt[i] ++;
000507 940e 0a29 	CALL SUBOPT_0x14
000509 91ec      	LD   R30,X
00050a 5fef      	SUBI R30,-LOW(1)
00050b 93ec      	ST   X,R30
                 ; 0000 008F                 sprintf(Message, "%03dcm", empty_cnt[i]);
00050c 940e 0a2e 	CALL SUBOPT_0x15
                +
00050e e7e1     +LDI R30 , LOW ( 2 * _0x0 + ( 21 ) )
00050f e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 21 ) )
                 	__POINTW1FN _0x0,21
000510 93fa      	ST   -Y,R31
000511 93ea      	ST   -Y,R30
                +
000512 01fe     +MOVW R30 , R28
000513 5aeb     +SUBI R30 , LOW ( - 85 )
000514 4fff     +SBCI R31 , HIGH ( - 85 )
000515 9001     +LD R0 , Z +
000516 81f0     +LD R31 , Z
000517 2de0     +MOV R30 , R0
                 	__GETW1SX 85
000518 01de      	MOVW R26,R28
000519 9614      	ADIW R26,4
00051a 0fae      	ADD  R26,R30
00051b 1fbf      	ADC  R27,R31
00051c 91ec      	LD   R30,X
00051d 940e 0a34 	CALL SUBOPT_0x16
00051f e084      	LDI  R24,4
000520 940e 0959 	CALL _sprintf
000522 9628      	ADIW R28,8
                 ; 0000 0090                 LCD_Clear();
000523 940e 0a3a 	CALL SUBOPT_0x17
                 ; 0000 0091                 LCD_Pos(0,0);
                 ; 0000 0092                 LCD_Str(Message);
000525 940e 0a2e 	CALL SUBOPT_0x15
000527 dc82      	RCALL _LCD_Str
                 ; 0000 0093                 }
                 ; 0000 0094                 else empty_cnt[i] =0;
000528 c004      	RJMP _0xA6
                 _0xA3:
000529 940e 0a29 	CALL SUBOPT_0x14
00052b e0e0      	LDI  R30,LOW(0)
00052c 93ec      	ST   X,R30
                 ; 0000 0095 
                 ; 0000 0096                 if (empty_cnt[i] > 15 ) {
                 _0xA6:
00052d 940e 0a29 	CALL SUBOPT_0x14
00052f 91ac      	LD   R26,X
000530 31a0      	CPI  R26,LOW(0x10)
000531 f020      	BRLO _0xA7
                 ; 0000 0097                  user_state[i] ='E';
000532 940e 0a22 	CALL SUBOPT_0x13
000534 e4e5      	LDI  R30,LOW(69)
000535 93ec      	ST   X,R30
                 ; 0000 0098                 }
                 ; 0000 0099             }
                 _0xA7:
000536 940e 0a41 	CALL SUBOPT_0x18
000538 9631      	ADIW R30,1
000539 93fe      	ST   -X,R31
00053a 93ee      	ST   -X,R30
00053b cfb6      	RJMP _0xA1
                 _0xA2:
                 ; 0000 009A 
                 ; 0000 009B 
                 ; 0000 009C 
                 ; 0000 009D             LCD_DelCnt_1ms = 0;
00053c 2477      	CLR  R7
                 ; 0000 009E             ti_Cnt_1ms = 0;
00053d 2444      	CLR  R4
                 ; 0000 009F         }
                 ; 0000 00A0         t= Changenum(KeyScan());
                 _0x9B:
00053e ddfb      	RCALL _KeyScan
00053f 93ea      	ST   -Y,R30
000540 de3e      	RCALL _Changenum
000541 2f4e      	MOV  R20,R30
000542 2755      	CLR  R21
                 ; 0000 00A1         if(t<11 & t>0 ) //¼ýÀÚ°¡ ´­¸®¸é »õ·Î¿î °ªÀ» ÀúÀåÇÏµµ·Ï count°ª ¼³Á¤
000543 01da      	MOVW R26,R20
000544 e0eb      	LDI  R30,LOW(11)
000545 e0f0      	LDI  R31,HIGH(11)
000546 940e 0b77 	CALL __LTW12
000548 2e0e      	MOV  R0,R30
000549 e0e0      	LDI  R30,LOW(0)
00054a e0f0      	LDI  R31,HIGH(0)
00054b 940e 0b7d 	CALL __GTW12
00054d 21e0      	AND  R30,R0
00054e f029      	BREQ _0xA8
                 ; 0000 00A2             {
                 ; 0000 00A3                 count++;
00054f 940e 0a47 	CALL SUBOPT_0x19
                 ; 0000 00A4                 delay_ms(50);
000551 940e 0a50 	CALL SUBOPT_0x1A
                 ; 0000 00A5             }
                 ; 0000 00A6         else if(t==0 & zero_flag) //zero_flag°¡ ½ÇÇàµÈ °æ¿ì¿¡¸¸ 0À¸·Î ÀÔ·Â
000553 c029      	RJMP _0xA9
                 _0xA8:
000554 01da      	MOVW R26,R20
000555 e0e0      	LDI  R30,LOW(0)
000556 e0f0      	LDI  R31,HIGH(0)
000557 940e 0b71 	CALL __EQW12
000559 21e5      	AND  R30,R5
00055a f031      	BREQ _0xAA
                 ; 0000 00A7             {
                 ; 0000 00A8                 count++;
00055b 940e 0a47 	CALL SUBOPT_0x19
                 ; 0000 00A9                 zero_flag =0; //°è¼Ó 0À¸·Î ÀÔ·ÂµÈ »óÅÂ°¡ ¾ÈµÇ°Ô zero_flag¸¦ ´Ù½Ã 0À¸·Î
00055d 2455      	CLR  R5
                 ; 0000 00AA                 delay_ms(50);
00055e 940e 0a50 	CALL SUBOPT_0x1A
                 ; 0000 00AB             }
                 ; 0000 00AC         else if(t==13) // FND Ãâ·Â¼ýÀÚ ¸®¼Â¹öÆ° ±â´É
000560 c01c      	RJMP _0xAB
                 _0xAA:
000561 e0ed      	LDI  R30,LOW(13)
000562 e0f0      	LDI  R31,HIGH(13)
000563 17e4      	CP   R30,R20
000564 07f5      	CPC  R31,R21
000565 f481      	BRNE _0xAC
                 ; 0000 00AD             {
                 ; 0000 00AE                 fnd[0]=0,fnd[1]=0,fnd[2]=0,fnd[3]=0;
000566 940e 0a53 	CALL SUBOPT_0x1B
000568 940e 0a5a 	CALL SUBOPT_0x1C
00056a e0e0      	LDI  R30,LOW(0)
                +
00056b 01de     +MOVW R26 , R28
00056c 5aa3     +SUBI R26 , LOW ( - 93 )
00056d 4fbf     +SBCI R27 , HIGH ( - 93 )
00056e 93ed     +ST X + , R30
00056f 93ec     +ST X , R30
                 	__CLRW1SX 93
                +
000570 01de     +MOVW R26 , R28
000571 5aa1     +SUBI R26 , LOW ( - 95 )
000572 4fbf     +SBCI R27 , HIGH ( - 95 )
000573 93ed     +ST X + , R30
000574 93ec     +ST X , R30
                 	__CLRW1SX 95
                 ; 0000 00AF             }
                 ; 0000 00B0         else if (t ==14)
000575 c007      	RJMP _0xAD
                 _0xAC:
000576 e0ee      	LDI  R30,LOW(14)
000577 e0f0      	LDI  R31,HIGH(14)
000578 17e4      	CP   R30,R20
000579 07f5      	CPC  R31,R21
00057a f411      	BRNE _0xAE
                 ; 0000 00B1             {
                 ; 0000 00B2                STATE = START;
00057b 940e 0a61 	CALL SUBOPT_0x1D
                 ; 0000 00B3             }
                 ; 0000 00B4 
                 ; 0000 00B5         if((count%2) ==0){ //count°¡ Â¦¼öÀÏ¶§ µé¾î¿Â t°ªÀ» ÀúÀåÇÏ°í
                 _0xAE:
                 _0xAD:
                 _0xAB:
                 _0xA9:
                +
00057d 01de     +MOVW R26 , R28
00057e 58ad     +SUBI R26 , LOW ( - 115 )
00057f 4fbf     +SBCI R27 , HIGH ( - 115 )
000580 900d     +LD R0 , X +
000581 91bc     +LD R27 , X
000582 2da0     +MOV R26 , R0
                 	__GETW2SX 115
000583 e0e2      	LDI  R30,LOW(2)
000584 e0f0      	LDI  R31,HIGH(2)
000585 940e 0bab 	CALL __MODW21
000587 9730      	SBIW R30,0
000588 f599      	BRNE _0xAF
                 ; 0000 00B6                             //´Ù½Ã count¸¦ È¦¼ö·Î ¸¸µë
                 ; 0000 00B7             for(i=11;i>0;i--) {
000589 e0eb      	LDI  R30,LOW(11)
00058a e0f0      	LDI  R31,HIGH(11)
                +
00058b 01de     +MOVW R26 , R28
00058c 5aaf     +SUBI R26 , LOW ( - 81 )
00058d 4fbf     +SBCI R27 , HIGH ( - 81 )
00058e 93ed     +ST X + , R30
00058f 93fc     +ST X , R31
                 	__PUTW1SX 81
                 _0xB1:
000590 940e 0a0d 	CALL SUBOPT_0x10
000592 940e 0bdb 	CALL __CPW02
000594 f4f4      	BRGE _0xB2
                 ; 0000 00B8                 fnd[i] = fnd[i-1];
000595 940e 0a14 	CALL SUBOPT_0x11
000597 01de      	MOVW R26,R28
000598 5aa7      	SUBI R26,LOW(-(89))
000599 4fbf      	SBCI R27,HIGH(-(89))
00059a 0fee      	LSL  R30
00059b 1fff      	ROL  R31
00059c 0fea      	ADD  R30,R26
00059d 1ffb      	ADC  R31,R27
00059e 01bf      	MOVW R22,R30
00059f 940e 0a14 	CALL SUBOPT_0x11
0005a1 9731      	SBIW R30,1
0005a2 01de      	MOVW R26,R28
0005a3 5aa7      	SUBI R26,LOW(-(89))
0005a4 4fbf      	SBCI R27,HIGH(-(89))
0005a5 940e 0a1b 	CALL SUBOPT_0x12
0005a7 01db      	MOVW R26,R22
0005a8 93ed      	ST   X+,R30
0005a9 93fc      	ST   X,R31
                 ; 0000 00B9                 delay_us(10);
                +
0005aa e381     +LDI R24 , LOW ( 49 )
                +__DELAY_USB_LOOP :
0005ab 958a     +DEC R24
0005ac f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 49
                 ; 0000 00BA             }
0005ad 940e 0a41 	CALL SUBOPT_0x18
0005af 9731      	SBIW R30,1
0005b0 93fe      	ST   -X,R31
0005b1 93ee      	ST   -X,R30
0005b2 cfdd      	RJMP _0xB1
                 _0xB2:
                 ; 0000 00BB             fnd[0] = t;
                +
0005b3 01fe     +MOVW R30 , R28
0005b4 5ae7     +SUBI R30 , LOW ( - 89 )
0005b5 4fff     +SBCI R31 , HIGH ( - 89 )
0005b6 9341     +ST Z + , R20
0005b7 8350     +ST Z , R21
                 	__PUTWSRX 20,21,89
                 ; 0000 00BC             count++;
0005b8 940e 0a47 	CALL SUBOPT_0x19
                 ; 0000 00BD             delay_ms(50);
0005ba 940e 0a50 	CALL SUBOPT_0x1A
                 ; 0000 00BE         }
                 ; 0000 00BF         finalnum = 1000*fnd[3] + 100*fnd[2] + 10*fnd[1] + fnd[0];
                 _0xAF:
                +
0005bc 01fe     +MOVW R30 , R28
0005bd 5ae1     +SUBI R30 , LOW ( - 95 )
0005be 4fff     +SBCI R31 , HIGH ( - 95 )
0005bf 9001     +LD R0 , Z +
0005c0 81f0     +LD R31 , Z
0005c1 2de0     +MOV R30 , R0
                 	__GETW1SX 95
0005c2 eea8      	LDI  R26,LOW(1000)
0005c3 e0b3      	LDI  R27,HIGH(1000)
0005c4 940e 0b8b 	CALL __MULW12
0005c6 01bf      	MOVW R22,R30
                +
0005c7 01fe     +MOVW R30 , R28
0005c8 5ae3     +SUBI R30 , LOW ( - 93 )
0005c9 4fff     +SBCI R31 , HIGH ( - 93 )
0005ca 9001     +LD R0 , Z +
0005cb 81f0     +LD R31 , Z
0005cc 2de0     +MOV R30 , R0
                 	__GETW1SX 93
0005cd e6a4      	LDI  R26,LOW(100)
0005ce e0b0      	LDI  R27,HIGH(100)
0005cf 940e 0b8b 	CALL __MULW12
                +
0005d1 0f6e     +ADD R22 , R30
0005d2 1f7f     +ADC R23 , R31
                 	__ADDWRR 22,23,30,31
0005d3 940e 0a67 	CALL SUBOPT_0x1E
0005d5 e0aa      	LDI  R26,LOW(10)
0005d6 e0b0      	LDI  R27,HIGH(10)
0005d7 940e 0b8b 	CALL __MULW12
0005d9 0fe6      	ADD  R30,R22
0005da 1ff7      	ADC  R31,R23
0005db 940e 0a6e 	CALL SUBOPT_0x1F
0005dd 0fea      	ADD  R30,R26
0005de 1ffb      	ADC  R31,R27
                +
0005df 01de     +MOVW R26 , R28
0005e0 58af     +SUBI R26 , LOW ( - 113 )
0005e1 4fbf     +SBCI R27 , HIGH ( - 113 )
0005e2 93ed     +ST X + , R30
0005e3 93fc     +ST X , R31
                 	__PUTW1SX 113
                 ; 0000 00C0         OUTFND(finalnum); //FND Ãâ·Â
0005e4 93fa      	ST   -Y,R31
0005e5 93ea      	ST   -Y,R30
0005e6 ddf0      	RCALL _OUTFND
                 ; 0000 00C1         buzzer_play_function(t); //¼ýÀÚ¿¡ ¸Â´Â À½ Ãâ·Â
0005e7 935a      	ST   -Y,R21
0005e8 934a      	ST   -Y,R20
0005e9 de31      	RCALL _buzzer_play_function
                 ; 0000 00C2 
                 ; 0000 00C3 
                 ; 0000 00C4 
                 ; 0000 00C5 
                 ; 0000 00C6 
                 ; 0000 00C7 
                 ; 0000 00C8         switch (STATE) {  //LCDÃ³
                +
0005ea 01fe     +MOVW R30 , R28
0005eb 5aea     +SUBI R30 , LOW ( - 86 )
0005ec 4fff     +SBCI R31 , HIGH ( - 86 )
0005ed 81e0     +LD R30 , Z
                 	__GETB1SX 86
0005ee e0f0      	LDI  R31,0
                 ; 0000 00C9 
                 ; 0000 00CA             case NONE: //±âº» »óÅÂ
0005ef 9730      	SBIW R30,0
0005f0 f011      	BREQ PC+3
0005f1 940c 063b 	JMP _0xB6
                 ; 0000 00CB                 if (fnd[1] <=3 && fnd[1] >0 && fnd[0] == 10) {
0005f3 940e 0a75 	CALL SUBOPT_0x20
0005f5 9714      	SBIW R26,4
0005f6 f44c      	BRGE _0xB8
0005f7 940e 0a75 	CALL SUBOPT_0x20
0005f9 940e 0bdb 	CALL __CPW02
0005fb f424      	BRGE _0xB8
0005fc 940e 0a6e 	CALL SUBOPT_0x1F
0005fe 971a      	SBIW R26,10
0005ff f009      	BREQ _0xB9
                 _0xB8:
000600 c007      	RJMP _0xB7
                 _0xB9:
                 ; 0000 00CC                     user_name = fnd[1]-1;
000601 940e 0a67 	CALL SUBOPT_0x1E
000603 9731      	SBIW R30,1
000604 a3ec      	STD  Y+36,R30
                 ; 0000 00CD                     STATE=INPUT_PHONE_INIT ;
000605 e0e3      	LDI  R30,LOW(3)
000606 940e 0a7c 	CALL SUBOPT_0x21
                 ; 0000 00CE                 }
                 ; 0000 00CF                 if (fnd[1]==4 && fnd[0] == 10) { //Å»Ãâ ¸ðµå
                 _0xB7:
000608 940e 0a75 	CALL SUBOPT_0x20
00060a 9714      	SBIW R26,4
00060b f421      	BRNE _0xBB
00060c 940e 0a6e 	CALL SUBOPT_0x1F
00060e 971a      	SBIW R26,10
00060f f009      	BREQ _0xBC
                 _0xBB:
000610 c029      	RJMP _0xBA
                 _0xBC:
                 ; 0000 00D0                     LCD_Clear();
000611 940e 0a3a 	CALL SUBOPT_0x17
                 ; 0000 00D1                     LCD_Pos(0,0);
                 ; 0000 00D2                     LCD_Str("Choose Seat");
                +
000613 e1e5     +LDI R30 , LOW ( _0xBD + ( 0 ) )
000614 e0f5     +LDI R31 , HIGH ( _0xBD + ( 0 ) )
                 	__POINTW1MN _0xBD,0
000615 940e 0a81 	CALL SUBOPT_0x22
                 ; 0000 00D3                     LCD_Pos(1,0);
000617 940e 0a85 	CALL SUBOPT_0x23
                 ; 0000 00D4                     if (user_state[0] == 'O') LCD_Str("1  ");
                +
000619 01de     +MOVW R26 , R28
00061a 5aad     +SUBI R26 , LOW ( - 83 )
00061b 4fbf     +SBCI R27 , HIGH ( - 83 )
00061c 91ac     +LD R26 , X
                 	__GETB2SX 83
00061d 34af      	CPI  R26,LOW(0x4F)
00061e f421      	BRNE _0xBE
                +
00061f e2e1     +LDI R30 , LOW ( _0xBD + ( 12 ) )
000620 e0f5     +LDI R31 , HIGH ( _0xBD + ( 12 ) )
                 	__POINTW1MN _0xBD,12
000621 940e 0a81 	CALL SUBOPT_0x22
                 ; 0000 00D5                     if (user_state[1] == 'O') LCD_Str("2  ");
                 _0xBE:
                +
000623 01de     +MOVW R26 , R28
000624 5aac     +SUBI R26 , LOW ( - 84 )
000625 4fbf     +SBCI R27 , HIGH ( - 84 )
000626 91ac     +LD R26 , X
                 	__GETB2SX 84
000627 34af      	CPI  R26,LOW(0x4F)
000628 f421      	BRNE _0xBF
                +
000629 e2e5     +LDI R30 , LOW ( _0xBD + ( 16 ) )
00062a e0f5     +LDI R31 , HIGH ( _0xBD + ( 16 ) )
                 	__POINTW1MN _0xBD,16
00062b 940e 0a81 	CALL SUBOPT_0x22
                 ; 0000 00D6                     if (user_state[2] == 'O') LCD_Str("3  ");
                 _0xBF:
                +
00062d 01de     +MOVW R26 , R28
00062e 5aab     +SUBI R26 , LOW ( - 85 )
00062f 4fbf     +SBCI R27 , HIGH ( - 85 )
000630 91ac     +LD R26 , X
                 	__GETB2SX 85
000631 34af      	CPI  R26,LOW(0x4F)
000632 f421      	BRNE _0xC0
                +
000633 e2e9     +LDI R30 , LOW ( _0xBD + ( 20 ) )
000634 e0f5     +LDI R31 , HIGH ( _0xBD + ( 20 ) )
                 	__POINTW1MN _0xBD,20
000635 940e 0a81 	CALL SUBOPT_0x22
                 ; 0000 00D7                     STATE=EXIT_CHOOSE ;
                 _0xC0:
000637 e0e6      	LDI  R30,LOW(6)
000638 940e 0a7c 	CALL SUBOPT_0x21
                 ; 0000 00D8                 }
                 ; 0000 00D9                 break;
                 _0xBA:
00063a c1af      	RJMP _0xB5
                 ; 0000 00DA 
                 ; 0000 00DB             case START: //¾÷·Îµå
                 _0xB6:
00063b 30e1      	CPI  R30,LOW(0x1)
00063c e0a0      	LDI  R26,HIGH(0x1)
00063d 07fa      	CPC  R31,R26
00063e f559      	BRNE _0xC1
                 ; 0000 00DC                 LCD_Pos(0,0);
00063f e0e0      	LDI  R30,LOW(0)
000640 93ea      	ST   -Y,R30
000641 93ea      	ST   -Y,R30
000642 db57      	RCALL _LCD_Pos
                 ; 0000 00DD                 LCD_Str("StudyRoom  4:OUT");
                +
000643 e2ed     +LDI R30 , LOW ( _0xBD + ( 24 ) )
000644 e0f5     +LDI R31 , HIGH ( _0xBD + ( 24 ) )
                 	__POINTW1MN _0xBD,24
000645 940e 0a81 	CALL SUBOPT_0x22
                 ; 0000 00DE                 sprintf(Message, "1:%c 2:%c 3:%c", user_state[0],user_state[1],user_state[2]);
000647 940e 0a2e 	CALL SUBOPT_0x15
                +
000649 eae1     +LDI R30 , LOW ( 2 * _0x0 + ( 69 ) )
00064a e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 69 ) )
                 	__POINTW1FN _0x0,69
00064b 93fa      	ST   -Y,R31
00064c 93ea      	ST   -Y,R30
                +
00064d 01fe     +MOVW R30 , R28
00064e 5ae9     +SUBI R30 , LOW ( - 87 )
00064f 4fff     +SBCI R31 , HIGH ( - 87 )
000650 81e0     +LD R30 , Z
                 	__GETB1SX 87
000651 940e 0a34 	CALL SUBOPT_0x16
                +
000653 01fe     +MOVW R30 , R28
000654 5ae4     +SUBI R30 , LOW ( - 92 )
000655 4fff     +SBCI R31 , HIGH ( - 92 )
000656 81e0     +LD R30 , Z
                 	__GETB1SX 92
000657 940e 0a34 	CALL SUBOPT_0x16
                +
000659 01fe     +MOVW R30 , R28
00065a 59ef     +SUBI R30 , LOW ( - 97 )
00065b 4fff     +SBCI R31 , HIGH ( - 97 )
00065c 81e0     +LD R30 , Z
                 	__GETB1SX 97
00065d 940e 0a34 	CALL SUBOPT_0x16
00065f e08c      	LDI  R24,12
000660 940e 0959 	CALL _sprintf
000662 9660      	ADIW R28,16
                 ; 0000 00DF                 LCD_Pos(1,0);
000663 940e 0a85 	CALL SUBOPT_0x23
                 ; 0000 00E0                 LCD_Str(Message);
000665 940e 0a2e 	CALL SUBOPT_0x15
000667 db42      	RCALL _LCD_Str
                 ; 0000 00E1                 STATE = NONE;
000668 e0e0      	LDI  R30,LOW(0)
000669 c17c      	RJMP _0xF0
                 ; 0000 00E2                 break;
                 ; 0000 00E3 
                 ; 0000 00E4             case INPUT_PHONE: //ÀÔÀå : Æù¹øÈ£ ÀÔ·Â
                 _0xC1:
00066a 30e2      	CPI  R30,LOW(0x2)
00066b e0a0      	LDI  R26,HIGH(0x2)
00066c 07fa      	CPC  R31,R26
00066d f5c1      	BRNE _0xC2
                 ; 0000 00E5 
                 ; 0000 00E6                 if (fnd[0] == 10){
00066e 940e 0a6e 	CALL SUBOPT_0x1F
000670 971a      	SBIW R26,10
000671 f579      	BRNE _0xC3
                 ; 0000 00E7                     sprintf(user_pnumber[user_name], "%d%d%d%d%d%d%d%d%d%d%d", fnd[11],fnd[10],fnd[9],fnd[8],fnd[7],fnd[6],fnd[5],fnd[4],fnd[3],fnd[2],fnd[1]);
000672 940e 0a8b 	CALL SUBOPT_0x24
000674 940e 0a90 	CALL SUBOPT_0x25
000676 940e 0a95 	CALL SUBOPT_0x26
                 ; 0000 00E8                     user_state[user_name] ='X';
000678 940e 0b0e 	CALL SUBOPT_0x27
00067a e5e8      	LDI  R30,LOW(88)
00067b 93ec      	ST   X,R30
                 ; 0000 00E9                     for(i=0;i<11;i++){
00067c 940e 0a06 	CALL SUBOPT_0xF
                 _0xC5:
00067e 940e 0a0d 	CALL SUBOPT_0x10
000680 971b      	SBIW R26,11
000681 f4e4      	BRGE _0xC6
                 ; 0000 00EA                         num[user_name][i] = user_pnumber[user_name][i];
000682 940e 0a8b 	CALL SUBOPT_0x24
000684 01cf      	MOVW R24,R30
000685 01de      	MOVW R26,R28
000686 9613      	ADIW R26,3
000687 0fea      	ADD  R30,R26
000688 1ffb      	ADC  R31,R27
000689 940e 0a0d 	CALL SUBOPT_0x10
00068b 0fea      	ADD  R30,R26
00068c 1ffb      	ADC  R31,R27
00068d 01bf      	MOVW R22,R30
00068e 01fc      	MOVW R30,R24
00068f 940e 0a90 	CALL SUBOPT_0x25
000691 940e 0a0d 	CALL SUBOPT_0x10
000693 0fae      	ADD  R26,R30
000694 1fbf      	ADC  R27,R31
000695 91ec      	LD   R30,X
000696 01db      	MOVW R26,R22
000697 93ec      	ST   X,R30
                 ; 0000 00EB                     }
000698 940e 0a41 	CALL SUBOPT_0x18
00069a 9631      	ADIW R30,1
00069b 93fe      	ST   -X,R31
00069c 93ee      	ST   -X,R30
00069d cfe0      	RJMP _0xC5
                 _0xC6:
                 ; 0000 00EC                     STATE = CHECK_PNUM_INIT;
00069e e0e5      	LDI  R30,LOW(5)
00069f 940e 0a7c 	CALL SUBOPT_0x21
                 ; 0000 00ED                 }
                 ; 0000 00EE                 delay_ms(10);
                 _0xC3:
0006a1 e0ea      	LDI  R30,LOW(10)
0006a2 e0f0      	LDI  R31,HIGH(10)
0006a3 940e 09ba 	CALL SUBOPT_0x2
                 ; 0000 00EF                 break;
0006a5 c144      	RJMP _0xB5
                 ; 0000 00F0 
                 ; 0000 00F1             case INPUT_PHONE_INIT:
                 _0xC2:
0006a6 30e3      	CPI  R30,LOW(0x3)
0006a7 e0a0      	LDI  R26,HIGH(0x3)
0006a8 07fa      	CPC  R31,R26
0006a9 f4d9      	BRNE _0xC7
                 ; 0000 00F2                 fnd[0]=0;
0006aa 940e 0a53 	CALL SUBOPT_0x1B
                 ; 0000 00F3                 LCD_Clear();
0006ac 940e 0a3a 	CALL SUBOPT_0x17
                 ; 0000 00F4                 LCD_Pos(0,0);
                 ; 0000 00F5                 LCD_Str("Input PhoneNum") ;
                +
0006ae e3ee     +LDI R30 , LOW ( _0xBD + ( 41 ) )
0006af e0f5     +LDI R31 , HIGH ( _0xBD + ( 41 ) )
                 	__POINTW1MN _0xBD,41
0006b0 940e 0a81 	CALL SUBOPT_0x22
                 ; 0000 00F6                 STATE = INPUT_PHONE;
0006b2 e0e2      	LDI  R30,LOW(2)
0006b3 940e 0a7c 	CALL SUBOPT_0x21
                 ; 0000 00F7 
                 ; 0000 00F8                 if (user_state[user_name] == 'O'){
0006b5 940e 0b0e 	CALL SUBOPT_0x27
0006b7 91ac      	LD   R26,X
0006b8 34af      	CPI  R26,LOW(0x4F)
0006b9 f451      	BRNE _0xC8
                 ; 0000 00F9                     LCD_Clear();
0006ba 940e 0a3a 	CALL SUBOPT_0x17
                 ; 0000 00FA                     LCD_Pos(0,0);
                 ; 0000 00FB                     LCD_Str("Someone Used");
                +
0006bc e4ed     +LDI R30 , LOW ( _0xBD + ( 56 ) )
0006bd e0f5     +LDI R31 , HIGH ( _0xBD + ( 56 ) )
                 	__POINTW1MN _0xBD,56
0006be 940e 0a81 	CALL SUBOPT_0x22
                 ; 0000 00FC                     delay_ms(1000);
0006c0 940e 09fc 	CALL SUBOPT_0xD
                 ; 0000 00FD                     STATE = START;
0006c2 940e 0a61 	CALL SUBOPT_0x1D
                 ; 0000 00FE                 }
                 ; 0000 00FF 
                 ; 0000 0100                 break;
                 _0xC8:
0006c4 c125      	RJMP _0xB5
                 ; 0000 0101             case CHECK_PNUM:
                 _0xC7:
0006c5 30e4      	CPI  R30,LOW(0x4)
0006c6 e0a0      	LDI  R26,HIGH(0x4)
0006c7 07fa      	CPC  R31,R26
0006c8 f509      	BRNE _0xC9
                 ; 0000 0102 
                 ; 0000 0103                 if (fnd[1] == 1 && fnd[0] == 10){
0006c9 940e 0a75 	CALL SUBOPT_0x20
0006cb 9711      	SBIW R26,1
0006cc f421      	BRNE _0xCB
0006cd 940e 0a6e 	CALL SUBOPT_0x1F
0006cf 971a      	SBIW R26,10
0006d0 f009      	BREQ _0xCC
                 _0xCB:
0006d1 c00b      	RJMP _0xCA
                 _0xCC:
                 ; 0000 0104                     user_state[user_name] = 'O';
0006d2 940e 0b0e 	CALL SUBOPT_0x27
0006d4 e4ef      	LDI  R30,LOW(79)
0006d5 93ec      	ST   X,R30
                 ; 0000 0105                     /*OCR1A = 3000;
                 ; 0000 0106                     LCD_Clear();
                 ; 0000 0107                     LCD_Pos(0,0);
                 ; 0000 0108                     LCD_Str("Door Open") ;
                 ; 0000 0109                     delay_ms(5000);
                 ; 0000 010A                     OCR1A = 4710;*/
                 ; 0000 010B                     STATE = START;
0006d6 940e 0a61 	CALL SUBOPT_0x1D
                 ; 0000 010C                     fnd[0]=0;
0006d8 940e 0a53 	CALL SUBOPT_0x1B
                 ; 0000 010D                     user_name = 4;
0006da e0e4      	LDI  R30,LOW(4)
0006db a3ec      	STD  Y+36,R30
                 ; 0000 010E                 }
                 ; 0000 010F                 else if (fnd[1] == 2 && fnd[0] == 10) STATE = INPUT_PHONE_INIT;
0006dc c00c      	RJMP _0xCD
                 _0xCA:
0006dd 940e 0a75 	CALL SUBOPT_0x20
0006df 9712      	SBIW R26,2
0006e0 f421      	BRNE _0xCF
0006e1 940e 0a6e 	CALL SUBOPT_0x1F
0006e3 971a      	SBIW R26,10
0006e4 f009      	BREQ _0xD0
                 _0xCF:
0006e5 c003      	RJMP _0xCE
                 _0xD0:
0006e6 e0e3      	LDI  R30,LOW(3)
0006e7 940e 0a7c 	CALL SUBOPT_0x21
                 ; 0000 0110             break;
                 _0xCE:
                 _0xCD:
0006e9 c100      	RJMP _0xB5
                 ; 0000 0111             case CHECK_PNUM_INIT:
                 _0xC9:
0006ea 30e5      	CPI  R30,LOW(0x5)
0006eb e0a0      	LDI  R26,HIGH(0x5)
0006ec 07fa      	CPC  R31,R26
0006ed f4a1      	BRNE _0xD1
                 ; 0000 0112                 fnd[0]=0;
0006ee 940e 0a53 	CALL SUBOPT_0x1B
                 ; 0000 0113                 LCD_Clear();
0006f0 940e 0a3a 	CALL SUBOPT_0x17
                 ; 0000 0114                 LCD_Pos(0,0);
                 ; 0000 0115                 LCD_Str(user_pnumber[user_name]);
0006f2 940e 0a8b 	CALL SUBOPT_0x24
0006f4 940e 0a90 	CALL SUBOPT_0x25
0006f6 940e 0a81 	CALL SUBOPT_0x22
                 ; 0000 0116                 LCD_Pos(1,0);
0006f8 940e 0a85 	CALL SUBOPT_0x23
                 ; 0000 0117                 LCD_Str("1:Yes  2:No");
                +
0006fa e5ea     +LDI R30 , LOW ( _0xBD + ( 69 ) )
0006fb e0f5     +LDI R31 , HIGH ( _0xBD + ( 69 ) )
                 	__POINTW1MN _0xBD,69
0006fc 940e 0a81 	CALL SUBOPT_0x22
                 ; 0000 0118                 fnd[1] = 0;
0006fe 940e 0a5a 	CALL SUBOPT_0x1C
                 ; 0000 0119                 STATE = CHECK_PNUM;
000700 e0e4      	LDI  R30,LOW(4)
000701 c0e4      	RJMP _0xF0
                 ; 0000 011A             break;
                 ; 0000 011B 
                 ; 0000 011C             case EXIT_CHOOSE:  //ÅðÀå ¹øÈ£ ¼±
                 _0xD1:
000702 30e6      	CPI  R30,LOW(0x6)
000703 e0a0      	LDI  R26,HIGH(0x6)
000704 07fa      	CPC  R31,R26
000705 f539      	BRNE _0xD2
                 ; 0000 011D 
                 ; 0000 011E                 user_name = fnd[1]-1;
000706 940e 0a67 	CALL SUBOPT_0x1E
000708 9731      	SBIW R30,1
000709 a3ec      	STD  Y+36,R30
                 ; 0000 011F                 if (fnd[1] <=3 && fnd[1] >0 && fnd[0] == 10){
00070a 940e 0a75 	CALL SUBOPT_0x20
00070c 9714      	SBIW R26,4
00070d f44c      	BRGE _0xD4
00070e 940e 0a75 	CALL SUBOPT_0x20
000710 940e 0bdb 	CALL __CPW02
000712 f424      	BRGE _0xD4
000713 940e 0a6e 	CALL SUBOPT_0x1F
000715 971a      	SBIW R26,10
000716 f009      	BREQ _0xD5
                 _0xD4:
000717 c014      	RJMP _0xD3
                 _0xD5:
                 ; 0000 0120 
                 ; 0000 0121                     STATE = INPUT_PHONE_OUT_INIT;
000718 e0ea      	LDI  R30,LOW(10)
000719 940e 0a7c 	CALL SUBOPT_0x21
                 ; 0000 0122 
                 ; 0000 0123                     if (user_state[user_name] != 'O'){
00071b 940e 0b0e 	CALL SUBOPT_0x27
00071d 91ac      	LD   R26,X
00071e 34af      	CPI  R26,LOW(0x4F)
00071f f061      	BREQ _0xD6
                 ; 0000 0124                         LCD_Clear();
000720 940e 0a3a 	CALL SUBOPT_0x17
                 ; 0000 0125                         LCD_Pos(0,0);
                 ; 0000 0126                         LCD_Str("Empty Seat");
                +
000722 e6e6     +LDI R30 , LOW ( _0xBD + ( 81 ) )
000723 e0f5     +LDI R31 , HIGH ( _0xBD + ( 81 ) )
                 	__POINTW1MN _0xBD,81
000724 940e 0a81 	CALL SUBOPT_0x22
                 ; 0000 0127                         delay_ms(1000);
000726 940e 09fc 	CALL SUBOPT_0xD
                 ; 0000 0128                         fnd[0]=0;
000728 940e 0a53 	CALL SUBOPT_0x1B
                 ; 0000 0129                         STATE = START;
00072a 940e 0a61 	CALL SUBOPT_0x1D
                 ; 0000 012A                     }
                 ; 0000 012B                 }
                 _0xD6:
                 ; 0000 012C 
                 ; 0000 012D 
                 ; 0000 012E 
                 ; 0000 012F             break;
                 _0xD3:
00072c c0bd      	RJMP _0xB5
                 ; 0000 0130              case CHECK_PNUM_OUT_INIT:
                 _0xD2:
00072d 30e8      	CPI  R30,LOW(0x8)
00072e e0a0      	LDI  R26,HIGH(0x8)
00072f 07fa      	CPC  R31,R26
000730 f491      	BRNE _0xD7
                 ; 0000 0131                  fnd[0]=0;
000731 940e 0a53 	CALL SUBOPT_0x1B
                 ; 0000 0132                  fnd[1] = 0;
000733 940e 0a5a 	CALL SUBOPT_0x1C
                 ; 0000 0133                  LCD_Clear();
000735 940e 0a3a 	CALL SUBOPT_0x17
                 ; 0000 0134                  LCD_Pos(0,0);
                 ; 0000 0135                  LCD_Str(check_pnumber);
000737 01fe      	MOVW R30,R28
000738 96b5      	ADIW R30,37
000739 940e 0a81 	CALL SUBOPT_0x22
                 ; 0000 0136                  LCD_Pos(1,0);
00073b 940e 0a85 	CALL SUBOPT_0x23
                 ; 0000 0137 
                 ; 0000 0138                  LCD_Str("1:Yes  2:No");
                +
00073d e7e1     +LDI R30 , LOW ( _0xBD + ( 92 ) )
00073e e0f5     +LDI R31 , HIGH ( _0xBD + ( 92 ) )
                 	__POINTW1MN _0xBD,92
00073f 940e 0a81 	CALL SUBOPT_0x22
                 ; 0000 0139                  STATE = CHECK_PNUM_OUT;
000741 e0e7      	LDI  R30,LOW(7)
000742 c0a3      	RJMP _0xF0
                 ; 0000 013A 
                 ; 0000 013B 
                 ; 0000 013C             break;
                 ; 0000 013D             case CHECK_PNUM_OUT:   //ºñ¹Ð¹øÈ£ ÀÏÄ¡½Ã Å»Ãâ
                 _0xD7:
000743 30e7      	CPI  R30,LOW(0x7)
000744 e0a0      	LDI  R26,HIGH(0x7)
000745 07fa      	CPC  R31,R26
000746 f011      	BREQ PC+3
000747 940c 07c5 	JMP _0xD8
                 ; 0000 013E 
                 ; 0000 013F                  if (fnd[1] == 1 && fnd[0] == 10){
000749 940e 0a75 	CALL SUBOPT_0x20
00074b 9711      	SBIW R26,1
00074c f421      	BRNE _0xDA
00074d 940e 0a6e 	CALL SUBOPT_0x1F
00074f 971a      	SBIW R26,10
000750 f009      	BREQ _0xDB
                 _0xDA:
000751 c066      	RJMP _0xD9
                 _0xDB:
                 ; 0000 0140                    int cnt=0;
                 ; 0000 0141                    for(i=0;i<11;i++){
000752 9722      	SBIW R28,2
000753 e0e0      	LDI  R30,LOW(0)
000754 83e8      	ST   Y,R30
000755 83e9      	STD  Y+1,R30
                 ;	Sonar_range -> Y+159
                 ;	Message -> Y+119
                 ;	count -> Y+117
                 ;	finalnum -> Y+115
                 ;	fnd -> Y+91
                 ;	angle -> Y+89
                 ;	STATE -> Y+88
                 ;	user_state -> Y+85
                 ;	i -> Y+83
                 ;	user_pnumber -> Y+50
                 ;	check_pnumber -> Y+39
                 ;	user_name -> Y+38
                 ;	num -> Y+5
                 ;	empty_cnt -> Y+2
                 ;	cnt -> Y+0
                +
000756 01de     +MOVW R26 , R28
000757 5aad     +SUBI R26 , LOW ( - 83 )
000758 4fbf     +SBCI R27 , HIGH ( - 83 )
000759 93ed     +ST X + , R30
00075a 93ec     +ST X , R30
                 	__CLRW1SX 83
                 _0xDD:
00075b 940e 0b16 	CALL SUBOPT_0x28
00075d 971b      	SBIW R26,11
00075e f52c      	BRGE _0xDE
                 ; 0000 0142                       if(num[user_name][i] == check_pnumber[i] ) cnt ++;  }
00075f a1ee      	LDD  R30,Y+38
000760 e0ab      	LDI  R26,LOW(11)
000761 9fea      	MUL  R30,R26
000762 01f0      	MOVW R30,R0
000763 01de      	MOVW R26,R28
000764 9615      	ADIW R26,5
000765 0fea      	ADD  R30,R26
000766 1ffb      	ADC  R31,R27
000767 940e 0b16 	CALL SUBOPT_0x28
000769 0fae      	ADD  R26,R30
00076a 1fbf      	ADC  R27,R31
00076b 901c      	LD   R1,X
                +
00076c 01fe     +MOVW R30 , R28
00076d 5aed     +SUBI R30 , LOW ( - 83 )
00076e 4fff     +SBCI R31 , HIGH ( - 83 )
00076f 9001     +LD R0 , Z +
000770 81f0     +LD R31 , Z
000771 2de0     +MOV R30 , R0
                 	__GETW1SX 83
000772 01de      	MOVW R26,R28
000773 9697      	ADIW R26,39
000774 0fae      	ADD  R26,R30
000775 1fbf      	ADC  R27,R31
000776 91ec      	LD   R30,X
000777 15e1      	CP   R30,R1
000778 f429      	BRNE _0xDF
000779 81e8      	LD   R30,Y
00077a 81f9      	LDD  R31,Y+1
00077b 9631      	ADIW R30,1
00077c 83e8      	ST   Y,R30
00077d 83f9      	STD  Y+1,R31
                 _0xDF:
00077e 01de      	MOVW R26,R28
00077f 5aad      	SUBI R26,LOW(-(83))
000780 4fbf      	SBCI R27,HIGH(-(83))
000781 940e 0b1d 	CALL SUBOPT_0x29
000783 cfd7      	RJMP _0xDD
                 _0xDE:
                 ; 0000 0143 
                 ; 0000 0144                     if (cnt == 11 ){  //ºñ¹Ð¹øÈ£ ÀÏÄ¡
000784 81a8      	LD   R26,Y
000785 81b9      	LDD  R27,Y+1
000786 971b      	SBIW R26,11
000787 f4e9      	BRNE _0xE0
                 ; 0000 0145                        LCD_Clear();
000788 940e 0a3a 	CALL SUBOPT_0x17
                 ; 0000 0146                        LCD_Pos(0,0);
                 ; 0000 0147                        LCD_Str("User Check") ;
                +
00078a e7ed     +LDI R30 , LOW ( _0xBD + ( 104 ) )
00078b e0f5     +LDI R31 , HIGH ( _0xBD + ( 104 ) )
                 	__POINTW1MN _0xBD,104
00078c 940e 0a81 	CALL SUBOPT_0x22
                 ; 0000 0148                        LCD_Pos(1,0);
00078e 940e 0a85 	CALL SUBOPT_0x23
                 ; 0000 0149                        LCD_Str("Good Bye") ;
                +
000790 e8e8     +LDI R30 , LOW ( _0xBD + ( 115 ) )
000791 e0f5     +LDI R31 , HIGH ( _0xBD + ( 115 ) )
                 	__POINTW1MN _0xBD,115
000792 940e 0a81 	CALL SUBOPT_0x22
                 ; 0000 014A                        /*OCR1A = 3000;
                 ; 0000 014B                         delay_ms(5000);
                 ; 0000 014C                         OCR1A = 4710;    */
                 ; 0000 014D                       user_state[user_name] ='X';
000794 a1ee      	LDD  R30,Y+38
000795 e0f0      	LDI  R31,0
000796 01de      	MOVW R26,R28
000797 5aab      	SUBI R26,LOW(-(85))
000798 4fbf      	SBCI R27,HIGH(-(85))
000799 0fae      	ADD  R26,R30
00079a 1fbf      	ADC  R27,R31
00079b e5e8      	LDI  R30,LOW(88)
00079c 93ec      	ST   X,R30
                 ; 0000 014E                       STATE = START;
00079d e0e1      	LDI  R30,LOW(1)
                +
00079e 01de     +MOVW R26 , R28
00079f 5aa8     +SUBI R26 , LOW ( - 88 )
0007a0 4fbf     +SBCI R27 , HIGH ( - 88 )
0007a1 93ec     +ST X , R30
                 	__PUTB1SX 88
                 ; 0000 014F                       fnd[0] = 0;
0007a2 940e 0a5a 	CALL SUBOPT_0x1C
                 ; 0000 0150                     }
                 ; 0000 0151                     else{ //ºñ¹Ð¹øÈ£ ºÒÀÏÄ¡
0007a4 c011      	RJMP _0xE1
                 _0xE0:
                 ; 0000 0152                       LCD_Clear();
0007a5 940e 0a3a 	CALL SUBOPT_0x17
                 ; 0000 0153                       LCD_Pos(0,0);
                 ; 0000 0154                       LCD_Str("Wrong Password") ;
                +
0007a7 e9e1     +LDI R30 , LOW ( _0xBD + ( 124 ) )
0007a8 e0f5     +LDI R31 , HIGH ( _0xBD + ( 124 ) )
                 	__POINTW1MN _0xBD,124
0007a9 940e 0a81 	CALL SUBOPT_0x22
                 ; 0000 0155                       delay_ms(2000);
0007ab ede0      	LDI  R30,LOW(2000)
0007ac e0f7      	LDI  R31,HIGH(2000)
0007ad 940e 09ba 	CALL SUBOPT_0x2
                 ; 0000 0156                       fnd[0] = 0;
0007af 940e 0a5a 	CALL SUBOPT_0x1C
                 ; 0000 0157                       STATE = START;
0007b1 e0e1      	LDI  R30,LOW(1)
                +
0007b2 01de     +MOVW R26 , R28
0007b3 5aa8     +SUBI R26 , LOW ( - 88 )
0007b4 4fbf     +SBCI R27 , HIGH ( - 88 )
0007b5 93ec     +ST X , R30
                 	__PUTB1SX 88
                 ; 0000 0158                     }
                 _0xE1:
                 ; 0000 0159                 }
0007b6 9622      	ADIW R28,2
                 ; 0000 015A                 else if (fnd[1] == 2 && fnd[0] == 10) STATE = INPUT_PHONE_OUT_INIT;
0007b7 c00c      	RJMP _0xE2
                 _0xD9:
0007b8 940e 0a75 	CALL SUBOPT_0x20
0007ba 9712      	SBIW R26,2
0007bb f421      	BRNE _0xE4
0007bc 940e 0a6e 	CALL SUBOPT_0x1F
0007be 971a      	SBIW R26,10
0007bf f009      	BREQ _0xE5
                 _0xE4:
0007c0 c003      	RJMP _0xE3
                 _0xE5:
0007c1 e0ea      	LDI  R30,LOW(10)
0007c2 940e 0a7c 	CALL SUBOPT_0x21
                 ; 0000 015B 
                 ; 0000 015C 
                 ; 0000 015D             break;
                 _0xE3:
                 _0xE2:
0007c4 c025      	RJMP _0xB5
                 ; 0000 015E             case INPUT_PHONE_OUT: //ÅðÀå : Æù¹øÈ£ ÀÔ·Â
                 _0xD8:
0007c5 30e9      	CPI  R30,LOW(0x9)
0007c6 e0a0      	LDI  R26,HIGH(0x9)
0007c7 07fa      	CPC  R31,R26
0007c8 f481      	BRNE _0xE6
                 ; 0000 015F 
                 ; 0000 0160                 if (fnd[0] == 10){
0007c9 940e 0a6e 	CALL SUBOPT_0x1F
0007cb 971a      	SBIW R26,10
0007cc f439      	BRNE _0xE7
                 ; 0000 0161                     sprintf(check_pnumber, "%d%d%d%d%d%d%d%d%d%d%d", fnd[11],fnd[10],fnd[9],fnd[8],fnd[7],fnd[6],fnd[5],fnd[4],fnd[3],fnd[2],fnd[1]);
0007cd 01fe      	MOVW R30,R28
0007ce 96b5      	ADIW R30,37
0007cf 940e 0a95 	CALL SUBOPT_0x26
                 ; 0000 0162 
                 ; 0000 0163                     STATE = CHECK_PNUM_OUT_INIT;
0007d1 e0e8      	LDI  R30,LOW(8)
0007d2 940e 0a7c 	CALL SUBOPT_0x21
                 ; 0000 0164                 }
                 ; 0000 0165                 delay_ms(10);
                 _0xE7:
0007d4 e0ea      	LDI  R30,LOW(10)
0007d5 e0f0      	LDI  R31,HIGH(10)
0007d6 940e 09ba 	CALL SUBOPT_0x2
                 ; 0000 0166                 break;
0007d8 c011      	RJMP _0xB5
                 ; 0000 0167 
                 ; 0000 0168              case INPUT_PHONE_OUT_INIT: //ÅðÀå : Æù¹øÈ£ ÀÔ·Â
                 _0xE6:
0007d9 30ea      	CPI  R30,LOW(0xA)
0007da e0a0      	LDI  R26,HIGH(0xA)
0007db 07fa      	CPC  R31,R26
0007dc f469      	BRNE _0xB5
                 ; 0000 0169 
                 ; 0000 016A 
                 ; 0000 016B                 fnd[0]=0;
0007dd 940e 0a53 	CALL SUBOPT_0x1B
                 ; 0000 016C                 LCD_Clear();
0007df 940e 0a3a 	CALL SUBOPT_0x17
                 ; 0000 016D                 LCD_Pos(0,0);
                 ; 0000 016E                 LCD_Str("Input PhoneNum") ;
                +
0007e1 eae0     +LDI R30 , LOW ( _0xBD + ( 139 ) )
0007e2 e0f5     +LDI R31 , HIGH ( _0xBD + ( 139 ) )
                 	__POINTW1MN _0xBD,139
0007e3 940e 0a81 	CALL SUBOPT_0x22
                 ; 0000 016F                 STATE = INPUT_PHONE_OUT;
0007e5 e0e9      	LDI  R30,LOW(9)
                 _0xF0:
                +
0007e6 01de     +MOVW R26 , R28
0007e7 5aaa     +SUBI R26 , LOW ( - 86 )
0007e8 4fbf     +SBCI R27 , HIGH ( - 86 )
0007e9 93ec     +ST X , R30
                 	__PUTB1SX 86
                 ; 0000 0170                 break;
                 ; 0000 0171 
                 ; 0000 0172 
                 ; 0000 0173         }
                 _0xB5:
                 ; 0000 0174 
                 ; 0000 0175     }
0007ea ccda      	RJMP _0x98
                 ; 0000 0176 }
                 _0xE9:
0007eb cfff      	RJMP _0xE9
                 
                 	.DSEG
                 _0xBD:
000515           	.BYTE 0x9A
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
0007ec 931a      	ST   -Y,R17
0007ed 930a      	ST   -Y,R16
0007ee 81aa      	LDD  R26,Y+2
0007ef 81bb      	LDD  R27,Y+2+1
0007f0 9612      	ADIW R26,2
0007f1 940e 0bc7 	CALL __GETW1P
0007f3 9730      	SBIW R30,0
0007f4 f129      	BREQ _0x2000010
0007f5 81aa      	LDD  R26,Y+2
0007f6 81bb      	LDD  R27,Y+2+1
0007f7 9614      	ADIW R26,4
0007f8 940e 0bc7 	CALL __GETW1P
0007fa 018f      	MOVW R16,R30
0007fb 9730      	SBIW R30,0
0007fc f061      	BREQ _0x2000012
                +
0007fd 3002     +CPI R16 , LOW ( 2 )
0007fe e0e0     +LDI R30 , HIGH ( 2 )
0007ff 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000800 f0c0      	BRLO _0x2000013
000801 01f8      	MOVW R30,R16
000802 9731      	SBIW R30,1
000803 018f      	MOVW R16,R30
                +
000804 81aa     +LDD R26 , Y + 2
000805 81bb     +LDD R27 , Y + 2 + 1
000806 9614     +ADIW R26 , 4
000807 93ed     +ST X + , R30
000808 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000809 81aa      	LDD  R26,Y+2
00080a 81bb      	LDD  R27,Y+2+1
00080b 9612      	ADIW R26,2
00080c 940e 0b1d 	CALL SUBOPT_0x29
00080e 9731      	SBIW R30,1
00080f 81ac      	LDD  R26,Y+4
000810 83a0      	STD  Z+0,R26
000811 81aa      	LDD  R26,Y+2
000812 81bb      	LDD  R27,Y+2+1
000813 940e 0bc7 	CALL __GETW1P
000815 23ff      	TST  R31
000816 f012      	BRMI _0x2000014
000817 940e 0b1d 	CALL SUBOPT_0x29
                 _0x2000014:
                 _0x2000013:
000819 c006      	RJMP _0x2000015
                 _0x2000010:
00081a 81aa      	LDD  R26,Y+2
00081b 81bb      	LDD  R27,Y+2+1
00081c efef      	LDI  R30,LOW(65535)
00081d efff      	LDI  R31,HIGH(65535)
00081e 93ed      	ST   X+,R30
00081f 93fc      	ST   X,R31
                 _0x2000015:
000820 8119      	LDD  R17,Y+1
000821 8108      	LDD  R16,Y+0
                 _0x2060002:
000822 9625      	ADIW R28,5
000823 9508      	RET
                 __print_G100:
000824 9726      	SBIW R28,6
000825 940e 0bdf 	CALL __SAVELOCR6
000827 e010      	LDI  R17,0
000828 85ac      	LDD  R26,Y+12
000829 85bd      	LDD  R27,Y+12+1
00082a e0e0      	LDI  R30,LOW(0)
00082b e0f0      	LDI  R31,HIGH(0)
00082c 93ed      	ST   X+,R30
00082d 93fc      	ST   X,R31
                 _0x2000016:
00082e 89ea      	LDD  R30,Y+18
00082f 89fb      	LDD  R31,Y+18+1
000830 9631      	ADIW R30,1
000831 8bea      	STD  Y+18,R30
000832 8bfb      	STD  Y+18+1,R31
000833 9731      	SBIW R30,1
000834 91e4      	LPM  R30,Z
000835 2f2e      	MOV  R18,R30
000836 30e0      	CPI  R30,0
000837 f411      	BRNE PC+3
000838 940c 0951 	JMP _0x2000018
00083a 2fe1      	MOV  R30,R17
00083b 30e0      	CPI  R30,0
00083c f439      	BRNE _0x200001C
00083d 3225      	CPI  R18,37
00083e f411      	BRNE _0x200001D
00083f e011      	LDI  R17,LOW(1)
000840 c002      	RJMP _0x200001E
                 _0x200001D:
000841 940e 0b23 	CALL SUBOPT_0x2A
                 _0x200001E:
000843 c10c      	RJMP _0x200001B
                 _0x200001C:
000844 30e1      	CPI  R30,LOW(0x1)
000845 f4a9      	BRNE _0x200001F
000846 3225      	CPI  R18,37
000847 f419      	BRNE _0x2000020
000848 940e 0b23 	CALL SUBOPT_0x2A
00084a c104      	RJMP _0x20000C9
                 _0x2000020:
00084b e012      	LDI  R17,LOW(2)
00084c e040      	LDI  R20,LOW(0)
00084d e000      	LDI  R16,LOW(0)
00084e 322d      	CPI  R18,45
00084f f411      	BRNE _0x2000021
000850 e001      	LDI  R16,LOW(1)
000851 c0fe      	RJMP _0x200001B
                 _0x2000021:
000852 322b      	CPI  R18,43
000853 f411      	BRNE _0x2000022
000854 e24b      	LDI  R20,LOW(43)
000855 c0fa      	RJMP _0x200001B
                 _0x2000022:
000856 3220      	CPI  R18,32
000857 f411      	BRNE _0x2000023
000858 e240      	LDI  R20,LOW(32)
000859 c0f6      	RJMP _0x200001B
                 _0x2000023:
00085a c002      	RJMP _0x2000024
                 _0x200001F:
00085b 30e2      	CPI  R30,LOW(0x2)
00085c f439      	BRNE _0x2000025
                 _0x2000024:
00085d e050      	LDI  R21,LOW(0)
00085e e013      	LDI  R17,LOW(3)
00085f 3320      	CPI  R18,48
000860 f411      	BRNE _0x2000026
000861 6800      	ORI  R16,LOW(128)
000862 c0ed      	RJMP _0x200001B
                 _0x2000026:
000863 c004      	RJMP _0x2000027
                 _0x2000025:
000864 30e3      	CPI  R30,LOW(0x3)
000865 f011      	BREQ PC+3
000866 940c 0950 	JMP _0x200001B
                 _0x2000027:
000868 3320      	CPI  R18,48
000869 f010      	BRLO _0x200002A
00086a 332a      	CPI  R18,58
00086b f008      	BRLO _0x200002B
                 _0x200002A:
00086c c007      	RJMP _0x2000029
                 _0x200002B:
00086d e0aa      	LDI  R26,LOW(10)
00086e 9f5a      	MUL  R21,R26
00086f 2d50      	MOV  R21,R0
000870 2fe2      	MOV  R30,R18
000871 53e0      	SUBI R30,LOW(48)
000872 0f5e      	ADD  R21,R30
000873 c0dc      	RJMP _0x200001B
                 _0x2000029:
000874 2fe2      	MOV  R30,R18
000875 36e3      	CPI  R30,LOW(0x63)
000876 f449      	BRNE _0x200002F
000877 940e 0b2c 	CALL SUBOPT_0x2B
000879 89e8      	LDD  R30,Y+16
00087a 89f9      	LDD  R31,Y+16+1
00087b 81a4      	LDD  R26,Z+4
00087c 93aa      	ST   -Y,R26
00087d 940e 0b32 	CALL SUBOPT_0x2C
00087f c0cf      	RJMP _0x2000030
                 _0x200002F:
000880 37e3      	CPI  R30,LOW(0x73)
000881 f441      	BRNE _0x2000032
000882 940e 0b2c 	CALL SUBOPT_0x2B
000884 940e 0b3a 	CALL SUBOPT_0x2D
000886 940e 098f 	CALL _strlen
000888 2f1e      	MOV  R17,R30
000889 c00a      	RJMP _0x2000033
                 _0x2000032:
00088a 37e0      	CPI  R30,LOW(0x70)
00088b f461      	BRNE _0x2000035
00088c 940e 0b2c 	CALL SUBOPT_0x2B
00088e 940e 0b3a 	CALL SUBOPT_0x2D
000890 940e 0999 	CALL _strlenf
000892 2f1e      	MOV  R17,R30
000893 6008      	ORI  R16,LOW(8)
                 _0x2000033:
000894 6002      	ORI  R16,LOW(2)
000895 770f      	ANDI R16,LOW(127)
000896 e030      	LDI  R19,LOW(0)
000897 c035      	RJMP _0x2000036
                 _0x2000035:
000898 36e4      	CPI  R30,LOW(0x64)
000899 f011      	BREQ _0x2000039
00089a 36e9      	CPI  R30,LOW(0x69)
00089b f411      	BRNE _0x200003A
                 _0x2000039:
00089c 6004      	ORI  R16,LOW(4)
00089d c002      	RJMP _0x200003B
                 _0x200003A:
00089e 37e5      	CPI  R30,LOW(0x75)
00089f f431      	BRNE _0x200003C
                 _0x200003B:
0008a0 e8ec      	LDI  R30,LOW(_tbl10_G100*2)
0008a1 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
0008a2 83ee      	STD  Y+6,R30
0008a3 83ff      	STD  Y+6+1,R31
0008a4 e015      	LDI  R17,LOW(5)
0008a5 c00d      	RJMP _0x200003D
                 _0x200003C:
0008a6 35e8      	CPI  R30,LOW(0x58)
0008a7 f411      	BRNE _0x200003F
0008a8 6008      	ORI  R16,LOW(8)
0008a9 c004      	RJMP _0x2000040
                 _0x200003F:
0008aa 37e8      	CPI  R30,LOW(0x78)
0008ab f011      	BREQ PC+3
0008ac 940c 094f 	JMP _0x2000071
                 _0x2000040:
0008ae e9e6      	LDI  R30,LOW(_tbl16_G100*2)
0008af e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
0008b0 83ee      	STD  Y+6,R30
0008b1 83ff      	STD  Y+6+1,R31
0008b2 e014      	LDI  R17,LOW(4)
                 _0x200003D:
0008b3 ff02      	SBRS R16,2
0008b4 c014      	RJMP _0x2000042
0008b5 940e 0b2c 	CALL SUBOPT_0x2B
0008b7 940e 0b44 	CALL SUBOPT_0x2E
0008b9 85ab      	LDD  R26,Y+11
0008ba 23aa      	TST  R26
0008bb f43a      	BRPL _0x2000043
0008bc 85ea      	LDD  R30,Y+10
0008bd 85fb      	LDD  R31,Y+10+1
0008be 940e 0b63 	CALL __ANEGW1
0008c0 87ea      	STD  Y+10,R30
0008c1 87fb      	STD  Y+10+1,R31
0008c2 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
0008c3 3040      	CPI  R20,0
0008c4 f011      	BREQ _0x2000044
0008c5 5f1f      	SUBI R17,-LOW(1)
0008c6 c001      	RJMP _0x2000045
                 _0x2000044:
0008c7 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
0008c8 c004      	RJMP _0x2000046
                 _0x2000042:
0008c9 940e 0b2c 	CALL SUBOPT_0x2B
0008cb 940e 0b44 	CALL SUBOPT_0x2E
                 _0x2000046:
                 _0x2000036:
0008cd fd00      	SBRC R16,0
0008ce c011      	RJMP _0x2000047
                 _0x2000048:
0008cf 1715      	CP   R17,R21
0008d0 f478      	BRSH _0x200004A
0008d1 ff07      	SBRS R16,7
0008d2 c008      	RJMP _0x200004B
0008d3 ff02      	SBRS R16,2
0008d4 c004      	RJMP _0x200004C
0008d5 7f0b      	ANDI R16,LOW(251)
0008d6 2f24      	MOV  R18,R20
0008d7 5011      	SUBI R17,LOW(1)
0008d8 c001      	RJMP _0x200004D
                 _0x200004C:
0008d9 e320      	LDI  R18,LOW(48)
                 _0x200004D:
0008da c001      	RJMP _0x200004E
                 _0x200004B:
0008db e220      	LDI  R18,LOW(32)
                 _0x200004E:
0008dc 940e 0b23 	CALL SUBOPT_0x2A
0008de 5051      	SUBI R21,LOW(1)
0008df cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
0008e0 2f31      	MOV  R19,R17
0008e1 ff01      	SBRS R16,1
0008e2 c017      	RJMP _0x200004F
                 _0x2000050:
0008e3 3030      	CPI  R19,0
0008e4 f0a1      	BREQ _0x2000052
0008e5 ff03      	SBRS R16,3
0008e6 c006      	RJMP _0x2000053
0008e7 81ee      	LDD  R30,Y+6
0008e8 81ff      	LDD  R31,Y+6+1
0008e9 9125      	LPM  R18,Z+
0008ea 83ee      	STD  Y+6,R30
0008eb 83ff      	STD  Y+6+1,R31
0008ec c005      	RJMP _0x2000054
                 _0x2000053:
0008ed 81ae      	LDD  R26,Y+6
0008ee 81bf      	LDD  R27,Y+6+1
0008ef 912d      	LD   R18,X+
0008f0 83ae      	STD  Y+6,R26
0008f1 83bf      	STD  Y+6+1,R27
                 _0x2000054:
0008f2 940e 0b23 	CALL SUBOPT_0x2A
0008f4 3050      	CPI  R21,0
0008f5 f009      	BREQ _0x2000055
0008f6 5051      	SUBI R21,LOW(1)
                 _0x2000055:
0008f7 5031      	SUBI R19,LOW(1)
0008f8 cfea      	RJMP _0x2000050
                 _0x2000052:
0008f9 c04b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
0008fa e320      	LDI  R18,LOW(48)
0008fb 81ee      	LDD  R30,Y+6
0008fc 81ff      	LDD  R31,Y+6+1
0008fd 940e 0bcb 	CALL __GETW1PF
0008ff 87e8      	STD  Y+8,R30
000900 87f9      	STD  Y+8+1,R31
000901 81ee      	LDD  R30,Y+6
000902 81ff      	LDD  R31,Y+6+1
000903 9632      	ADIW R30,2
000904 83ee      	STD  Y+6,R30
000905 83ff      	STD  Y+6+1,R31
                 _0x200005A:
000906 85e8      	LDD  R30,Y+8
000907 85f9      	LDD  R31,Y+8+1
000908 85aa      	LDD  R26,Y+10
000909 85bb      	LDD  R27,Y+10+1
00090a 17ae      	CP   R26,R30
00090b 07bf      	CPC  R27,R31
00090c f050      	BRLO _0x200005C
00090d 5f2f      	SUBI R18,-LOW(1)
00090e 85a8      	LDD  R26,Y+8
00090f 85b9      	LDD  R27,Y+8+1
000910 85ea      	LDD  R30,Y+10
000911 85fb      	LDD  R31,Y+10+1
000912 1bea      	SUB  R30,R26
000913 0bfb      	SBC  R31,R27
000914 87ea      	STD  Y+10,R30
000915 87fb      	STD  Y+10+1,R31
000916 cfef      	RJMP _0x200005A
                 _0x200005C:
000917 332a      	CPI  R18,58
000918 f028      	BRLO _0x200005D
000919 ff03      	SBRS R16,3
00091a c002      	RJMP _0x200005E
00091b 5f29      	SUBI R18,-LOW(7)
00091c c001      	RJMP _0x200005F
                 _0x200005E:
00091d 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
00091e fd04      	SBRC R16,4
00091f c01a      	RJMP _0x2000061
000920 3321      	CPI  R18,49
000921 f420      	BRSH _0x2000063
000922 85a8      	LDD  R26,Y+8
000923 85b9      	LDD  R27,Y+8+1
000924 9711      	SBIW R26,1
000925 f409      	BRNE _0x2000062
                 _0x2000063:
000926 c009      	RJMP _0x20000CA
                 _0x2000062:
000927 1753      	CP   R21,R19
000928 f010      	BRLO _0x2000067
000929 ff00      	SBRS R16,0
00092a c001      	RJMP _0x2000068
                 _0x2000067:
00092b c013      	RJMP _0x2000066
                 _0x2000068:
00092c e220      	LDI  R18,LOW(32)
00092d ff07      	SBRS R16,7
00092e c00b      	RJMP _0x2000069
00092f e320      	LDI  R18,LOW(48)
                 _0x20000CA:
000930 6100      	ORI  R16,LOW(16)
000931 ff02      	SBRS R16,2
000932 c007      	RJMP _0x200006A
000933 7f0b      	ANDI R16,LOW(251)
000934 934a      	ST   -Y,R20
000935 940e 0b32 	CALL SUBOPT_0x2C
000937 3050      	CPI  R21,0
000938 f009      	BREQ _0x200006B
000939 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
00093a 940e 0b23 	CALL SUBOPT_0x2A
00093c 3050      	CPI  R21,0
00093d f009      	BREQ _0x200006C
00093e 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
00093f 5031      	SUBI R19,LOW(1)
000940 85a8      	LDD  R26,Y+8
000941 85b9      	LDD  R27,Y+8+1
000942 9712      	SBIW R26,2
000943 f008      	BRLO _0x2000059
000944 cfb5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
000945 ff00      	SBRS R16,0
000946 c008      	RJMP _0x200006D
                 _0x200006E:
000947 3050      	CPI  R21,0
000948 f031      	BREQ _0x2000070
000949 5051      	SUBI R21,LOW(1)
00094a e2e0      	LDI  R30,LOW(32)
00094b 93ea      	ST   -Y,R30
00094c 940e 0b32 	CALL SUBOPT_0x2C
00094e cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000C9:
00094f e010      	LDI  R17,LOW(0)
                 _0x200001B:
000950 cedd      	RJMP _0x2000016
                 _0x2000018:
000951 85ac      	LDD  R26,Y+12
000952 85bd      	LDD  R27,Y+12+1
000953 940e 0bc7 	CALL __GETW1P
000955 940e 0be6 	CALL __LOADLOCR6
000957 9664      	ADIW R28,20
000958 9508      	RET
                 _sprintf:
000959 92ff      	PUSH R15
00095a 2ef8      	MOV  R15,R24
00095b 9726      	SBIW R28,6
00095c 940e 0be1 	CALL __SAVELOCR4
00095e 940e 0b4c 	CALL SUBOPT_0x2F
000960 9730      	SBIW R30,0
000961 f419      	BRNE _0x2000072
000962 efef      	LDI  R30,LOW(65535)
000963 efff      	LDI  R31,HIGH(65535)
000964 c025      	RJMP _0x2060001
                 _0x2000072:
000965 01de      	MOVW R26,R28
000966 9616      	ADIW R26,6
000967 940e 0b5f 	CALL __ADDW2R15
000969 018d      	MOVW R16,R26
00096a 940e 0b4c 	CALL SUBOPT_0x2F
00096c 83ee      	STD  Y+6,R30
00096d 83ff      	STD  Y+6+1,R31
00096e e0e0      	LDI  R30,LOW(0)
00096f 87e8      	STD  Y+8,R30
000970 87e9      	STD  Y+8+1,R30
000971 01de      	MOVW R26,R28
000972 961a      	ADIW R26,10
000973 940e 0b5f 	CALL __ADDW2R15
000975 940e 0bc7 	CALL __GETW1P
000977 93fa      	ST   -Y,R31
000978 93ea      	ST   -Y,R30
000979 931a      	ST   -Y,R17
00097a 930a      	ST   -Y,R16
00097b eeec      	LDI  R30,LOW(_put_buff_G100)
00097c e0f7      	LDI  R31,HIGH(_put_buff_G100)
00097d 93fa      	ST   -Y,R31
00097e 93ea      	ST   -Y,R30
00097f 01fe      	MOVW R30,R28
000980 963a      	ADIW R30,10
000981 93fa      	ST   -Y,R31
000982 93ea      	ST   -Y,R30
000983 dea0      	RCALL __print_G100
000984 019f      	MOVW R18,R30
000985 81ae      	LDD  R26,Y+6
000986 81bf      	LDD  R27,Y+6+1
000987 e0e0      	LDI  R30,LOW(0)
000988 93ec      	ST   X,R30
000989 01f9      	MOVW R30,R18
                 _0x2060001:
00098a 940e 0be8 	CALL __LOADLOCR4
00098c 962a      	ADIW R28,10
00098d 90ff      	POP  R15
00098e 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
00098f 91a9          ld   r26,y+
000990 91b9          ld   r27,y+
000991 27ee          clr  r30
000992 27ff          clr  r31
                 strlen0:
000993 916d          ld   r22,x+
000994 2366          tst  r22
000995 f011          breq strlen1
000996 9631          adiw r30,1
000997 cffb          rjmp strlen0
                 strlen1:
000998 9508          ret
                 _strlenf:
000999 27aa          clr  r26
00099a 27bb          clr  r27
00099b 91e9          ld   r30,y+
00099c 91f9          ld   r31,y+
                 strlenf0:
00099d 9005      	lpm  r0,z+
00099e 2000          tst  r0
00099f f011          breq strlenf1
0009a0 9611          adiw r26,1
0009a1 cffb          rjmp strlenf0
                 strlenf1:
0009a2 01fd          movw r30,r26
0009a3 9508          ret
                 
                 	.DSEG
                 _Port_char:
0005af           	.BYTE 0x10
                 _Port_fnd:
0005bf           	.BYTE 0x8
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
0009a4 93e0 0065 	STS  101,R30
0009a6 91e0 0065 	LDS  R30,101
0009a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1:
0009a9 60e1      	ORI  R30,1
0009aa 93e0 0065 	STS  101,R30
                +
0009ac ef86     +LDI R24 , LOW ( 246 )
                +__DELAY_USB_LOOP :
0009ad 958a     +DEC R24
0009ae f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 246
0009af 81e8      	LD   R30,Y
0009b0 bbeb      	OUT  0x1B,R30
                +
0009b1 ef86     +LDI R24 , LOW ( 246 )
                +__DELAY_USB_LOOP :
0009b2 958a     +DEC R24
0009b3 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 246
0009b4 91e0 0065 	LDS  R30,101
0009b6 7fee      	ANDI R30,0xFE
0009b7 93e0 0065 	STS  101,R30
0009b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2:
0009ba 93fa      	ST   -Y,R31
0009bb 93ea      	ST   -Y,R30
0009bc 940c 0b53 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3:
0009be e0e1      	LDI  R30,LOW(1)
0009bf e0f0      	LDI  R31,HIGH(1)
0009c0 cff9      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
0009c1 e3e8      	LDI  R30,LOW(56)
0009c2 93ea      	ST   -Y,R30
0009c3 940e 018a 	CALL _LCD_Comm
0009c5 e0e4      	LDI  R30,LOW(4)
0009c6 93ea      	ST   -Y,R30
0009c7 940c 0195 	JMP  _LCD_delay
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5:
0009c9 93ea      	ST   -Y,R30
0009ca 940e 018a 	CALL _LCD_Comm
0009cc e0e4      	LDI  R30,LOW(4)
0009cd 93ea      	ST   -Y,R30
0009ce 940c 0195 	JMP  _LCD_delay
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
0009d0 81e8      	LD   R30,Y
0009d1 93e0 0073 	STS  115,R30
0009d3 e8e4      	LDI  R30,LOW(132)
0009d4 93e0 0074 	STS  116,R30
0009d6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7:
0009d7 93e0 0065 	STS  101,R30
0009d9 81ec      	LDD  R30,Y+4
0009da 81fd      	LDD  R31,Y+4+1
0009db 93fa      	ST   -Y,R31
0009dc 93ea      	ST   -Y,R30
0009dd 940c 0307 	JMP  _myDelay_us
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x8:
0009df 81a9      	LDD  R26,Y+1
0009e0 27bb      	CLR  R27
0009e1 e0e4      	LDI  R30,LOW(4)
0009e2 e0f0      	LDI  R31,HIGH(4)
0009e3 940e 0bab 	CALL __MODW21
0009e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x9:
0009e6 81a9      	LDD  R26,Y+1
0009e7 e0b0      	LDI  R27,0
0009e8 e0e4      	LDI  R30,LOW(4)
0009e9 e0f0      	LDI  R31,HIGH(4)
0009ea 940e 0ba3 	CALL __DIVW21
0009ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
0009ed 940e 0b67 	CALL __LSLW2
0009ef 01bf      	MOVW R22,R30
0009f0 cfee      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xB:
0009f1 e0f0      	LDI  R31,0
0009f2 55e1      	SUBI R30,LOW(-_Port_char)
0009f3 4ffa      	SBCI R31,HIGH(-_Port_char)
0009f4 81e0      	LD   R30,Z
0009f5 93e0 0062 	STS  98,R30
0009f7 cfc6      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xC:
0009f8 93fa      	ST   -Y,R31
0009f9 93ea      	ST   -Y,R30
0009fa 940c 031a 	JMP  _Buzzer_play
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
0009fc eee8      	LDI  R30,LOW(1000)
0009fd e0f3      	LDI  R31,HIGH(1000)
0009fe cfbb      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
0009ff 930a      	ST   -Y,R16
000a00 940e 029c 	CALL _startRanging
000a02 01fe      	MOVW R30,R28
000a03 56e3      	SUBI R30,LOW(-(157))
000a04 4fff      	SBCI R31,HIGH(-(157))
000a05 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
000a06 e0e0      	LDI  R30,LOW(0)
                +
000a07 01de     +MOVW R26 , R28
000a08 5aaf     +SUBI R26 , LOW ( - 81 )
000a09 4fbf     +SBCI R27 , HIGH ( - 81 )
000a0a 93ed     +ST X + , R30
000a0b 93ec     +ST X , R30
                 	__CLRW1SX 81
000a0c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x10:
                +
000a0d 01de     +MOVW R26 , R28
000a0e 5aaf     +SUBI R26 , LOW ( - 81 )
000a0f 4fbf     +SBCI R27 , HIGH ( - 81 )
000a10 900d     +LD R0 , X +
000a11 91bc     +LD R27 , X
000a12 2da0     +MOV R26 , R0
                 	__GETW2SX 81
000a13 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x11:
                +
000a14 01fe     +MOVW R30 , R28
000a15 5aef     +SUBI R30 , LOW ( - 81 )
000a16 4fff     +SBCI R31 , HIGH ( - 81 )
000a17 9001     +LD R0 , Z +
000a18 81f0     +LD R31 , Z
000a19 2de0     +MOV R30 , R0
                 	__GETW1SX 81
000a1a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
000a1b 0fee      	LSL  R30
000a1c 1fff      	ROL  R31
000a1d 0fae      	ADD  R26,R30
000a1e 1fbf      	ADC  R27,R31
000a1f 940e 0bc7 	CALL __GETW1P
000a21 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x13:
000a22 dff1      	RCALL SUBOPT_0x11
000a23 01de      	MOVW R26,R28
000a24 5aad      	SUBI R26,LOW(-(83))
000a25 4fbf      	SBCI R27,HIGH(-(83))
000a26 0fae      	ADD  R26,R30
000a27 1fbf      	ADC  R27,R31
000a28 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x14:
000a29 dfea      	RCALL SUBOPT_0x11
000a2a 01de      	MOVW R26,R28
000a2b 0fae      	ADD  R26,R30
000a2c 1fbf      	ADC  R27,R31
000a2d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x15:
000a2e 01fe      	MOVW R30,R28
000a2f 58eb      	SUBI R30,LOW(-(117))
000a30 4fff      	SBCI R31,HIGH(-(117))
000a31 93fa      	ST   -Y,R31
000a32 93ea      	ST   -Y,R30
000a33 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x16:
000a34 27ff      	CLR  R31
000a35 2766      	CLR  R22
000a36 2777      	CLR  R23
000a37 940e 0bcf 	CALL __PUTPARD1
000a39 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x17:
000a3a 940e 01b8 	CALL _LCD_Clear
000a3c e0e0      	LDI  R30,LOW(0)
000a3d 93ea      	ST   -Y,R30
000a3e 93ea      	ST   -Y,R30
000a3f 940c 019a 	JMP  _LCD_Pos
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x18:
000a41 01de      	MOVW R26,R28
000a42 5aaf      	SUBI R26,LOW(-(81))
000a43 4fbf      	SBCI R27,HIGH(-(81))
000a44 91ed      	LD   R30,X+
000a45 91fd      	LD   R31,X+
000a46 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x19:
000a47 01de      	MOVW R26,R28
000a48 58ad      	SUBI R26,LOW(-(115))
000a49 4fbf      	SBCI R27,HIGH(-(115))
000a4a 91ed      	LD   R30,X+
000a4b 91fd      	LD   R31,X+
000a4c 9631      	ADIW R30,1
000a4d 93fe      	ST   -X,R31
000a4e 93ee      	ST   -X,R30
000a4f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
000a50 e3e2      	LDI  R30,LOW(50)
000a51 e0f0      	LDI  R31,HIGH(50)
000a52 cf67      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1B:
000a53 e0e0      	LDI  R30,LOW(0)
                +
000a54 01de     +MOVW R26 , R28
000a55 5aa7     +SUBI R26 , LOW ( - 89 )
000a56 4fbf     +SBCI R27 , HIGH ( - 89 )
000a57 93ed     +ST X + , R30
000a58 93ec     +ST X , R30
                 	__CLRW1SX 89
000a59 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1C:
000a5a e0e0      	LDI  R30,LOW(0)
                +
000a5b 01de     +MOVW R26 , R28
000a5c 5aa5     +SUBI R26 , LOW ( - 91 )
000a5d 4fbf     +SBCI R27 , HIGH ( - 91 )
000a5e 93ed     +ST X + , R30
000a5f 93ec     +ST X , R30
                 	__CLRW1SX 91
000a60 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1D:
000a61 e0e1      	LDI  R30,LOW(1)
                +
000a62 01de     +MOVW R26 , R28
000a63 5aaa     +SUBI R26 , LOW ( - 86 )
000a64 4fbf     +SBCI R27 , HIGH ( - 86 )
000a65 93ec     +ST X , R30
                 	__PUTB1SX 86
000a66 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1E:
                +
000a67 01fe     +MOVW R30 , R28
000a68 5ae5     +SUBI R30 , LOW ( - 91 )
000a69 4fff     +SBCI R31 , HIGH ( - 91 )
000a6a 9001     +LD R0 , Z +
000a6b 81f0     +LD R31 , Z
000a6c 2de0     +MOV R30 , R0
                 	__GETW1SX 91
000a6d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x1F:
                +
000a6e 01de     +MOVW R26 , R28
000a6f 5aa7     +SUBI R26 , LOW ( - 89 )
000a70 4fbf     +SBCI R27 , HIGH ( - 89 )
000a71 900d     +LD R0 , X +
000a72 91bc     +LD R27 , X
000a73 2da0     +MOV R26 , R0
                 	__GETW2SX 89
000a74 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x20:
                +
000a75 01de     +MOVW R26 , R28
000a76 5aa5     +SUBI R26 , LOW ( - 91 )
000a77 4fbf     +SBCI R27 , HIGH ( - 91 )
000a78 900d     +LD R0 , X +
000a79 91bc     +LD R27 , X
000a7a 2da0     +MOV R26 , R0
                 	__GETW2SX 91
000a7b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x21:
                +
000a7c 01de     +MOVW R26 , R28
000a7d 5aaa     +SUBI R26 , LOW ( - 86 )
000a7e 4fbf     +SBCI R27 , HIGH ( - 86 )
000a7f 93ec     +ST X , R30
                 	__PUTB1SX 86
000a80 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x22:
000a81 93fa      	ST   -Y,R31
000a82 93ea      	ST   -Y,R30
000a83 940c 01aa 	JMP  _LCD_Str
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x23:
000a85 e0e1      	LDI  R30,LOW(1)
000a86 93ea      	ST   -Y,R30
000a87 e0e0      	LDI  R30,LOW(0)
000a88 93ea      	ST   -Y,R30
000a89 940c 019a 	JMP  _LCD_Pos
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24:
000a8b a1ec      	LDD  R30,Y+36
000a8c e0ab      	LDI  R26,LOW(11)
000a8d 9fea      	MUL  R30,R26
000a8e 01f0      	MOVW R30,R0
000a8f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
000a90 01de      	MOVW R26,R28
000a91 96d0      	ADIW R26,48
000a92 0fea      	ADD  R30,R26
000a93 1ffb      	ADC  R31,R27
000a94 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:115 WORDS
                 SUBOPT_0x26:
000a95 93fa      	ST   -Y,R31
000a96 93ea      	ST   -Y,R30
                +
000a97 ebe0     +LDI R30 , LOW ( 2 * _0x0 + ( 84 ) )
000a98 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 84 ) )
                 	__POINTW1FN _0x0,84
000a99 93fa      	ST   -Y,R31
000a9a 93ea      	ST   -Y,R30
                +
000a9b 01fe     +MOVW R30 , R28
000a9c 58ed     +SUBI R30 , LOW ( - 115 )
000a9d 4fff     +SBCI R31 , HIGH ( - 115 )
000a9e 9001     +LD R0 , Z +
000a9f 81f0     +LD R31 , Z
000aa0 2de0     +MOV R30 , R0
                 	__GETW1SX 115
000aa1 940e 0b6c 	CALL __CWD1
000aa3 940e 0bcf 	CALL __PUTPARD1
                +
000aa5 01fe     +MOVW R30 , R28
000aa6 58eb     +SUBI R30 , LOW ( - 117 )
000aa7 4fff     +SBCI R31 , HIGH ( - 117 )
000aa8 9001     +LD R0 , Z +
000aa9 81f0     +LD R31 , Z
000aaa 2de0     +MOV R30 , R0
                 	__GETW1SX 117
000aab 940e 0b6c 	CALL __CWD1
000aad 940e 0bcf 	CALL __PUTPARD1
                +
000aaf 01fe     +MOVW R30 , R28
000ab0 58e9     +SUBI R30 , LOW ( - 119 )
000ab1 4fff     +SBCI R31 , HIGH ( - 119 )
000ab2 9001     +LD R0 , Z +
000ab3 81f0     +LD R31 , Z
000ab4 2de0     +MOV R30 , R0
                 	__GETW1SX 119
000ab5 940e 0b6c 	CALL __CWD1
000ab7 940e 0bcf 	CALL __PUTPARD1
                +
000ab9 01fe     +MOVW R30 , R28
000aba 58e7     +SUBI R30 , LOW ( - 121 )
000abb 4fff     +SBCI R31 , HIGH ( - 121 )
000abc 9001     +LD R0 , Z +
000abd 81f0     +LD R31 , Z
000abe 2de0     +MOV R30 , R0
                 	__GETW1SX 121
000abf 940e 0b6c 	CALL __CWD1
000ac1 940e 0bcf 	CALL __PUTPARD1
                +
000ac3 01fe     +MOVW R30 , R28
000ac4 58e5     +SUBI R30 , LOW ( - 123 )
000ac5 4fff     +SBCI R31 , HIGH ( - 123 )
000ac6 9001     +LD R0 , Z +
000ac7 81f0     +LD R31 , Z
000ac8 2de0     +MOV R30 , R0
                 	__GETW1SX 123
000ac9 940e 0b6c 	CALL __CWD1
000acb 940e 0bcf 	CALL __PUTPARD1
                +
000acd 01fe     +MOVW R30 , R28
000ace 58e3     +SUBI R30 , LOW ( - 125 )
000acf 4fff     +SBCI R31 , HIGH ( - 125 )
000ad0 9001     +LD R0 , Z +
000ad1 81f0     +LD R31 , Z
000ad2 2de0     +MOV R30 , R0
                 	__GETW1SX 125
000ad3 940e 0b6c 	CALL __CWD1
000ad5 940e 0bcf 	CALL __PUTPARD1
                +
000ad7 01fe     +MOVW R30 , R28
000ad8 58e1     +SUBI R30 , LOW ( - 127 )
000ad9 4fff     +SBCI R31 , HIGH ( - 127 )
000ada 9001     +LD R0 , Z +
000adb 81f0     +LD R31 , Z
000adc 2de0     +MOV R30 , R0
                 	__GETW1SX 127
000add 940e 0b6c 	CALL __CWD1
000adf 940e 0bcf 	CALL __PUTPARD1
                +
000ae1 01fe     +MOVW R30 , R28
000ae2 57ef     +SUBI R30 , LOW ( - 129 )
000ae3 4fff     +SBCI R31 , HIGH ( - 129 )
000ae4 9001     +LD R0 , Z +
000ae5 81f0     +LD R31 , Z
000ae6 2de0     +MOV R30 , R0
                 	__GETW1SX 129
000ae7 940e 0b6c 	CALL __CWD1
000ae9 940e 0bcf 	CALL __PUTPARD1
                +
000aeb 01fe     +MOVW R30 , R28
000aec 57ed     +SUBI R30 , LOW ( - 131 )
000aed 4fff     +SBCI R31 , HIGH ( - 131 )
000aee 9001     +LD R0 , Z +
000aef 81f0     +LD R31 , Z
000af0 2de0     +MOV R30 , R0
                 	__GETW1SX 131
000af1 940e 0b6c 	CALL __CWD1
000af3 940e 0bcf 	CALL __PUTPARD1
                +
000af5 01fe     +MOVW R30 , R28
000af6 57eb     +SUBI R30 , LOW ( - 133 )
000af7 4fff     +SBCI R31 , HIGH ( - 133 )
000af8 9001     +LD R0 , Z +
000af9 81f0     +LD R31 , Z
000afa 2de0     +MOV R30 , R0
                 	__GETW1SX 133
000afb 940e 0b6c 	CALL __CWD1
000afd 940e 0bcf 	CALL __PUTPARD1
                +
000aff 01fe     +MOVW R30 , R28
000b00 57e9     +SUBI R30 , LOW ( - 135 )
000b01 4fff     +SBCI R31 , HIGH ( - 135 )
000b02 9001     +LD R0 , Z +
000b03 81f0     +LD R31 , Z
000b04 2de0     +MOV R30 , R0
                 	__GETW1SX 135
000b05 940e 0b6c 	CALL __CWD1
000b07 940e 0bcf 	CALL __PUTPARD1
000b09 e28c      	LDI  R24,44
000b0a 940e 0959 	CALL _sprintf
000b0c 96e0      	ADIW R28,48
000b0d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x27:
000b0e a1ec      	LDD  R30,Y+36
000b0f e0f0      	LDI  R31,0
000b10 01de      	MOVW R26,R28
000b11 5aad      	SUBI R26,LOW(-(83))
000b12 4fbf      	SBCI R27,HIGH(-(83))
000b13 0fae      	ADD  R26,R30
000b14 1fbf      	ADC  R27,R31
000b15 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
                +
000b16 01de     +MOVW R26 , R28
000b17 5aad     +SUBI R26 , LOW ( - 83 )
000b18 4fbf     +SBCI R27 , HIGH ( - 83 )
000b19 900d     +LD R0 , X +
000b1a 91bc     +LD R27 , X
000b1b 2da0     +MOV R26 , R0
                 	__GETW2SX 83
000b1c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x29:
000b1d 91ed      	LD   R30,X+
000b1e 91fd      	LD   R31,X+
000b1f 9631      	ADIW R30,1
000b20 93fe      	ST   -X,R31
000b21 93ee      	ST   -X,R30
000b22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2A:
000b23 932a      	ST   -Y,R18
000b24 85ed      	LDD  R30,Y+13
000b25 85fe      	LDD  R31,Y+13+1
000b26 93fa      	ST   -Y,R31
000b27 93ea      	ST   -Y,R30
000b28 89e9      	LDD  R30,Y+17
000b29 89fa      	LDD  R31,Y+17+1
000b2a 9509      	ICALL
000b2b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2B:
000b2c 89e8      	LDD  R30,Y+16
000b2d 89f9      	LDD  R31,Y+16+1
000b2e 9734      	SBIW R30,4
000b2f 8be8      	STD  Y+16,R30
000b30 8bf9      	STD  Y+16+1,R31
000b31 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2C:
000b32 85ed      	LDD  R30,Y+13
000b33 85fe      	LDD  R31,Y+13+1
000b34 93fa      	ST   -Y,R31
000b35 93ea      	ST   -Y,R30
000b36 89e9      	LDD  R30,Y+17
000b37 89fa      	LDD  R31,Y+17+1
000b38 9509      	ICALL
000b39 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2D:
000b3a 89a8      	LDD  R26,Y+16
000b3b 89b9      	LDD  R27,Y+16+1
000b3c 9614      	ADIW R26,4
000b3d 940e 0bc7 	CALL __GETW1P
000b3f 83ee      	STD  Y+6,R30
000b40 83ff      	STD  Y+6+1,R31
000b41 93fa      	ST   -Y,R31
000b42 93ea      	ST   -Y,R30
000b43 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2E:
000b44 89a8      	LDD  R26,Y+16
000b45 89b9      	LDD  R27,Y+16+1
000b46 9614      	ADIW R26,4
000b47 940e 0bc7 	CALL __GETW1P
000b49 87ea      	STD  Y+10,R30
000b4a 87fb      	STD  Y+10+1,R31
000b4b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F:
000b4c 01de      	MOVW R26,R28
000b4d 961c      	ADIW R26,12
000b4e 940e 0b5f 	CALL __ADDW2R15
000b50 940e 0bc7 	CALL __GETW1P
000b52 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000b53 91e9      	ld   r30,y+
000b54 91f9      	ld   r31,y+
000b55 9630      	adiw r30,0
000b56 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000b57 e686     +LDI R24 , LOW ( 0xE66 )
000b58 e09e     +LDI R25 , HIGH ( 0xE66 )
                +__DELAY_USW_LOOP :
000b59 9701     +SBIW R24 , 1
000b5a f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xE66
000b5b 95a8      	wdr
000b5c 9731      	sbiw r30,1
000b5d f7c9      	brne __delay_ms0
                 __delay_ms1:
000b5e 9508      	ret
                 
                 __ADDW2R15:
000b5f 2400      	CLR  R0
000b60 0daf      	ADD  R26,R15
000b61 1db0      	ADC  R27,R0
000b62 9508      	RET
                 
                 __ANEGW1:
000b63 95f1      	NEG  R31
000b64 95e1      	NEG  R30
000b65 40f0      	SBCI R31,0
000b66 9508      	RET
                 
                 __LSLW2:
000b67 0fee      	LSL  R30
000b68 1fff      	ROL  R31
000b69 0fee      	LSL  R30
000b6a 1fff      	ROL  R31
000b6b 9508      	RET
                 
                 __CWD1:
000b6c 2f6f      	MOV  R22,R31
000b6d 0f66      	ADD  R22,R22
000b6e 0b66      	SBC  R22,R22
000b6f 2f76      	MOV  R23,R22
000b70 9508      	RET
                 
                 __EQW12:
000b71 17ea      	CP   R30,R26
000b72 07fb      	CPC  R31,R27
000b73 e0e1      	LDI  R30,1
000b74 f009      	BREQ __EQW12T
000b75 27ee      	CLR  R30
                 __EQW12T:
000b76 9508      	RET
                 
                 __LTW12:
000b77 17ae      	CP   R26,R30
000b78 07bf      	CPC  R27,R31
000b79 e0e1      	LDI  R30,1
000b7a f00c      	BRLT __LTW12T
000b7b 27ee      	CLR  R30
                 __LTW12T:
000b7c 9508      	RET
                 
                 __GTW12:
000b7d 17ea      	CP   R30,R26
000b7e 07fb      	CPC  R31,R27
000b7f e0e1      	LDI  R30,1
000b80 f00c      	BRLT __GTW12T
000b81 27ee      	CLR  R30
                 __GTW12T:
000b82 9508      	RET
                 
                 __MULW12U:
000b83 9ffa      	MUL  R31,R26
000b84 2df0      	MOV  R31,R0
000b85 9feb      	MUL  R30,R27
000b86 0df0      	ADD  R31,R0
000b87 9fea      	MUL  R30,R26
000b88 2de0      	MOV  R30,R0
000b89 0df1      	ADD  R31,R1
000b8a 9508      	RET
                 
                 __MULW12:
000b8b d02d      	RCALL __CHKSIGNW
000b8c dff6      	RCALL __MULW12U
000b8d f40e      	BRTC __MULW121
000b8e dfd4      	RCALL __ANEGW1
                 __MULW121:
000b8f 9508      	RET
                 
                 __DIVW21U:
000b90 2400      	CLR  R0
000b91 2411      	CLR  R1
000b92 e190      	LDI  R25,16
                 __DIVW21U1:
000b93 0faa      	LSL  R26
000b94 1fbb      	ROL  R27
000b95 1c00      	ROL  R0
000b96 1c11      	ROL  R1
000b97 1a0e      	SUB  R0,R30
000b98 0a1f      	SBC  R1,R31
000b99 f418      	BRCC __DIVW21U2
000b9a 0e0e      	ADD  R0,R30
000b9b 1e1f      	ADC  R1,R31
000b9c c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000b9d 60a1      	SBR  R26,1
                 __DIVW21U3:
000b9e 959a      	DEC  R25
000b9f f799      	BRNE __DIVW21U1
000ba0 01fd      	MOVW R30,R26
000ba1 01d0      	MOVW R26,R0
000ba2 9508      	RET
                 
                 __DIVW21:
000ba3 d015      	RCALL __CHKSIGNW
000ba4 dfeb      	RCALL __DIVW21U
000ba5 f40e      	BRTC __DIVW211
000ba6 dfbc      	RCALL __ANEGW1
                 __DIVW211:
000ba7 9508      	RET
                 
                 __MODW21U:
000ba8 dfe7      	RCALL __DIVW21U
000ba9 01fd      	MOVW R30,R26
000baa 9508      	RET
                 
                 __MODW21:
000bab 94e8      	CLT
000bac ffb7      	SBRS R27,7
000bad c004      	RJMP __MODW211
000bae 95a0      	COM  R26
000baf 95b0      	COM  R27
000bb0 9611      	ADIW R26,1
000bb1 9468      	SET
                 __MODW211:
000bb2 fdf7      	SBRC R31,7
000bb3 dfaf      	RCALL __ANEGW1
000bb4 dfdb      	RCALL __DIVW21U
000bb5 01fd      	MOVW R30,R26
000bb6 f40e      	BRTC __MODW212
000bb7 dfab      	RCALL __ANEGW1
                 __MODW212:
000bb8 9508      	RET
                 
                 __CHKSIGNW:
000bb9 94e8      	CLT
000bba fff7      	SBRS R31,7
000bbb c002      	RJMP __CHKSW1
000bbc dfa6      	RCALL __ANEGW1
000bbd 9468      	SET
                 __CHKSW1:
000bbe ffb7      	SBRS R27,7
000bbf c006      	RJMP __CHKSW2
000bc0 95a0      	COM  R26
000bc1 95b0      	COM  R27
000bc2 9611      	ADIW R26,1
000bc3 f800      	BLD  R0,0
000bc4 9403      	INC  R0
000bc5 fa00      	BST  R0,0
                 __CHKSW2:
000bc6 9508      	RET
                 
                 __GETW1P:
000bc7 91ed      	LD   R30,X+
000bc8 91fc      	LD   R31,X
000bc9 9711      	SBIW R26,1
000bca 9508      	RET
                 
                 __GETW1PF:
000bcb 9005      	LPM  R0,Z+
000bcc 91f4      	LPM  R31,Z
000bcd 2de0      	MOV  R30,R0
000bce 9508      	RET
                 
                 __PUTPARD1:
000bcf 937a      	ST   -Y,R23
000bd0 936a      	ST   -Y,R22
000bd1 93fa      	ST   -Y,R31
000bd2 93ea      	ST   -Y,R30
000bd3 9508      	RET
                 
                 __SWAPW12:
000bd4 2e1b      	MOV  R1,R27
000bd5 2fbf      	MOV  R27,R31
000bd6 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000bd7 2e1a      	MOV  R1,R26
000bd8 2fae      	MOV  R26,R30
000bd9 2de1      	MOV  R30,R1
000bda 9508      	RET
                 
                 __CPW02:
000bdb 2400      	CLR  R0
000bdc 160a      	CP   R0,R26
000bdd 060b      	CPC  R0,R27
000bde 9508      	RET
                 
                 __SAVELOCR6:
000bdf 935a      	ST   -Y,R21
                 __SAVELOCR5:
000be0 934a      	ST   -Y,R20
                 __SAVELOCR4:
000be1 933a      	ST   -Y,R19
                 __SAVELOCR3:
000be2 932a      	ST   -Y,R18
                 __SAVELOCR2:
000be3 931a      	ST   -Y,R17
000be4 930a      	ST   -Y,R16
000be5 9508      	RET
                 
                 __LOADLOCR6:
000be6 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000be7 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000be8 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000be9 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000bea 8119      	LDD  R17,Y+1
000beb 8108      	LD   R16,Y
000bec 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
000bed 0fac      	ADD  R26,R28
000bee 1fbd      	ADC  R27,R29
                 __INITLOC0:
000bef 9005      	LPM  R0,Z+
000bf0 920d      	ST   X+,R0
000bf1 958a      	DEC  R24
000bf2 f7e1      	BRNE __INITLOC0
000bf3 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  82 r1 :  12 r2 :   0 r3 :   0 r4 :   4 r5 :   3 r6 :   0 r7 :   5 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  98 r17:  86 r18:  39 r19:  24 r20:  20 r21:  24 r22:  25 r23:   5 
r24:  28 r25:   5 r26: 299 r27: 115 r28:  88 r29:   2 r30: 725 r31: 282 
x  :  94 y  : 310 z  :  56 
Registers used: 25 out of 35 (71.4%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  23 add   :  29 
adiw  :  49 and   :   2 andi  :  12 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  41 
brge  :   7 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  11 
brlt  :   3 brmi  :   1 brne  :  80 brpl  :   1 brsh  :   6 brtc  :   3 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   1 bst   :   1 call  : 282 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  24 cls   :   0 clt   :   2 clv   :   0 clz   :   0 com   :   4 
cp    :  15 cpc   :  37 cpi   :  82 cpse  :   0 dec   :   8 des   :   0 
elpm  :   0 eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 
ijmp  :   0 in    :  15 inc   :   3 jmp   :  54 ld    :  92 ldd   : 141 
ldi   : 336 lds   :  15 lpm   :  15 lsl   :   8 lsr   :   0 mov   :  88 
movw  : 110 mul   :  10 muls  :   1 mulsu :   0 neg   :   2 nop   :   1 
or    :   2 ori   :  18 out   :  34 pop   :  10 push  :  10 rcall :  59 
ret   :  77 reti  :   2 rjmp  : 140 rol   :   8 ror   :   0 sbc   :   4 
sbci  :  60 sbi   :   4 sbic  :   0 sbis  :   0 sbiw  :  51 sbr   :   1 
sbrc  :   3 sbrs  :  13 sec   :   0 seh   :   0 sei   :   0 sen   :   0 
ser   :   0 ses   :   0 set   :   2 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    : 179 std   :  35 sts   :  20 sub   :   3 subi  :  75 
swap  :   0 tst   :   4 wdr   :   1 
Instructions used: 68 out of 117 (58.1%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0017e8   5608    512   6120  131072   4.7%
[.dseg] 0x000100 0x0005c7      0    199    199    4351   4.6%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 8 warnings
